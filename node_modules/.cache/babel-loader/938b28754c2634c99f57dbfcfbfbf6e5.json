{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/add1student.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport AuthService from \"../services/auth.service\";\nimport CheckButton from \"react-validation/build/button\";\nimport GoalEdit from \"../components/diagoal.js\";\nimport Homework from \"../components/homeworks\";\nimport ShowHomework from \"../components/showHomework\";\nimport Goal from \"../components/showgoal.js\";\nimport trash from \"./Trash1.png\";\nimport leaf from \"./leaf.png\";\nimport Splashscreen from \"../components/splashscreen.js\"; //this component signs in a teacher allready in the database.\n//using react-validation.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nexport default class UpdateStudent extends Component {\n  //state creation and binding.\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (event, news) => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n\n      if (name === \"dmin\") {\n        this.setState({\n          timeSync: true\n        });\n      }\n    };\n\n    this.handleChangeforform = (event, news) => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (value === \"true\") {\n        this.setState({\n          [name]: true\n        });\n      } else {\n        this.setState({\n          [name]: false\n        });\n      }\n    };\n\n    this.handlehwChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n\n      if (value === \"assignment\") {\n        this.setState({\n          assignment: true,\n          research: false,\n          practice: false\n        });\n      }\n\n      if (value === \"research\") {\n        this.setState({\n          assignment: false,\n          research: true,\n          practice: false\n        });\n      }\n\n      if (value === \"practice\") {\n        this.setState({\n          assignment: false,\n          research: false,\n          practice: true\n        });\n      }\n    };\n\n    this.handlegoal = this.handlegoal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.goalClose = this.goalClose.bind(this);\n    this.Goalfunc = this.Goalfunc.bind(this);\n    this.skip = this.skip.bind(this);\n    this.Homeworkfunc = this.Homeworkfunc.bind(this);\n    this.done = this.done.bind(this);\n    this.next = this.next.bind(this);\n    this.showHomework = this.showHomework.bind(this);\n    this.hideHomeworkClose = this.hideHomeworkClose.bind(this);\n    this.handlegoalsClose = this.handlegoalsClose.bind(this);\n    this.showGoal = this.showGoal.bind(this);\n    this.deleteGoal = this.deleteGoal.bind(this);\n    this.deleteHomework = this.deleteHomework.bind(this);\n    this.handletheclose = this.handletheclose.bind(this);\n    this.handlethegoalclose = this.handlethegoalclose.bind(this);\n    this.done1 = this.done1.bind(this);\n    this.done2 = this.done2.bind(this);\n    this.done3 = this.done3.bind(this);\n    this.done4 = this.done4.bind(this);\n    this.goback = this.goback.bind(this);\n    this.sendtoprofile = this.sendtoprofile.bind(this);\n    this.done5 = this.done5.bind(this);\n    this.handleChangeforform = this.handleChangeforform.bind(this);\n    this.handleHomework = this.handleHomework.bind(this);\n    this.handleHomeworkClose = this.handleHomeworkClose.bind(this);\n    this.skipped = this.skipped.bind(this);\n    this.state = {\n      homeworks: [],\n      main: true,\n      maingoal: \"Change this\",\n      goal: \"\",\n      loading: false,\n      message: \"\",\n      goals: [],\n      Goal: false,\n      description: \"\",\n      maindescription: \"You should change this to be a goal that you would like this student to have.\",\n      next: false,\n      maindate: \"\",\n      checkbox: \"5\",\n      Homework: false,\n      hwchecked: \"\",\n      hwdescription: \"\",\n      hwcheckboxes: \"0\",\n      hwdate: \"\",\n      hwreasearch: \"\",\n      assignment: false,\n      research: false,\n      practice: false,\n      daily: \"100\",\n      hwtype: \"\",\n      days: \"100\",\n      showHomework: false,\n      currentHomework: undefined,\n      currentgoal: undefined,\n      showGoals: false,\n      tempID: 1,\n      HWtempID: 1,\n      tempGoal: \"\",\n      tempDescription: \"\",\n      tempday: \"\",\n      tempcheckboxes: \"\",\n      tempHW: \"\",\n      edited: false,\n      edit: \"\",\n      editedd: \"\",\n      val: false,\n      yesnoCheckboxes: true,\n      yesnoTime: true,\n      timeframePractice: true,\n      starPoints: true,\n      manualsetup: false,\n      syncCheckbox: true,\n      dayorweekTime: \"\",\n      timeSync: true,\n      daysbool: true,\n      timebool: true,\n      smonths: \"\",\n      emonths: \"\",\n      temonths: \"\",\n      tsmonths: \"\",\n      Supporting_Goal: \"\",\n      Homework_Practiced: \"\",\n      timeframePracticebiao: true,\n      min: \"100\",\n      weeklytimebiao: \"60\",\n      dailytimebiao: true,\n      dmin: \"20\",\n      weekStreak: true,\n      dayStreak: true,\n      done: 0,\n      hwsynccheck: true,\n      hwdmin: \"\",\n      HWweeklytimebiao: \"\",\n      hwtimesync: true,\n      hwlink: \"\",\n      struggles: true,\n      hwQuestions: true,\n      yesnoday: true,\n      yesnoweek: true,\n      marginTop: \"\",\n      marginLeft: \"55px\"\n      /*\r\n      homeworks: [],\r\n      main: false,\r\n      maingoal: \"\",\r\n      goal: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n      goals: [],\r\n      Goal: false,\r\n      description: \"\",\r\n      maindescription:\"\",\r\n      next: false,\r\n      maindate: \"\",\r\n      checkbox: \"0\",\r\n      Homework: false,\r\n      hwchecked: \"\",\r\n      hwdescription: \"\",\r\n      hwcheckboxes: \"0\",\r\n      hwdate: \"\",\r\n      hwreasearch: \"\",\r\n      assignment: false,\r\n      research: false,\r\n      practice: false,\r\n      daily: \"\",\r\n      hwtype: \"\",\r\n      days: \"\",\r\n      showHomework: false,\r\n      currentHomework: undefined,\r\n      currentgoal: undefined,\r\n      showGoals: false,\r\n      tempID: 1,\r\n      HWtempID:1,\r\n      tempGoal: \"\",\r\n      tempDescription: \"\",\r\n      tempday: \"\",\r\n      tempcheckboxes: \"\",\r\n      tempHW: \"\",\r\n      edited: false,\r\n      edit: \"\",\r\n      editedd: \"\",\r\n      val: false,\r\n      yesnoCheckboxes: false,\r\n      yesnoTime: false,\r\n      timeframePractice: false,\r\n      starPoints: false,\r\n      manualsetup: false,\r\n      syncCheckbox: false,\r\n      dayorweekTime: \"\",\r\n      timeSync: false,\r\n      daysbool: false,\r\n      timebool: false,\r\n      smonths: \"\",\r\n      emonths: \"\",\r\n      temonths: \"\",\r\n      tsmonths: \"\",\r\n      Supporting_Goal: \"\",\r\n      Homework_Practiced: \"\",\r\n      timeframePracticebiao: false,\r\n      min: \"\",\r\n      weeklytimebiao: \"\",\r\n      dailytimebiao: false,\r\n      dmin: \"\",\r\n      weekStreak: false,\r\n      dayStreak: false,\r\n      done: 0,\r\n      hwsynccheck: false,\r\n      hwdmin: \"\",\r\n      HWweeklytimebiao: \"\",\r\n      hwtimesync: false,\r\n      hwlink: \"\",\r\n      struggles: true,\r\n      hwQuestions: true,\r\n      yesnoday: false,\r\n      yesnoweek: false,\r\n      marginTop: \"\",\r\n      marginLeft: \"55px\"\r\n      */\n\n    };\n  } //handles all changes with state.\n\n\n  goback() {\n    this.props.history.push(\"/profile\");\n    window.location.reload();\n  }\n\n  sendtoprofile() {\n    window.location.reload();\n  }\n\n  componentDidMount() {\n    if (parseInt(window.innerWidth) <= 600) {\n      this.setState({\n        marginTop: \"310px\",\n        marginLeft: \"0px\"\n      });\n    }\n\n    this.done();\n  }\n\n  Goalfunc() {\n    this.setState({\n      Goal: true\n    });\n  }\n\n  Homeworkfunc() {\n    this.setState({\n      Homework: true\n    });\n  }\n\n  showHomework(homework) {\n    this.setState({\n      showHomework: true,\n      currentHomework: homework\n    });\n  }\n\n  showGoal(goal) {\n    this.setState({\n      showGoals: true,\n      currentgoal: goal\n    });\n  } //submites for login using the controller to connect with backend. Sends to the teacher profile if teacher or the student if back end spits out student.\n\n\n  handlegoal(e) {\n    e.preventDefault();\n    let newarr = this.state.goals;\n    let newGoal = {\n      title: this.state.goal,\n      description: this.state.description,\n      date: \"no due date\",\n      tempID: this.state.tempID\n    };\n    newarr.push(newGoal);\n    let x = this.state.tempID + 1;\n    this.setState({\n      goals: newarr,\n      tempID: x\n    });\n    this.goalClose();\n  }\n\n  async handleHomework(e) {\n    e.preventDefault();\n\n    if (this.state.hwtype === \"\") {\n      await this.setState({\n        hwtype: \"assignment\"\n      });\n    }\n\n    let newarr = this.state.homeworks;\n    let hwID = this.state.HWtempID + 1;\n    this.setState({\n      HWtempID: hwID\n    });\n    let newHW = {\n      title: this.state.homework,\n      hwchecked: this.state.hwchecked,\n      hwcheckboxes: this.state.hwcheckboxes,\n      hwtype: this.state.hwtype,\n      description: this.state.hwdescription,\n      date: this.state.hwdate,\n      daily: this.state.daily,\n      HWtempID: this.state.HWtempID,\n      hwsynccheck: this.state.hwsynccheck,\n      hwlink: this.state.hwlink,\n      hwstruggles: this.state.struggles,\n      hwQuestions: this.state.hwQuestions,\n      hwdmin: this.state.hwdmin,\n      HWweeklytimebiao: this.state.HWweeklytimebiao,\n      hwtimesync: this.state.hwtimesync,\n      yesnoday: this.state.yesnoday,\n      yesnoweek: this.state.yesnoweek,\n      totalWeekTime: {\n        total: \"0\"\n      },\n      hwtime: {\n        mon: \"0\",\n        tues: \"0\",\n        wed: \"0\",\n        thur: \"0\",\n        fri: \"0\",\n        sat: \"0\",\n        sun: \"0\"\n      },\n      firstMessage: false,\n      messages: [],\n      syncedCheckboxes: {\n        mon: false,\n        tues: false,\n        wed: false,\n        thur: false,\n        fri: false,\n        sat: false,\n        sun: false\n      }\n    };\n    newarr.push(newHW);\n    this.setState({\n      homeworks: newarr\n    });\n    this.handleHomeworkClose();\n  }\n\n  async done() {\n    //add practicw streak\n    AuthService.doitAll(\n    /*this is everything for checkboxes*/\n    this.props.state.realtimestudent._id,\n    /*done*/\n    this.state.yesnoCheckboxes, this.state.syncCheckbox, this.state.checkbox,\n    /*this is everything for time. timebool is conditional clause if I want*/\n    this.state.yesnoTime,\n    /*done*/\n    this.state.timeSync,\n    /*done*/\n    this.state.weeklytimebiao,\n    /*done*/\n    this.state.dailytimebiao,\n    /*done*/\n    this.state.dmin,\n    /*done*/\n    this.state.timebool,\n    /*done*/\n    \"0\",\n    /*done*/\n\n    /*this is days practiced. daybool also conditional */\n    this.state.daysbool,\n    /*done*/\n    \"0\",\n    /*done*/\n\n    /*updating time frame practiced for days.*/\n    this.state.days,\n    /*done*/\n    this.state.smonths,\n    /*done*/\n    this.state.emonths,\n    /*done*/\n    this.state.timeframePracticebiao,\n    /*done*/\n    this.state.min,\n    /*done*/\n    this.state.tsmonths,\n    /*done*/\n    this.state.temonths,\n    /*done*/\n\n    /*updating streak info and star points (last two)*/\n    this.state.dayStreak,\n    /*done*/\n    this.state.weekStreak,\n    /*done*/\n    this.state.starPoints,\n    /*done*/\n    this.state.manualsetup,\n    /*done*/\n\n    /*add the goals first one is for conditional clause if I want.*/\n    this.state.goals[0],\n    /*done*/\n    this.state.goals,\n    /*done*/\n    this.state.maingoal,\n    /*done*/\n    this.state.maindescription,\n    /*done*/\n    this.state.maindate,\n    /*done*/\n\n    /*add the homeworks*/\n    this.state.homeworks,\n    /*done*/\n\n    /*done updating new student.*/\n    true\n    /*done*/\n    ).then(response => {\n      console.log(response.data);\n\n      if (response.data.student) {\n        window.location.reload();\n      }\n    }); //this.done2();\n    //const delay = ms => new Promise(res => setTimeout(res, ms));\n    //await delay(5000);\n    //this.done3();\n    // await delay(5000);\n    //this.done4();\n    //await delay(5000);\n    //this.done1();\n  }\n\n  async done2() {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    if (this.state.yesnoCheckboxes) {\n      if (this.state.syncCheckbox) {\n        AuthService.syncCheckboxes(this.props.state.realtimestudent._id, this.state.checkbox);\n        await delay(3000);\n      } else {\n        AuthService.checkboxes(this.props.state.realtimestudent._id, this.state.checkbox);\n        await delay(3000);\n      }\n    }\n\n    if (this.state.yesnoTime) {\n      AuthService.timeSync(this.props.state.realtimestudent._id, this.state.timeSync, this.state.weeklytimebiao, this.state.dailytimebiao, this.state.dmin);\n      await delay(3000);\n    }\n\n    if (this.state.timebool) {\n      AuthService.timeTotal(this.props.state.realtimestudent._id, \"0\");\n      await delay(3000);\n    }\n\n    if (this.state.daysbool) {\n      AuthService.dayTotal(this.props.state.realtimestudent._id, \"0\");\n      await delay(6000);\n    }\n\n    if (this.state.timeframePractice) {\n      AuthService.updateSetDays(this.props.state.realtimestudent._id, this.state.days, this.state.smonths, this.state.emonths, this.state.timeframePracticebiao, this.state.min, this.state.tsmonths, this.state.temonths);\n      await delay(3000);\n    }\n  }\n\n  async done3() {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    if (this.state.dayStreak) {\n      AuthService.setDayStreak(this.props.state.realtimestudent._id, this.state.dayStreak);\n      await delay(3000);\n    }\n\n    if (this.state.weekStreak) {\n      AuthService.setWeekStreak(this.props.state.realtimestudent._id, this.state.weekStreak);\n      await delay(3000);\n    }\n\n    if (this.state.starPoints) {\n      if (this.state.manualsetup) {\n        AuthService.starPoints(this.props.state.realtimestudent._id, true);\n        await delay(3000);\n      } else {\n        AuthService.starPoints(this.props.state.realtimestudent._id, false);\n        await delay(3000);\n      }\n    }\n  }\n\n  async done4() {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    if (this.state.goals[0]) {\n      AuthService.AddGoals(this.props.state.realtimestudent._id, false, this.state.goals);\n      await delay(5000);\n    }\n\n    if (this.state.maingoal !== \"\") {\n      AuthService.AddGoal(this.props.state.realtimestudent._id, true, this.state.maingoal, this.state.maindescription, this.state.maindate);\n      await delay(3000);\n    }\n\n    if (this.state.homeworks[0]) {\n      AuthService.AddHomeworks(this.props.state.realtimestudent._id, this.state.homeworks);\n      await delay(3000);\n    }\n\n    await delay(3000);\n  }\n\n  async done1() {\n    AuthService.doneUpdatingnewStudent(this.props.state.realtimestudent._id, true).then(response => {\n      console.log(response.data);\n\n      if (response.data.student) {\n        window.location.reload();\n      }\n    });\n  }\n\n  async done5() {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    AuthService.AddGoals(this.props.state.realtimestudent._id, false, this.state.goals);\n    await delay(6000);\n    AuthService.AddGoal(this.props.state.realtimestudent._id, true, this.state.maingoal, this.state.maindescription, this.state.maindate);\n    await delay(6000);\n    AuthService.AddHomeworks(this.props.state.realtimestudent._id, this.state.homeworks);\n    await delay(6000);\n    AuthService.setDayStreak(this.props.state.realtimestudent._id, this.state.dayStreak);\n    await delay(6000);\n  }\n\n  goalClose() {\n    this.setState({\n      Goal: false,\n      main: false,\n      goal: \"\",\n      description: \"\"\n    });\n  }\n\n  handleHomeworkClose() {\n    this.setState({\n      Homework: false,\n      hwdate: \"\",\n      daily: \"\",\n      homework: \"\",\n      hwdescription: \"\",\n      hwcheckboxes: \"\",\n      hwchecked: \"\",\n      hwtype: \"assignment\",\n      assignment: false,\n      research: false,\n      practice: false\n    });\n  }\n\n  next() {\n    this.setState({\n      next: true\n    });\n  }\n\n  skip() {\n    this.setState({\n      next: !this.state.next\n    });\n  }\n\n  skipped() {\n    AuthService.doneUpdatingnewStudent(this.props.state.realtimestudent._id, true);\n    window.location.reload();\n  }\n\n  deleteHomework(homework) {\n    let ar = [];\n\n    for (let i = 0; i < this.state.homeworks.length; i++) {\n      if (this.state.homeworks[i].HWtempID !== homework.HWtempID) {\n        ar.push(this.state.homeworks[i]);\n      }\n    }\n\n    this.setState({\n      homeworks: ar\n    });\n  }\n\n  deleteGoal(goal) {\n    let ar = [];\n\n    for (let i = 0; i < this.state.goals.length; i++) {\n      if (this.state.goals[i].tempID !== goal.tempID) {\n        ar.push(this.state.goals[i]);\n      }\n    }\n\n    this.setState({\n      goals: ar\n    });\n  }\n\n  handletheclose(id, title, description, type, day, checkboxes, date) {\n    let newHW = {\n      title: title,\n      hwcheckboxes: checkboxes,\n      hwtype: type,\n      description: description,\n      date: date,\n      daily: day,\n      HWtempID: id\n    };\n    let ar = [];\n\n    for (let i = 0; i < this.state.homeworks.length; i++) {\n      if (this.state.homeworks[i].HWtempID === newHW.HWtempID) {\n        ar.push(newHW);\n      } else {\n        ar.push(this.state.homeworks[i]);\n      }\n    }\n\n    this.setState({\n      homeworks: ar\n    });\n  }\n\n  hideHomeworkClose() {\n    this.setState({\n      showHomework: false\n    });\n  }\n\n  handlethegoalclose() {\n    this.setState({\n      showGoals: false\n    });\n  }\n\n  handlegoalsClose(id, title, description) {\n    let goalz = {\n      title: title,\n      description: description,\n      tempID: id\n    };\n    let ar = [];\n\n    for (let i = 0; i < this.state.goals.length; i++) {\n      if (this.state.goals[i].tempID === goalz.tempID) {\n        ar.push(goalz);\n      } else {\n        ar.push(this.state.goals[i]);\n      }\n    }\n\n    this.setState({\n      goals: ar\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Splashscreen, {\n        closesplash: this.sendtoprofile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n/*\r\n    render() {\r\n\r\n        //login page for the screen. \r\n        return (\r\n            {/** \r\n            <div className=\"z1\">\r\n                <div className=\"popup-box\" style={{ zIndex: \"1010\" }}>\r\n                    <div className=\"diapicbox4b \" style={{ zIndex: \"1010\" }}>\r\n                        \r\n\r\n                        {this.state.Goal && (<GoalEdit handlegoal={this.handlegoal} handleChange={this.handleChange} handleClose={this.goalClose} main={this.state.main} />)}\r\n\r\n                        {this.state.Homework && (<Homework handleHomework={this.handleHomework} handleChange={this.handlehwChange} handleClose={this.handleHomeworkClose} practice={this.state.practice} research={this.state.research} assignment={this.state.assignment} />)}\r\n                        {this.state.showHomework && (<ShowHomework homework={this.state.currentHomework} hideHomework={this.hideHomeworkClose} role=\"teacher\" handleChange={this.handleChange} edited={this.edited} handletheclose={this.handletheclose}/> )}\r\n                        {this.state.showGoals && (<Goal Goal={this.state.currentgoal} handleClose={this.handlethegoalclose} role=\"teacher\" handleChange={this.handleChange} handletheclose={this.handlegoalsClose}/>)}\r\n                        <div className=\"homeworkScroll1\">\r\n                        <div className=\"fill1 centerizeaa \" >\r\n                            <h1 style={{  }}>Additional Setup</h1>\r\n                                <div className=\"\" style={{ display:\"flex\", flexDirection:\"row\", marginLeft:\"20px\", width:\"320px\" }}> <p>You can also </p> <p className=\"rowss1 huv \" style={{ color: \"#696eb5\", marginLeft:\"3px\", marginRight:\"3px\"}} onClick={this.done}><b>skip</b></p><p>for now. or go</p> <p className=\"rowss1 huv \" style={{ color: \"#696eb5\", marginLeft:\"3px\", marginRight:\"3px\"}} onClick={this.goback}><b>back.</b></p> </div>\r\n\r\n                                <h2 style={{ color: \"gray\" }}>Set Goals For Student</h2>\r\n\r\n\r\n                                <div style={{ marginTop: \"5px\", width: \"250px\", marginLeft: \"30px\" }} className=\"form-group\" >\r\n                                <label htmlFor=\"\"><h5>Main Goal For Student:</h5></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"maingoal\"\r\n                                    value={this.state.maingoal}\r\n                                    onChange={this.handleChange}\r\n                                    validations={[required]}\r\n                                />\r\n                            </div>\r\n\r\n                                <div className=\"form-group\" style={{ maxWidth: \"375px\", marginLeft: \"30px\", marginBottom:\"50px\", marginRight:\"10px\" }} >\r\n                                <label htmlFor=\"maindescription\"><h5>Goal Description:</h5></label>\r\n                                <textarea\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    rows=\"3\"\r\n                                    id=\"maindescription\"\r\n                                    value={this.state.maindescription}\r\n                                    onChange={this.handleChange}\r\n                                    name=\"maindescription\"\r\n                                ></textarea>\r\n                            </div>\r\n                                <h5 style={{ marginLeft: \"30px\" }}>Add Supporting Goals for Student:</h5>\r\n\r\n                                <div style={{ marginLeft: \"30px\", marginTop:\"17px\", marginBottom:\"27px\", height: \"230px\", width: \"270px\",  border: \"2px solid green\", borderRadius:\"7%\"  }}>\r\n                                    <div className=\"homeworkScroll1 \" style={{ height: \"220px\", marginTop:\"5px\", marginLeft:\"10px\" }}>\r\n                                {this.state.goals.map((goal, index) =>\r\n                                    <div className=\"checkboxstuff4 \" key={index}  >\r\n                                        \r\n                                        <p className=\"huv rowss\" onClick={this.showGoal.bind(this, goal)} >{goal.title} </p>\r\n                                        <img\r\n                                            src={trash}\r\n                                            alt=\"delete\"\r\n                                            onClick={this.deleteGoal.bind(this, goal)}\r\n                                            className=\"huv \"\r\n                                            style={{ width: \"15px\", height: \"15px\", opacity: \".5\", marginTop:\"5px\" }}\r\n\r\n                                        />\r\n                                            </div>\r\n                                    \r\n                                        )}\r\n                                      \r\n                                        \r\n                                        <div className=\"btn  btn-block\"  onClick={this.Goalfunc}><span className=\"checkboxstuff1\" style={{ width: \"150\" }}>\r\n                                            <img\r\n                                                src={leaf}\r\n                                                className=\"edita\"\r\n                                                style={{ width: \"20px\", height: \"20px\" }}\r\n\r\n\r\n                                            />\r\n                                            <p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n                                        </span></div>\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div >\r\n                                   \r\n                            </div>\r\n\r\n\r\n                        \r\n                        </div>\r\n                        <div style={{marginTop: this.state.marginTop}}>\r\n\r\n                            <div className=\"fill1 columbized\" >\r\n\r\n                                    <h2 style={{ marginBottom: \"15px\", color: \"gray\"  }}>Setup Checkboxes:</h2>\r\n                                    <div className=\"form-group\" style={{ marginLeft: \"55px\" }} >\r\n                                    <label>Should this student have daily checkboxes?</label>\r\n                                    <select  htmlFor=\"yesnoCheckboxes\" onChange={this.handleChangeforform} name=\"yesnoCheckboxes\" id=\"yesnoCheckboxes\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>Not Sure Yet</option>\r\n                                       \r\n                                    </select>\r\n                                </div>\r\n                                {this.state.yesnoCheckboxes ? (<div style={{ marginLeft: \"75px\" }}>\r\n                                    <div  className=\"form-group\" >\r\n                                        <label>How many days should the student practice?</label>\r\n                                        <select  htmlFor=\"checkbox\" onChange={this.handleChange} name=\"checkbox\" id=\"checkbox\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"6\">6</option>\r\n                                            <option value=\"7\">7</option>\r\n                                            <option value=\"0\">I'm not sure how many yet</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div  className=\"form-group\" >\r\n                                        <label>Should practice days sync with the week?</label>\r\n                                        <select  htmlFor=\"syncCheckbox\" onChange={this.handleChangeforform} name=\"syncCheckbox\" id=\"syncCheckbox\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n                                            <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                        </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label>Track daily streak?</label>\r\n                                            <select htmlFor=\"dayStreak\" onChange={this.handleChangeforform} name=\"dayStreak\" id=\"dayStreak\">\r\n                                                <option value=\"\"></option>\r\n                                                <option value={true}>Yes</option>\r\n                                                <option value={false}>No</option>\r\n                                                <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                </div>) : (<div></div>)}\r\n                                    <h5 style={{ marginTop: \"7px\", marginLeft: \"30px\"  }}>Setup Times:</h5>\r\n\r\n                                    <div className=\"form-group\" style={{  marginLeft: \"55px\" }}>\r\n                                    <label>Would you like to set up a time goal?</label>\r\n                                    <select  htmlFor=\"yesnoTime\" onChange={this.handleChangeforform} name=\"yesnoTime\" id=\"yesnoTime\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                    </select>\r\n                                    </div>\r\n                                   \r\n\r\n                                    {this.state.yesnoTime ? (<div style={{ marginLeft: \"70px\" }}>\r\n\r\n                                        <div className=\"form-group\"  >\r\n                                            <label htmlFor=\"weeklytimebiao\">How much time should the student practice weekly?</label>\r\n                                            <input\r\n\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"weeklytimebiao\"\r\n                                                style={{ width: \"60px\" }}\r\n                                                onChange={this.handleChange}\r\n                                                name=\"weeklytimebiao\"\r\n                                            /><p>Minutes</p>\r\n\r\n\r\n                                        </div>\r\n\r\n                                        \r\n                                            <div className=\"form-group\" style={{  }}>\r\n                                                <label htmlFor=\"dmin\">How much time should the student practice daily?</label>\r\n                                                <input\r\n\r\n                                                    type= \"text\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"dmin\"\r\n                                                    style={{ width: \"60px\" }}\r\n                                                    onChange={this.handleChange}\r\n                                                    name=\"dmin\"\r\n                                                /><p>Minutes</p>\r\n\r\n\r\n                                            </div>\r\n                                    \r\n                                        \r\n\r\n                                  \r\n                                    \r\n                                </div>) : (<div></div>)}\r\n                                \r\n                                    <h5 style={{ marginTop: \"10px\", marginLeft: \"30px\" }}>Add Homework for this Student:</h5>\r\n\r\n                                \r\n                                            <div style={{ marginLeft: \"30px\", marginTop: \"23px\", marginBottom: \"50px\", height: \"230px\", width: \"270px\", border: \"2px solid green\", borderRadius: \"7%\" }}>\r\n                                                <div className=\"homeworkScroll1 \" style={{ height: \"220px\",  marginTop:\"5px\", marginLeft:\"10px\" }}>\r\n                                    {this.state.homeworks.map((homework, index) =>\r\n                                        <div className=\"checkboxstuff4 \" key={index} >\r\n                                            <p className=\"huv rowss\" onClick={this.showHomework.bind(this, homework)}> {homework.title}</p>\r\n                                            <img\r\n                                                src={trash}\r\n                                                alt=\"delete\"\r\n                                                onClick={this.deleteHomework.bind(this, homework)}\r\n                                                className=\"huv \"\r\n                                                style={{ width: \"15px\", height: \"15px\", opacity: \".5\", marginTop:\"5px\",}}\r\n\r\n                                            />\r\n\r\n                                        </div>\r\n                                            )}\r\n                                            <div className=\"btn  btn-block\" onClick={this.Homeworkfunc}><span className=\"checkboxstuff1\" style={{ width: \"150\" }}>\r\n                                                <img\r\n                                                    src={leaf}\r\n                                                    className=\"edita\"\r\n                                                    style={{ width: \"20px\", height: \"20px\" }}\r\n\r\n\r\n                                                />\r\n                                                <p>+</p><p className=\"rowss huv\">Homework</p>\r\n                                            </span></div>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                              \r\n                                    <h5 style={{ marginTop: \"20px\",  }}>Other Student Settings:</h5>\r\n                                    {this.state.yesnoCheckboxes?(<div>\r\n                                        <div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n                                        <label>Do you want to track days practiced for the year? </label>\r\n                                        <select htmlFor=\"daysbool\" onChange={this.handleChangeforform} name=\"daysbool\" id=\"daysbool\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n    \r\n    \r\n                                        </select>\r\n                                    </div></div>\r\n                                    ):(<div></div>)}\r\n                                    {this.state.yesnoTime?(\r\n                                        <div className=\"form-group\" style={{ marginLeft: \"30px\" }} >\r\n                                        <label>Do you want to track time practiced for the year? </label>\r\n                                        <select htmlFor=\"timebool\" onChange={this.handleChangeforform} name=\"timebool\" id=\"timebool\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n    \r\n                                        </select>\r\n                                        </div>\r\n                                    ):(<div></div>)}\r\n\r\n                                    \r\n                                    \r\n                                   \r\n\r\n                                   <div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n                                    <label>Would you like to set up a goal for practice days? </label>\r\n                                    <select htmlFor=\"timeframePractice\" onChange={this.handleChangeforform} name=\"timeframePractice\" id=\"timeframePractice\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>I'll set this up later.</option>\r\n\r\n\r\n                                    </select>\r\n                                </div>\r\n                                {this.state.timeframePractice ? (<div style={{ marginLeft: \"55px\" }}>\r\n                                    <div className=\"form-group\" >\r\n                                        <label htmlFor=\"days\">How many days?</label>\r\n                                        <input\r\n\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"days\"\r\n                                            style={{ width: \"60px\" }}\r\n                                            onChange={this.handleChange}\r\n                                            name=\"days\"\r\n                                        /></div></div>):(<div></div>)}\r\n\r\n {/*\r\n                                    </div>\r\n                                        <div className=\"form-group checkboxstuff2foradd\" style={{ marginleft: \"55px\", marginBottom:\"15px\" }}>\r\n                                        <div>\r\n                                        <p>From:</p>\r\n                                        <input\r\n                                            id=\"smonths\"\r\n                                            name=\"smonths\"\r\n                                            style={{ width: \"200px\" }}\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                            onChange={this.handleChange}\r\n\r\n                                            />\r\n                                            </div>\r\n                                        <div style={{  marginLeft: this.state.marginLeft }}>\r\n                                        <p>To:</p>\r\n                                        <input\r\n                                            id=\"emonths\"\r\n                                            name=\"emonths\"\r\n                                                style={{ width: \"200px\" }}\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                            onChange={this.handleChange}\r\n\r\n                                            />\r\n                                            </div>\r\n\r\n\r\n                                    </div>\r\n                                    </div>) : (<div></div>)}\r\n\r\n                                    <div className=\"form-group\" style={{ marginLeft: \"30px\" }} >\r\n                                        <label>Would you like to set up goal for practice minutes? </label>\r\n                                        <select htmlFor=\"timeframePracticebiao\" onChange={this.handleChangeforform} name=\"timeframePracticebiao\" id=\"timeframePracticebiao\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n                                            <option value={false}>I'll set this up later.</option>\r\n\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    {this.state.timeframePracticebiao ? (<div style={{ marginLeft: \"55px\" }}>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"min\">Practice Minutes</label>\r\n                                            <input\r\n\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"min\"\r\n                                                style={{ width: \"60px\" }}\r\n                                                onChange={this.handleChange}\r\n                                                name=\"min\"\r\n                                            />\r\n\r\n\r\n                                        </div></div>):(<div></div>)}\r\n                                        {/*}\r\n                                        <div className=\"form-group checkboxstuff2foradd\" >\r\n                                            <div>\r\n                                                <p>From:</p>\r\n                                                <input\r\n                                                    id=\"tsmonths\"\r\n                                                    name=\"tsmonths\"\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n\r\n\r\n                                                    onChange={this.handleChange}\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div style={{ marginLeft: this.state.marginLeft }}>\r\n                                                <p>To:</p>\r\n                                                <input\r\n                                                    id=\"temonths\"\r\n                                                    name=\"temonths\"\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n\r\n\r\n                                                    onChange={this.handleChange}\r\n\r\n                                                />\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>) : (<div></div>)}*/\n\n/*}\r\n<div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n<label>Do you want to track Star Points?</label>\r\n<select  htmlFor=\"starPoints\" onChange={this.handleChangeforform} name=\"starPoints\" id=\"starPoints\">\r\n<option value=\"\"></option>\r\n<option value={true}>Yes</option>\r\n<option value={false}>No</option>\r\n</select>\r\n<p style={{color:\"gray\", fontSize:\"14px\", marginTop:\"5px\", width:\"90%\"}}>(Star Points help gamify student accountability. Students receive Star Points whenever they complete a goal or finish their homework.)</p>\r\n</div>\r\n</div>\r\n</div> \r\n<div>\r\n<div className=\"fill1 columbized\" >\r\n{/*}\r\n<h2 style={{ marginTop: \"25px\", color:\"gray\" }}>Set Up Star Points For Student</h2>\r\n             {this.state.starPoints ? (<div style={{ marginLeft: \"50px\" }}>\r\n<div className=\"form-group\" >\r\n<label>Would you like to manually setup star points or us legato automatic system?</label>\r\n<select  htmlFor=\"manualsetup\" onChange={this.handleChangeforform} name=\"manualsetup\" id=\"manualsetup\">\r\n<option value=\"\"></option>\r\n<option value={true}>Manually set up.</option>\r\n<option value={false}>Do it for me.</option>\r\n</select>\r\n</div>\r\n{this.state.manualsetup ? (<div style={{color:\"#8C6057\"}}>Manual setup is not available during the testing phase. </div>) : (<div></div>)}\r\n       </div>) : (<div></div>)}\r\n*/\n\n/*}\r\n{/*}\r\n<div style={{ alignSelf: \"flexEnd\", marginTop:\"30px\" }}>\r\n<div onClick={this.done} className=\"huv rowss\">skip</div>\r\n  <div style={{ width: \"35%\", marginTop:\"7px\" }} className=\"form-group\">\r\n      <button onClick={this.done}\r\n              className=\"btn btn-block backgroundColors\"\r\n        >\r\n          Finish\r\n          \r\n  </button>\r\n  </div>\r\n    \r\n  \r\n</div>\r\n<div style={{width:\"200px\", height:\"20px\", opacity:\"0\"}}>Spacer</div>\r\n</div>\r\n</div> \r\n                            \r\n</div>\r\n                \r\n</div>\r\n</div>\r\n</div>\r\n*/\n\n/*}\r\n           \r\n                        \r\n      );\r\n  }\r\n}\r\n/*\r\n* \r\n* <div>\r\n                                      <h4>Manual setup for Star Points.</h4>\r\n                                      <div className=\"form-group\" >\r\n                                          <label htmlFor=\"lastName\">Main Goal Complete</label>\r\n                                          <input\r\n                                              style={{ width: \"40%\" }}\r\n                                              type=\"text\"\r\n                                              className=\"form-control\"\r\n                                              id=\"days\"\r\n                                                onChange={this.handleChange}\r\n                                              name=\"days\"\r\n                                          />\r\n                                      </div>\r\n                                      <div className=\"form-group\" >\r\n                                          <label htmlFor=\"Supporting_Goal\">Supporting Goal complete</label>\r\n                                          <input\r\n                                              style={{ width: \"40%\" }}\r\n                                              type=\"text\"\r\n                                              className=\"form-control\"\r\n                                              id=\"Supporting_Goal\"\r\n                                                onChange={this.handleChange}\r\n                                              name=\"Supporting_Goal\"\r\n                                          />\r\n                                      </div>\r\n                                      <div className=\"form-group\" >\r\n                                          <label htmlFor=\"Homework_Practiced\">Homework Practiced</label>\r\n                                          <input\r\n                                              style={{ width: \"40%\" }}\r\n                                              type=\"text\"\r\n                                              className=\"form-control\"\r\n                                              id=\"Homework_Practiced\"\r\n                                                onChange={this.handleChange}\r\n                                              name=\"Homework_Practiced\"\r\n                                          />\r\n                                      </div>\r\n                                      <div className=\"form-group\" >\r\n                                          <label htmlFor=\"lastName\">checked for all homework</label>\r\n                                          <input\r\n                                              style={{ width: \"40%\" }}\r\n                                              type=\"text\"\r\n                                              className=\"form-control\"\r\n                                              id=\"days\"\r\n                                                onChange={this.handleChange}\r\n                                              name=\"days\"\r\n                                          />\r\n                                      </div>\r\n                                      <div className=\"form-group\" >\r\n                                          <label htmlFor=\"lastName\">Practice time logged</label>\r\n                                          <input\r\n                                              style={{ width: \"40%\" }}\r\n                                              type=\"text\"\r\n                                              className=\"form-control\"\r\n                                              id=\"days\"\r\n                                                onChange={this.handleChange}\r\n                                              name=\"days\"\r\n                                          />\r\n                                      </div>\r\n                                      <div className=\"form-group\" >\r\n                                          <label htmlFor=\"lastName\">Done with days practiced in timeframe</label>\r\n                                          <input\r\n                                              style={{ width: \"40%\" }}\r\n                                              type=\"text\"\r\n                                              className=\"form-control\"\r\n                                              id=\"days\"\r\n                                                onChange={this.handleChange}\r\n                                              name=\"days\"\r\n                                          />\r\n                                      </div>\r\n                                  </div>\r\n*/","map":{"version":3,"sources":["/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/add1student.js"],"names":["React","Component","Form","Input","AuthService","CheckButton","GoalEdit","Homework","ShowHomework","Goal","trash","leaf","Splashscreen","required","value","UpdateStudent","constructor","props","handleChange","event","news","name","target","setState","timeSync","handleChangeforform","handlehwChange","assignment","research","practice","handlegoal","bind","goalClose","Goalfunc","skip","Homeworkfunc","done","next","showHomework","hideHomeworkClose","handlegoalsClose","showGoal","deleteGoal","deleteHomework","handletheclose","handlethegoalclose","done1","done2","done3","done4","goback","sendtoprofile","done5","handleHomework","handleHomeworkClose","skipped","state","homeworks","main","maingoal","goal","loading","message","goals","description","maindescription","maindate","checkbox","hwchecked","hwdescription","hwcheckboxes","hwdate","hwreasearch","daily","hwtype","days","currentHomework","undefined","currentgoal","showGoals","tempID","HWtempID","tempGoal","tempDescription","tempday","tempcheckboxes","tempHW","edited","edit","editedd","val","yesnoCheckboxes","yesnoTime","timeframePractice","starPoints","manualsetup","syncCheckbox","dayorweekTime","daysbool","timebool","smonths","emonths","temonths","tsmonths","Supporting_Goal","Homework_Practiced","timeframePracticebiao","min","weeklytimebiao","dailytimebiao","dmin","weekStreak","dayStreak","hwsynccheck","hwdmin","HWweeklytimebiao","hwtimesync","hwlink","struggles","hwQuestions","yesnoday","yesnoweek","marginTop","marginLeft","history","push","window","location","reload","componentDidMount","parseInt","innerWidth","homework","e","preventDefault","newarr","newGoal","title","date","x","hwID","newHW","hwstruggles","totalWeekTime","total","hwtime","mon","tues","wed","thur","fri","sat","sun","firstMessage","messages","syncedCheckboxes","doitAll","realtimestudent","_id","then","response","console","log","data","student","delay","ms","Promise","res","setTimeout","syncCheckboxes","checkboxes","timeTotal","dayTotal","updateSetDays","setDayStreak","setWeekStreak","AddGoals","AddGoal","AddHomeworks","doneUpdatingnewStudent","ar","i","length","id","type","day","goalz","render"],"mappings":"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":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport GoalEdit from \"../components/diagoal.js\";\r\nimport Homework from \"../components/homeworks\";\r\nimport ShowHomework from \"../components/showHomework\";\r\nimport Goal from \"../components/showgoal.js\";\r\nimport trash from \"./Trash1.png\";\r\nimport leaf from \"./leaf.png\";\r\nimport Splashscreen from \"../components/splashscreen.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//this component signs in a teacher allready in the database.\r\n//using react-validation.\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class UpdateStudent extends Component {\r\n    \r\n    //state creation and binding.\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlegoal = this.handlegoal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.goalClose = this.goalClose.bind(this);\r\n        this.Goalfunc = this.Goalfunc.bind(this);\r\n        this.skip = this.skip.bind(this);\r\n        this.Homeworkfunc = this.Homeworkfunc.bind(this);\r\n        this.done = this.done.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.showHomework = this.showHomework.bind(this);\r\n        this.hideHomeworkClose = this.hideHomeworkClose.bind(this);\r\n        this.handlegoalsClose = this.handlegoalsClose.bind(this);\r\n        this.showGoal = this.showGoal.bind(this);\r\n        this.deleteGoal = this.deleteGoal.bind(this);\r\n        this.deleteHomework = this.deleteHomework.bind(this);\r\n        this.handletheclose = this.handletheclose.bind(this);\r\n        this.handlethegoalclose = this.handlethegoalclose.bind(this);\r\n        this.done1 = this.done1.bind(this);\r\n        this.done2 = this.done2.bind(this);\r\n        this.done3 = this.done3.bind(this);\r\n        this.done4 = this.done4.bind(this);\r\n        this.goback = this.goback.bind(this);\r\n        this.sendtoprofile = this.sendtoprofile.bind(this);\r\n\r\n        \r\n        \r\n        this.done5 = this.done5.bind(this);\r\n\r\n        this.handleChangeforform = this.handleChangeforform.bind(this);\r\n\r\n        \r\n        \r\n        \r\n        this.handleHomework = this.handleHomework.bind(this);\r\n        this.handleHomeworkClose = this.handleHomeworkClose.bind(this);\r\n        this.skipped = this.skipped.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            homeworks: [],\r\n            main: true,\r\n            maingoal: \"Change this\",\r\n            goal: \"\",\r\n            loading: false,\r\n            message: \"\",\r\n            goals: [],\r\n            Goal: false,\r\n            description: \"\",\r\n            maindescription:\"You should change this to be a goal that you would like this student to have.\",\r\n            next: false,\r\n            maindate: \"\",\r\n            checkbox: \"5\",\r\n            Homework: false,\r\n            hwchecked: \"\",\r\n            hwdescription: \"\",\r\n            hwcheckboxes: \"0\",\r\n            hwdate: \"\",\r\n            hwreasearch: \"\",\r\n            assignment: false,\r\n            research: false,\r\n            practice: false,\r\n            daily: \"100\",\r\n            hwtype: \"\",\r\n            days: \"100\",\r\n            showHomework: false,\r\n            currentHomework: undefined,\r\n            currentgoal: undefined,\r\n            showGoals: false,\r\n            tempID: 1,\r\n            HWtempID:1,\r\n            tempGoal: \"\",\r\n            tempDescription: \"\",\r\n            tempday: \"\",\r\n            tempcheckboxes: \"\",\r\n            tempHW: \"\",\r\n            edited: false,\r\n            edit: \"\",\r\n            editedd: \"\",\r\n            val: false,\r\n            yesnoCheckboxes: true,\r\n            yesnoTime: true,\r\n            timeframePractice: true,\r\n            starPoints: true,\r\n            manualsetup: false,\r\n            syncCheckbox: true,\r\n            dayorweekTime: \"\",\r\n            timeSync: true,\r\n            daysbool: true,\r\n            timebool: true,\r\n            smonths: \"\",\r\n            emonths: \"\",\r\n            temonths: \"\",\r\n            tsmonths: \"\",\r\n            Supporting_Goal: \"\",\r\n            Homework_Practiced: \"\",\r\n            timeframePracticebiao: true,\r\n            min: \"100\",\r\n            weeklytimebiao: \"60\",\r\n            dailytimebiao: true,\r\n            dmin: \"20\",\r\n            weekStreak: true,\r\n            dayStreak: true,\r\n            done: 0,\r\n            hwsynccheck: true,\r\n            hwdmin: \"\",\r\n            HWweeklytimebiao: \"\",\r\n            hwtimesync: true,\r\n            hwlink: \"\",\r\n            struggles: true,\r\n            hwQuestions: true,\r\n            yesnoday: true,\r\n            yesnoweek: true,\r\n            marginTop: \"\",\r\n            marginLeft: \"55px\"\r\n            /*\r\n            homeworks: [],\r\n            main: false,\r\n            maingoal: \"\",\r\n            goal: \"\",\r\n            loading: false,\r\n            message: \"\",\r\n            goals: [],\r\n            Goal: false,\r\n            description: \"\",\r\n            maindescription:\"\",\r\n            next: false,\r\n            maindate: \"\",\r\n            checkbox: \"0\",\r\n            Homework: false,\r\n            hwchecked: \"\",\r\n            hwdescription: \"\",\r\n            hwcheckboxes: \"0\",\r\n            hwdate: \"\",\r\n            hwreasearch: \"\",\r\n            assignment: false,\r\n            research: false,\r\n            practice: false,\r\n            daily: \"\",\r\n            hwtype: \"\",\r\n            days: \"\",\r\n            showHomework: false,\r\n            currentHomework: undefined,\r\n            currentgoal: undefined,\r\n            showGoals: false,\r\n            tempID: 1,\r\n            HWtempID:1,\r\n            tempGoal: \"\",\r\n            tempDescription: \"\",\r\n            tempday: \"\",\r\n            tempcheckboxes: \"\",\r\n            tempHW: \"\",\r\n            edited: false,\r\n            edit: \"\",\r\n            editedd: \"\",\r\n            val: false,\r\n            yesnoCheckboxes: false,\r\n            yesnoTime: false,\r\n            timeframePractice: false,\r\n            starPoints: false,\r\n            manualsetup: false,\r\n            syncCheckbox: false,\r\n            dayorweekTime: \"\",\r\n            timeSync: false,\r\n            daysbool: false,\r\n            timebool: false,\r\n            smonths: \"\",\r\n            emonths: \"\",\r\n            temonths: \"\",\r\n            tsmonths: \"\",\r\n            Supporting_Goal: \"\",\r\n            Homework_Practiced: \"\",\r\n            timeframePracticebiao: false,\r\n            min: \"\",\r\n            weeklytimebiao: \"\",\r\n            dailytimebiao: false,\r\n            dmin: \"\",\r\n            weekStreak: false,\r\n            dayStreak: false,\r\n            done: 0,\r\n            hwsynccheck: false,\r\n            hwdmin: \"\",\r\n            HWweeklytimebiao: \"\",\r\n            hwtimesync: false,\r\n            hwlink: \"\",\r\n            struggles: true,\r\n            hwQuestions: true,\r\n            yesnoday: false,\r\n            yesnoweek: false,\r\n            marginTop: \"\",\r\n            marginLeft: \"55px\"\r\n            */\r\n        };\r\n    }\r\n    //handles all changes with state.\r\n    handleChange = (event, news) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n        if(name===\"dmin\"){\r\n            this.setState({\r\n                timeSync:true\r\n            })\r\n\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n    goback(){\r\n        this.props.history.push(\"/profile\");\r\n        window.location.reload();\r\n    }\r\n    sendtoprofile(){\r\n        window.location.reload();\r\n    }\r\n    handleChangeforform = (event, news) => {\r\n        \r\n        const { name, value } = event.target\r\n\r\n        if (value === \"true\") {\r\n            this.setState({\r\n                [name]: true,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                [name]: false,\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(parseInt(window.innerWidth) <= 600){\r\n        this.setState({ marginTop: \"310px\", marginLeft: \"0px\" });\r\n        }\r\n        this.done();\r\n\r\n        \r\n    }\r\n\r\n   \r\n   \r\n    Goalfunc() {\r\n        this.setState({\r\n            Goal: true,\r\n        })\r\n    }\r\n    Homeworkfunc() {\r\n        this.setState({\r\n            Homework: true,\r\n        })\r\n    }\r\n    showHomework(homework) {\r\n        this.setState({\r\n            showHomework: true,\r\n            currentHomework: homework,\r\n        })\r\n\r\n\r\n\r\n    }\r\n    showGoal(goal) {\r\n        this.setState({\r\n            showGoals: true,\r\n            currentgoal: goal,\r\n        })\r\n\r\n\r\n\r\n    }\r\n    //submites for login using the controller to connect with backend. Sends to the teacher profile if teacher or the student if back end spits out student.\r\n    handlegoal(e) {\r\n        e.preventDefault();\r\n        let newarr = this.state.goals;\r\n        let newGoal = {\r\n            title: this.state.goal,\r\n            description: this.state.description,\r\n            date: \"no due date\",\r\n            tempID: this.state.tempID\r\n            \r\n        }\r\n        newarr.push(newGoal);\r\n        let x = this.state.tempID + 1;\r\n        this.setState({\r\n            goals: newarr,\r\n            tempID: x\r\n        })\r\n        this.goalClose();\r\n    }\r\n\r\n    async handleHomework(e) {\r\n        e.preventDefault();\r\n        if (this.state.hwtype === \"\") {\r\n\r\n            await this.setState({\r\n                hwtype: \"assignment\"\r\n            })\r\n\r\n        }\r\n\r\n        let newarr = this.state.homeworks;\r\n        let hwID = this.state.HWtempID + 1;\r\n        this.setState({\r\n            HWtempID:hwID\r\n        })\r\n        \r\n        let newHW = {\r\n            \r\n            title: this.state.homework,\r\n            hwchecked: this.state.hwchecked,\r\n            hwcheckboxes: this.state.hwcheckboxes,\r\n            hwtype: this.state.hwtype,\r\n            description: this.state.hwdescription,\r\n            date: this.state.hwdate,\r\n            daily: this.state.daily,\r\n            HWtempID: this.state.HWtempID,\r\n            hwsynccheck: this.state.hwsynccheck,\r\n            hwlink: this.state.hwlink,\r\n            hwstruggles: this.state.struggles,\r\n            hwQuestions: this.state.hwQuestions,\r\n            hwdmin: this.state.hwdmin,\r\n            HWweeklytimebiao: this.state.HWweeklytimebiao,\r\n            hwtimesync: this.state.hwtimesync,\r\n            yesnoday: this.state.yesnoday,\r\n            yesnoweek: this.state.yesnoweek,\r\n            totalWeekTime: {\r\n                total: \"0\",\r\n            },\r\n            hwtime: {\r\n                mon: \"0\",\r\n                tues: \"0\",\r\n                wed: \"0\",\r\n                thur: \"0\",\r\n                fri: \"0\",\r\n                sat: \"0\",\r\n                sun: \"0\",\r\n            },\r\n            firstMessage: false,\r\n            messages: [],\r\n            syncedCheckboxes: {\r\n                mon: false,\r\n                tues: false,\r\n                wed: false,\r\n                thur: false,\r\n                fri: false,\r\n                sat: false,\r\n                sun: false\r\n            }\r\n\r\n\r\n\r\n        }\r\n        newarr.push(newHW);\r\n        this.setState({\r\n            homeworks: newarr,\r\n        })\r\n        this.handleHomeworkClose();\r\n    }\r\n\r\n    async done() {\r\n        //add practicw streak\r\n        AuthService.doitAll(\r\n            /*this is everything for checkboxes*/this.props.state.realtimestudent._id,/*done*/ this.state.yesnoCheckboxes, this.state.syncCheckbox, this.state.checkbox,\r\n            /*this is everything for time. timebool is conditional clause if I want*/ this.state.yesnoTime, /*done*/ this.state.timeSync,/*done*/ this.state.weeklytimebiao,/*done*/ this.state.dailytimebiao,/*done*/ this.state.dmin,/*done*/ this.state.timebool, /*done*/ \"0\", /*done*/\r\n        /*this is days practiced. daybool also conditional */ this.state.daysbool,/*done*/ \"0\",/*done*/\r\n        /*updating time frame practiced for days.*/  this.state.days,/*done*/ this.state.smonths,/*done*/ this.state.emonths,/*done*/ this.state.timeframePracticebiao,/*done*/ this.state.min,/*done*/ this.state.tsmonths,/*done*/ this.state.temonths,/*done*/\r\n        /*updating streak info and star points (last two)*/ this.state.dayStreak,/*done*/ this.state.weekStreak,/*done*/ this.state.starPoints,/*done*/ this.state.manualsetup,/*done*/\r\n        /*add the goals first one is for conditional clause if I want.*/ this.state.goals[0],/*done*/ this.state.goals,/*done*/ this.state.maingoal,/*done*/  this.state.maindescription,/*done*/  this.state.maindate,/*done*/ \r\n        /*add the homeworks*/ this.state.homeworks,/*done*/ \r\n        /*done updating new student.*/ true, /*done*/ \r\n\r\n\r\n        ).then(response => {\r\n            console.log(response.data);\r\n\r\n            if (response.data.student) { window.location.reload(); }\r\n\r\n        });\r\n      \r\n\r\n        \r\n           \r\n       \r\n\r\n\r\n        \r\n\r\n\r\n       \r\n       \r\n     \r\n\r\n\r\n\r\n        //this.done2();\r\n        //const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        //await delay(5000);\r\n        //this.done3();\r\n       // await delay(5000);\r\n        //this.done4();\r\n        //await delay(5000);\r\n       //this.done1();\r\n       \r\n        \r\n       \r\n        \r\n        \r\n        \r\n\r\n\r\n     \r\n\r\n\r\n        \r\n\r\n        \r\n    }\r\n    async done2() {\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n        if (this.state.yesnoCheckboxes) {\r\n            if (this.state.syncCheckbox) {\r\n                AuthService.syncCheckboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n                await delay(3000);\r\n\r\n            }\r\n            else {\r\n                AuthService.checkboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n                await delay(3000);\r\n            }\r\n        }\r\n        if (this.state.yesnoTime) {\r\n\r\n            AuthService.timeSync(this.props.state.realtimestudent._id, this.state.timeSync, this.state.weeklytimebiao, this.state.dailytimebiao, this.state.dmin);\r\n            await delay(3000);\r\n\r\n\r\n\r\n        }\r\n        if (this.state.timebool) {\r\n            AuthService.timeTotal(this.props.state.realtimestudent._id, \"0\")\r\n            await delay(3000);\r\n\r\n        }\r\n        if (this.state.daysbool) {\r\n            AuthService.dayTotal(this.props.state.realtimestudent._id, \"0\")\r\n            await delay(6000);\r\n\r\n        }\r\n\r\n        if (this.state.timeframePractice) {\r\n            AuthService.updateSetDays(this.props.state.realtimestudent._id, this.state.days, this.state.smonths, this.state.emonths, this.state.timeframePracticebiao, this.state.min, this.state.tsmonths, this.state.temonths);\r\n            await delay(3000);\r\n\r\n        }\r\n    }\r\n\r\n    async done3() {\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n        if (this.state.dayStreak) {\r\n            AuthService.setDayStreak(this.props.state.realtimestudent._id, this.state.dayStreak);\r\n            await delay(3000);\r\n        }\r\n        if (this.state.weekStreak) {\r\n            AuthService.setWeekStreak(this.props.state.realtimestudent._id, this.state.weekStreak);\r\n            await delay(3000);\r\n\r\n        }\r\n        if (this.state.starPoints) {\r\n            if (this.state.manualsetup) {\r\n                AuthService.starPoints(this.props.state.realtimestudent._id, true,)\r\n                await delay(3000);\r\n\r\n            }\r\n            else {\r\n                AuthService.starPoints(this.props.state.realtimestudent._id, false)\r\n                await delay(3000);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    async done4() {\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n        if (this.state.goals[0]) {\r\n            AuthService.AddGoals(this.props.state.realtimestudent._id, false, this.state.goals)\r\n            await delay(5000);\r\n        }\r\n\r\n        if (this.state.maingoal!==\"\") {\r\n            AuthService.AddGoal(this.props.state.realtimestudent._id, true, this.state.maingoal, this.state.maindescription, this.state.maindate,)\r\n            await delay(3000);\r\n\r\n        }\r\n        if (this.state.homeworks[0]) {\r\n            AuthService.AddHomeworks(this.props.state.realtimestudent._id, this.state.homeworks)\r\n            await delay(3000);\r\n\r\n        }\r\n        await delay(3000);\r\n    }\r\n\r\n    async done1() {\r\n        \r\n        \r\n        \r\n       \r\n        AuthService.doneUpdatingnewStudent(this.props.state.realtimestudent._id, true).then(response => {\r\n            console.log(response.data);\r\n\r\n            if (response.data.student) { window.location.reload();}\r\n            \r\n        });\r\n\r\n\r\n        \r\n\r\n\r\n\r\n       \r\n\r\n    }\r\n    async done5() {\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n        AuthService.AddGoals(this.props.state.realtimestudent._id, false, this.state.goals)\r\n        await delay(6000);\r\n\r\n        AuthService.AddGoal(this.props.state.realtimestudent._id, true, this.state.maingoal, this.state.maindescription, this.state.maindate,)\r\n        await delay(6000);\r\n\r\n        AuthService.AddHomeworks(this.props.state.realtimestudent._id, this.state.homeworks)\r\n        await delay(6000);\r\n\r\n        AuthService.setDayStreak(this.props.state.realtimestudent._id, this.state.dayStreak);\r\n        await delay(6000);\r\n\r\n}\r\n\r\n\r\n\r\n    goalClose() {\r\n        this.setState({\r\n            Goal: false,\r\n            main: false,\r\n            goal: \"\",\r\n            description: \"\",\r\n        });\r\n    }\r\n    handleHomeworkClose() {\r\n        this.setState({\r\n\r\n            Homework: false,\r\n            hwdate: \"\",\r\n            daily: \"\",\r\n            homework: \"\",\r\n            hwdescription: \"\",\r\n            hwcheckboxes: \"\",\r\n            hwchecked: \"\",\r\n            hwtype: \"assignment\",\r\n            assignment: false,\r\n            research: false,\r\n            practice: false,\r\n        });\r\n    }\r\n\r\n    next() {\r\n\r\n            \r\n\r\n        this.setState({\r\n            next:true,\r\n        })\r\n    }\r\n    skip() {\r\n        this.setState({\r\n            next: !this.state.next\r\n        })\r\n    }\r\n    skipped() {\r\n        AuthService.doneUpdatingnewStudent(this.props.state.realtimestudent._id, true);\r\n        window.location.reload();\r\n    }\r\n    handlehwChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n        if (value === \"assignment\") {\r\n            this.setState({\r\n                assignment: true,\r\n                research: false,\r\n                practice: false,\r\n            })\r\n        }\r\n        if (value === \"research\") {\r\n            this.setState({\r\n                assignment: false,\r\n                research: true,\r\n                practice: false,\r\n            })\r\n        }\r\n        if (value === \"practice\") {\r\n            this.setState({\r\n                assignment: false,\r\n                research: false,\r\n                practice: true,\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    \r\n    deleteHomework(homework) {\r\n\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.homeworks.length; i++) {\r\n            if (this.state.homeworks[i].HWtempID !== homework.HWtempID) {\r\n                \r\n                ar.push(this.state.homeworks[i]);\r\n            }\r\n                \r\n        }\r\n        this.setState({\r\n            homeworks: ar,\r\n        })\r\n\r\n    }\r\n    deleteGoal(goal) {\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.goals.length; i++) {\r\n            if (this.state.goals[i].tempID !== goal.tempID) {\r\n               \r\n                ar.push(this.state.goals[i]);\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            goals: ar,\r\n        })\r\n    }\r\n    handletheclose(id, title, description, type, day, checkboxes, date, ) {\r\n        let newHW = {\r\n\r\n            title: title,\r\n            hwcheckboxes: checkboxes,\r\n            hwtype: type,\r\n            description: description,\r\n            date: date,\r\n            daily: day,\r\n            HWtempID: id\r\n        }\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.homeworks.length; i++) {\r\n            if (this.state.homeworks[i].HWtempID === newHW.HWtempID) {\r\n\r\n                ar.push(newHW);\r\n            }\r\n            else {\r\n                ar.push(this.state.homeworks[i]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        this.setState({\r\n\r\n            homeworks: ar,\r\n        })\r\n\r\n    }\r\n\r\n    hideHomeworkClose() {\r\n        \r\n        this.setState({\r\n            showHomework: false,\r\n\r\n\r\n        });\r\n    };\r\n    handlethegoalclose() {\r\n        this.setState({\r\n            showGoals: false\r\n        });\r\n    }\r\n    handlegoalsClose(id, title, description) {\r\n        \r\n        let goalz = {\r\n            title: title,\r\n            description: description,\r\n            tempID: id\r\n        }\r\n\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.goals.length; i++) {\r\n            if (this.state.goals[i].tempID === goalz.tempID) {\r\n                \r\n                ar.push(goalz);\r\n            }\r\n            else {\r\n                ar.push(this.state.goals[i]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        this.setState({\r\n\r\n            goals: ar,\r\n        })\r\n\r\n\r\n        \r\n    };\r\n    render() {\r\n        return (<div>\r\n\r\n            <Splashscreen closesplash={this.sendtoprofile}/>\r\n        </div>)\r\n    }\r\n}\r\n/*\r\n    render() {\r\n\r\n        //login page for the screen. \r\n        return (\r\n            {/** \r\n            <div className=\"z1\">\r\n                <div className=\"popup-box\" style={{ zIndex: \"1010\" }}>\r\n                    <div className=\"diapicbox4b \" style={{ zIndex: \"1010\" }}>\r\n                        \r\n\r\n                        {this.state.Goal && (<GoalEdit handlegoal={this.handlegoal} handleChange={this.handleChange} handleClose={this.goalClose} main={this.state.main} />)}\r\n\r\n                        {this.state.Homework && (<Homework handleHomework={this.handleHomework} handleChange={this.handlehwChange} handleClose={this.handleHomeworkClose} practice={this.state.practice} research={this.state.research} assignment={this.state.assignment} />)}\r\n                        {this.state.showHomework && (<ShowHomework homework={this.state.currentHomework} hideHomework={this.hideHomeworkClose} role=\"teacher\" handleChange={this.handleChange} edited={this.edited} handletheclose={this.handletheclose}/> )}\r\n                        {this.state.showGoals && (<Goal Goal={this.state.currentgoal} handleClose={this.handlethegoalclose} role=\"teacher\" handleChange={this.handleChange} handletheclose={this.handlegoalsClose}/>)}\r\n                        <div className=\"homeworkScroll1\">\r\n                        <div className=\"fill1 centerizeaa \" >\r\n                            <h1 style={{  }}>Additional Setup</h1>\r\n                                <div className=\"\" style={{ display:\"flex\", flexDirection:\"row\", marginLeft:\"20px\", width:\"320px\" }}> <p>You can also </p> <p className=\"rowss1 huv \" style={{ color: \"#696eb5\", marginLeft:\"3px\", marginRight:\"3px\"}} onClick={this.done}><b>skip</b></p><p>for now. or go</p> <p className=\"rowss1 huv \" style={{ color: \"#696eb5\", marginLeft:\"3px\", marginRight:\"3px\"}} onClick={this.goback}><b>back.</b></p> </div>\r\n\r\n                                <h2 style={{ color: \"gray\" }}>Set Goals For Student</h2>\r\n\r\n\r\n                                <div style={{ marginTop: \"5px\", width: \"250px\", marginLeft: \"30px\" }} className=\"form-group\" >\r\n                                <label htmlFor=\"\"><h5>Main Goal For Student:</h5></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"maingoal\"\r\n                                    value={this.state.maingoal}\r\n                                    onChange={this.handleChange}\r\n                                    validations={[required]}\r\n                                />\r\n                            </div>\r\n\r\n                                <div className=\"form-group\" style={{ maxWidth: \"375px\", marginLeft: \"30px\", marginBottom:\"50px\", marginRight:\"10px\" }} >\r\n                                <label htmlFor=\"maindescription\"><h5>Goal Description:</h5></label>\r\n                                <textarea\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    rows=\"3\"\r\n                                    id=\"maindescription\"\r\n                                    value={this.state.maindescription}\r\n                                    onChange={this.handleChange}\r\n                                    name=\"maindescription\"\r\n                                ></textarea>\r\n                            </div>\r\n                                <h5 style={{ marginLeft: \"30px\" }}>Add Supporting Goals for Student:</h5>\r\n\r\n                                <div style={{ marginLeft: \"30px\", marginTop:\"17px\", marginBottom:\"27px\", height: \"230px\", width: \"270px\",  border: \"2px solid green\", borderRadius:\"7%\"  }}>\r\n                                    <div className=\"homeworkScroll1 \" style={{ height: \"220px\", marginTop:\"5px\", marginLeft:\"10px\" }}>\r\n                                {this.state.goals.map((goal, index) =>\r\n                                    <div className=\"checkboxstuff4 \" key={index}  >\r\n                                        \r\n                                        <p className=\"huv rowss\" onClick={this.showGoal.bind(this, goal)} >{goal.title} </p>\r\n                                        <img\r\n                                            src={trash}\r\n                                            alt=\"delete\"\r\n                                            onClick={this.deleteGoal.bind(this, goal)}\r\n                                            className=\"huv \"\r\n                                            style={{ width: \"15px\", height: \"15px\", opacity: \".5\", marginTop:\"5px\" }}\r\n\r\n                                        />\r\n                                            </div>\r\n                                    \r\n                                        )}\r\n                                      \r\n                                        \r\n                                        <div className=\"btn  btn-block\"  onClick={this.Goalfunc}><span className=\"checkboxstuff1\" style={{ width: \"150\" }}>\r\n                                            <img\r\n                                                src={leaf}\r\n                                                className=\"edita\"\r\n                                                style={{ width: \"20px\", height: \"20px\" }}\r\n\r\n\r\n                                            />\r\n                                            <p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n                                        </span></div>\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div >\r\n                                   \r\n                            </div>\r\n\r\n\r\n                        \r\n                        </div>\r\n                        <div style={{marginTop: this.state.marginTop}}>\r\n\r\n                            <div className=\"fill1 columbized\" >\r\n\r\n                                    <h2 style={{ marginBottom: \"15px\", color: \"gray\"  }}>Setup Checkboxes:</h2>\r\n                                    <div className=\"form-group\" style={{ marginLeft: \"55px\" }} >\r\n                                    <label>Should this student have daily checkboxes?</label>\r\n                                    <select  htmlFor=\"yesnoCheckboxes\" onChange={this.handleChangeforform} name=\"yesnoCheckboxes\" id=\"yesnoCheckboxes\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>Not Sure Yet</option>\r\n                                       \r\n                                    </select>\r\n                                </div>\r\n                                {this.state.yesnoCheckboxes ? (<div style={{ marginLeft: \"75px\" }}>\r\n                                    <div  className=\"form-group\" >\r\n                                        <label>How many days should the student practice?</label>\r\n                                        <select  htmlFor=\"checkbox\" onChange={this.handleChange} name=\"checkbox\" id=\"checkbox\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"6\">6</option>\r\n                                            <option value=\"7\">7</option>\r\n                                            <option value=\"0\">I'm not sure how many yet</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div  className=\"form-group\" >\r\n                                        <label>Should practice days sync with the week?</label>\r\n                                        <select  htmlFor=\"syncCheckbox\" onChange={this.handleChangeforform} name=\"syncCheckbox\" id=\"syncCheckbox\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n                                            <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                        </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label>Track daily streak?</label>\r\n                                            <select htmlFor=\"dayStreak\" onChange={this.handleChangeforform} name=\"dayStreak\" id=\"dayStreak\">\r\n                                                <option value=\"\"></option>\r\n                                                <option value={true}>Yes</option>\r\n                                                <option value={false}>No</option>\r\n                                                <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                </div>) : (<div></div>)}\r\n                                    <h5 style={{ marginTop: \"7px\", marginLeft: \"30px\"  }}>Setup Times:</h5>\r\n\r\n                                    <div className=\"form-group\" style={{  marginLeft: \"55px\" }}>\r\n                                    <label>Would you like to set up a time goal?</label>\r\n                                    <select  htmlFor=\"yesnoTime\" onChange={this.handleChangeforform} name=\"yesnoTime\" id=\"yesnoTime\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                    </select>\r\n                                    </div>\r\n                                   \r\n\r\n                                    {this.state.yesnoTime ? (<div style={{ marginLeft: \"70px\" }}>\r\n\r\n                                        <div className=\"form-group\"  >\r\n                                            <label htmlFor=\"weeklytimebiao\">How much time should the student practice weekly?</label>\r\n                                            <input\r\n\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"weeklytimebiao\"\r\n                                                style={{ width: \"60px\" }}\r\n                                                onChange={this.handleChange}\r\n                                                name=\"weeklytimebiao\"\r\n                                            /><p>Minutes</p>\r\n\r\n\r\n                                        </div>\r\n\r\n                                        \r\n                                            <div className=\"form-group\" style={{  }}>\r\n                                                <label htmlFor=\"dmin\">How much time should the student practice daily?</label>\r\n                                                <input\r\n\r\n                                                    type= \"text\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"dmin\"\r\n                                                    style={{ width: \"60px\" }}\r\n                                                    onChange={this.handleChange}\r\n                                                    name=\"dmin\"\r\n                                                /><p>Minutes</p>\r\n\r\n\r\n                                            </div>\r\n                                    \r\n                                        \r\n\r\n                                  \r\n                                    \r\n                                </div>) : (<div></div>)}\r\n                                \r\n                                    <h5 style={{ marginTop: \"10px\", marginLeft: \"30px\" }}>Add Homework for this Student:</h5>\r\n\r\n                                \r\n                                            <div style={{ marginLeft: \"30px\", marginTop: \"23px\", marginBottom: \"50px\", height: \"230px\", width: \"270px\", border: \"2px solid green\", borderRadius: \"7%\" }}>\r\n                                                <div className=\"homeworkScroll1 \" style={{ height: \"220px\",  marginTop:\"5px\", marginLeft:\"10px\" }}>\r\n                                    {this.state.homeworks.map((homework, index) =>\r\n                                        <div className=\"checkboxstuff4 \" key={index} >\r\n                                            <p className=\"huv rowss\" onClick={this.showHomework.bind(this, homework)}> {homework.title}</p>\r\n                                            <img\r\n                                                src={trash}\r\n                                                alt=\"delete\"\r\n                                                onClick={this.deleteHomework.bind(this, homework)}\r\n                                                className=\"huv \"\r\n                                                style={{ width: \"15px\", height: \"15px\", opacity: \".5\", marginTop:\"5px\",}}\r\n\r\n                                            />\r\n\r\n                                        </div>\r\n                                            )}\r\n                                            <div className=\"btn  btn-block\" onClick={this.Homeworkfunc}><span className=\"checkboxstuff1\" style={{ width: \"150\" }}>\r\n                                                <img\r\n                                                    src={leaf}\r\n                                                    className=\"edita\"\r\n                                                    style={{ width: \"20px\", height: \"20px\" }}\r\n\r\n\r\n                                                />\r\n                                                <p>+</p><p className=\"rowss huv\">Homework</p>\r\n                                            </span></div>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                              \r\n                                    <h5 style={{ marginTop: \"20px\",  }}>Other Student Settings:</h5>\r\n                                    {this.state.yesnoCheckboxes?(<div>\r\n                                        <div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n                                        <label>Do you want to track days practiced for the year? </label>\r\n                                        <select htmlFor=\"daysbool\" onChange={this.handleChangeforform} name=\"daysbool\" id=\"daysbool\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n    \r\n    \r\n                                        </select>\r\n                                    </div></div>\r\n                                    ):(<div></div>)}\r\n                                    {this.state.yesnoTime?(\r\n                                        <div className=\"form-group\" style={{ marginLeft: \"30px\" }} >\r\n                                        <label>Do you want to track time practiced for the year? </label>\r\n                                        <select htmlFor=\"timebool\" onChange={this.handleChangeforform} name=\"timebool\" id=\"timebool\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n    \r\n                                        </select>\r\n                                        </div>\r\n                                    ):(<div></div>)}\r\n\r\n                                    \r\n                                    \r\n                                   \r\n\r\n                                   <div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n                                    <label>Would you like to set up a goal for practice days? </label>\r\n                                    <select htmlFor=\"timeframePractice\" onChange={this.handleChangeforform} name=\"timeframePractice\" id=\"timeframePractice\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>I'll set this up later.</option>\r\n\r\n\r\n                                    </select>\r\n                                </div>\r\n                                {this.state.timeframePractice ? (<div style={{ marginLeft: \"55px\" }}>\r\n                                    <div className=\"form-group\" >\r\n                                        <label htmlFor=\"days\">How many days?</label>\r\n                                        <input\r\n\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"days\"\r\n                                            style={{ width: \"60px\" }}\r\n                                            onChange={this.handleChange}\r\n                                            name=\"days\"\r\n                                        /></div></div>):(<div></div>)}\r\n\r\n {/*\r\n                                    </div>\r\n                                        <div className=\"form-group checkboxstuff2foradd\" style={{ marginleft: \"55px\", marginBottom:\"15px\" }}>\r\n                                        <div>\r\n                                        <p>From:</p>\r\n                                        <input\r\n                                            id=\"smonths\"\r\n                                            name=\"smonths\"\r\n                                            style={{ width: \"200px\" }}\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                            onChange={this.handleChange}\r\n\r\n                                            />\r\n                                            </div>\r\n                                        <div style={{  marginLeft: this.state.marginLeft }}>\r\n                                        <p>To:</p>\r\n                                        <input\r\n                                            id=\"emonths\"\r\n                                            name=\"emonths\"\r\n                                                style={{ width: \"200px\" }}\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                            onChange={this.handleChange}\r\n\r\n                                            />\r\n                                            </div>\r\n\r\n\r\n                                    </div>\r\n                                    </div>) : (<div></div>)}\r\n\r\n                                    <div className=\"form-group\" style={{ marginLeft: \"30px\" }} >\r\n                                        <label>Would you like to set up goal for practice minutes? </label>\r\n                                        <select htmlFor=\"timeframePracticebiao\" onChange={this.handleChangeforform} name=\"timeframePracticebiao\" id=\"timeframePracticebiao\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n                                            <option value={false}>I'll set this up later.</option>\r\n\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    {this.state.timeframePracticebiao ? (<div style={{ marginLeft: \"55px\" }}>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"min\">Practice Minutes</label>\r\n                                            <input\r\n\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"min\"\r\n                                                style={{ width: \"60px\" }}\r\n                                                onChange={this.handleChange}\r\n                                                name=\"min\"\r\n                                            />\r\n\r\n\r\n                                        </div></div>):(<div></div>)}\r\n                                        {/*}\r\n                                        <div className=\"form-group checkboxstuff2foradd\" >\r\n                                            <div>\r\n                                                <p>From:</p>\r\n                                                <input\r\n                                                    id=\"tsmonths\"\r\n                                                    name=\"tsmonths\"\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n\r\n\r\n                                                    onChange={this.handleChange}\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div style={{ marginLeft: this.state.marginLeft }}>\r\n                                                <p>To:</p>\r\n                                                <input\r\n                                                    id=\"temonths\"\r\n                                                    name=\"temonths\"\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n\r\n\r\n                                                    onChange={this.handleChange}\r\n\r\n                                                />\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>) : (<div></div>)}*/ /*}\r\n\r\n<div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n                                    <label>Do you want to track Star Points?</label>\r\n                                    <select  htmlFor=\"starPoints\" onChange={this.handleChangeforform} name=\"starPoints\" id=\"starPoints\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n\r\n                                    </select>\r\n                                    <p style={{color:\"gray\", fontSize:\"14px\", marginTop:\"5px\", width:\"90%\"}}>(Star Points help gamify student accountability. Students receive Star Points whenever they complete a goal or finish their homework.)</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div> \r\n                        <div>\r\n\r\n                            <div className=\"fill1 columbized\" >\r\n                                {/*}\r\n\r\n                                    <h2 style={{ marginTop: \"25px\", color:\"gray\" }}>Set Up Star Points For Student</h2>\r\n\r\n                                    \r\n                                    {this.state.starPoints ? (<div style={{ marginLeft: \"50px\" }}>\r\n                                    <div className=\"form-group\" >\r\n                                        <label>Would you like to manually setup star points or us legato automatic system?</label>\r\n                                        <select  htmlFor=\"manualsetup\" onChange={this.handleChangeforform} name=\"manualsetup\" id=\"manualsetup\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Manually set up.</option>\r\n                                            <option value={false}>Do it for me.</option>\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                        {this.state.manualsetup ? (<div style={{color:\"#8C6057\"}}>Manual setup is not available during the testing phase. </div>) : (<div></div>)}\r\n                                    \r\n                                </div>) : (<div></div>)}\r\n                                *//*}\r\n                                {/*}\r\n\r\n                                <div style={{ alignSelf: \"flexEnd\", marginTop:\"30px\" }}>\r\n                                <div onClick={this.done} className=\"huv rowss\">skip</div>\r\n                                    <div style={{ width: \"35%\", marginTop:\"7px\" }} className=\"form-group\">\r\n                                        <button onClick={this.done}\r\n                                                className=\"btn btn-block backgroundColors\"\r\n\r\n                                        >\r\n                                            Finish\r\n                                            \r\n                                    </button>\r\n                                    </div>\r\n\r\n                                    \r\n                                    \r\n                                </div>\r\n                                <div style={{width:\"200px\", height:\"20px\", opacity:\"0\"}}>Spacer</div>\r\n\r\n\r\n                            </div>\r\n                        </div> \r\n                            \r\n                                \r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n*//*}\r\n             \r\n                          \r\n        );\r\n    }\r\n}\r\n/*\r\n * \r\n * <div>\r\n                                        <h4>Manual setup for Star Points.</h4>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"lastName\">Main Goal Complete</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"days\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"days\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"Supporting_Goal\">Supporting Goal complete</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"Supporting_Goal\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"Supporting_Goal\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"Homework_Practiced\">Homework Practiced</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"Homework_Practiced\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"Homework_Practiced\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"lastName\">checked for all homework</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"days\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"days\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"lastName\">Practice time logged</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"days\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"days\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"lastName\">Done with days practiced in timeframe</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"days\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"days\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n */"]},"metadata":{},"sourceType":"module"}