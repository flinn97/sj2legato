{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/profile.js\";\nimport React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport StudentList from '../components/studentList.js';\nimport AdddStudent from '../components/dialoghelp.js';\nimport ExistingEmail from '../components/existingEmail.js';\nimport DeleteStudent from '../components/deletestudent.js';\nimport Splashscreen from \"../components/splashscreen.js\"; //this is the teachers profile page. A lot of react stuff going on here using state and pass along functions and such. I'll try to explain.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  //we set state and all the needed things here for other components. we bind all the functions.\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.addStudent = this.addStudent.bind(this);\n    this.update = this.update.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.doubleAccount = this.doubleAccount.bind(this);\n    this.separate = this.separate.bind(this);\n    this.windowreload = this.windowreload.bind(this);\n    this.deleteStudent0 = this.deleteStudent0.bind(this);\n    this.deleteStudent = this.deleteStudent.bind(this);\n    this.selectDay = this.selectDay.bind(this);\n    this.changeTime = this.changeTime.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.Splashscreen = this.Splashscreen.bind(this);\n    this.splashscreen = this.splashscreen.bind(this);\n    this.deleted = this.deleted.bind(this);\n    this.state = {\n      currentUser: AuthService.getCurrentUser(),\n      currentStudents: [],\n      first: \"\",\n      last: \"\",\n      email: \"\",\n      updated: false,\n      doubleAccount: false,\n      existing_email: false,\n      separate: false,\n      time: \"\",\n      checkbox: \"\",\n      day: \"\",\n      studentList: true,\n      deleteStudent: false,\n      delStudent: \"\",\n      message: \"\",\n      messag: false,\n      tooSmall: false,\n      splashscreen: true\n    };\n  } //handles any change for state\n\n\n  selectDay(day) {\n    this.setState({\n      day: day\n    });\n  }\n\n  changeTime(time) {\n    this.setState({\n      time: time\n    });\n  } //When a new student is added to the teachers account this function collects all the students and spits them into state.\n\n\n  update() {\n    //console.log(\"igothere\");\n    if (this.state.updated) {\n      AuthService.getStudents(this.state.currentUser.account._id).then(response => {\n        this.setState({\n          currentStudents: response.data\n        });\n      });\n      this.setState({\n        updated: false\n      });\n    }\n  }\n\n  deleted(e) {\n    AuthService.deleteStudent(this.state.delStudent._id, this.state.delStudent.email);\n    this.splashscreen();\n  }\n\n  updateWindowDimensions() {\n    if (parseInt(window.innerWidth) <= 800) this.setState({\n      tooSmall: true\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  async Splashscreen() {\n    this.setState({\n      splashscreen: false\n    });\n  }\n\n  async splashscreen() {\n    this.setState({\n      splashscreen: !this.state.splashscreen\n    });\n\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    await delay(600);\n    window.location.reload();\n  } //get user if it exists from the jwt.sign for browser history. I don't use cookies for this app.\n  //this will help populate screen with all the students in the database for the teacher at mount time.\n\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n\n    if (this.state.currentUser) {\n      if (this.state.currentUser.role !== \"teacher\") {\n        this.props.history.push(\"/\");\n        window.location.reload();\n      } else {\n        console.log(this.state.currentUser.account._id);\n        AuthService.getStudents(this.state.currentUser.account._id, this.state.studentList).then(response => {\n          console.log(response);\n          this.setState({\n            currentStudents: response.data\n          });\n        }); //console.log(this.state.currentstudents);\n      }\n    } else {\n      this.props.history.push(\"/login\");\n      window.location.reload();\n    }\n  }\n\n  windowreload() {\n    window.location.reload();\n  } //this function will use controller Authservice to add a student with given material in state. Then uses components to reload a view of all the students.\n\n\n  async addStudent(e) {\n    e.preventDefault();\n\n    if (!this.state.first || !this.state.last || !this.state.email) {\n      this.setState({\n        message: \"Please make sure to include forms with a star\",\n        messag: true\n      });\n    } else {\n      await this.setState({\n        updated: true\n      });\n      AuthService.addStudent(this.state.currentUser, this.state.first, this.state.last, this.state.email, this.state.doubleAccount, this.state.separate, this.state.time, this.state.checkbox, this.state.day).then(response => {\n        if (response.data.existing_email) {\n          this.setState({\n            existing_email: response.data.existing_email\n          });\n        } else {\n          this.profile(response.data);\n          this.update();\n        }\n      });\n    }\n  } //allows me to close the popup.\n\n\n  async handleClose(e) {\n    await this.setState({\n      existing_email: false\n    });\n  }\n\n  async deleteStudent0(student) {\n    await this.setState({\n      deleteStudent: true,\n      delStudent: student\n    });\n  }\n\n  async deleteStudent() {\n    await this.setState({\n      deleteStudent: false\n    });\n  } //tells the backend to create another student in the same account.\n\n\n  async doubleAccount(e) {\n    await this.setState({\n      doubleAccount: true\n    });\n    AuthService.addStudent(this.state.currentUser, this.state.first, this.state.last, this.state.email, this.state.doubleAccount, this.state.separate, this.state.time, this.state.checkbox, this.state.day).then(response => {\n      window.location.reload();\n    }); //window.location.reload();\n\n    this.update();\n  } //tells the backend to keep students with the same email as seperate accounts.\n\n\n  async separate(e) {\n    await this.setState({\n      separate: true\n    });\n    AuthService.addStudent(this.state.currentUser, this.state.first, this.state.last, this.state.email, this.state.doubleAccount, this.state.separate, this.state.time, this.state.checkbox, this.state.day).then(response => {\n      window.location.reload();\n    });\n    this.update();\n  }\n\n  profile(student) {\n    this.props.history.push({\n      pathname: \"/student\",\n      state: {\n        detail: student\n      }\n    });\n  } //I'm going to render StudentList for the list of students and the line after that only renders as a popup for when a student is added with the same email as another student.\n  //I'm passing handleclose doubleAccount and separate to the next component Existing Email.\n\n\n  render() {\n    const {\n      history\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"  fill1\",\n      children: this.state.currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" container example fill1\",\n        style: {\n          zIndex: \"1\",\n          padding: \"0px\"\n        },\n        children: [this.state.splashscreen && /*#__PURE__*/_jsxDEV(Splashscreen, {\n          closesplash: this.Splashscreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 58\n        }, this), this.state.currentStudents.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"200px\",\n            marginTop: \"250px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container5ab centerized\",\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\"\n            },\n            children: [\"You have no students currently.\", /*#__PURE__*/_jsxDEV(AdddStudent, {\n              addStudentButton: this.addStudent,\n              handleChange: this.handleChange,\n              message: this.state.message,\n              messag: this.state.messag,\n              selectDay: this.selectDay,\n              changeTime: this.changeTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forfiles fill2\",\n            style: {\n              width: \"76%\",\n              marginTop: \"20px\"\n            },\n            children: [this.state.tooSmall ? /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                margin: \"0 auto\",\n                marginTop: \"5px\",\n                fontFamily: \"Lora\"\n              },\n              children: \"STUDENTS \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 59\n            }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                marginTop: \"5px\",\n                fontFamily: \"Lora\"\n              },\n              className: \"\",\n              children: \"STUDENTS: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 145\n            }, this), this.state.tooSmall ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 59\n            }, this) : /*#__PURE__*/_jsxDEV(AdddStudent, {\n              addStudentButton: this.addStudent,\n              handleChange: this.handleChange,\n              message: this.state.message,\n              messag: this.state.messag,\n              selectDay: this.selectDay,\n              changeTime: this.changeTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 33\n          }, this), this.state.tooSmall ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"0 auto\",\n              marginTop: \"7px\",\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(AdddStudent, {\n              addStudentButton: this.addStudent,\n              handleChange: this.handleChange,\n              message: this.state.message,\n              messag: this.state.messag,\n              selectDay: this.selectDay,\n              changeTime: this.changeTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 174\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 377\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 33\n        }, this), this.state.existing_email && /*#__PURE__*/_jsxDEV(ExistingEmail, {\n          handleClose: this.handleClose,\n          doubleAccount: this.doubleAccount,\n          separate: this.separate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 56\n        }, this), this.state.deleteStudent && /*#__PURE__*/_jsxDEV(DeleteStudent, {\n          handleClose: this.deleteStudent,\n          delete: this.deleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n          role: this.state.currentUser.role,\n          students: this.state.currentStudents,\n          history: history,\n          deleted: this.deleteStudent0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"200px\",\n            height: \"500px\",\n            opacity: \"0\"\n          },\n          children: \"Spacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/profile.js"],"names":["React","Component","AuthService","StudentList","AdddStudent","ExistingEmail","DeleteStudent","Splashscreen","Profile","constructor","props","handleChange","event","name","value","target","setState","bind","addStudent","update","handleClose","doubleAccount","separate","windowreload","deleteStudent0","deleteStudent","selectDay","changeTime","updateWindowDimensions","splashscreen","deleted","state","currentUser","getCurrentUser","currentStudents","first","last","email","updated","existing_email","time","checkbox","day","studentList","delStudent","message","messag","tooSmall","getStudents","account","_id","then","response","data","e","parseInt","window","innerWidth","componentWillUnmount","removeEventListener","delay","ms","Promise","res","setTimeout","location","reload","componentDidMount","addEventListener","role","history","push","console","log","preventDefault","profile","student","pathname","detail","render","zIndex","padding","length","height","marginTop","display","flexDirection","width","margin","fontFamily","justifyContent","opacity"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport StudentList from '../components/studentList.js';\r\nimport AdddStudent from '../components/dialoghelp.js';\r\nimport ExistingEmail from '../components/existingEmail.js';\r\nimport DeleteStudent from '../components/deletestudent.js';\r\nimport Splashscreen  from \"../components/splashscreen.js\";\r\n\r\n\r\n//this is the teachers profile page. A lot of react stuff going on here using state and pass along functions and such. I'll try to explain.\r\n\r\nexport default class Profile extends Component {\r\n    //we set state and all the needed things here for other components. we bind all the functions.\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.doubleAccount = this.doubleAccount.bind(this);\r\n        this.separate = this.separate.bind(this);\r\n        this.windowreload = this.windowreload.bind(this);\r\n        this.deleteStudent0 = this.deleteStudent0.bind(this);\r\n        this.deleteStudent = this.deleteStudent.bind(this);\r\n        this.selectDay = this.selectDay.bind(this);\r\n        this.changeTime = this.changeTime.bind(this);\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n        this.splashscreen = this.splashscreen.bind(this);\r\n\r\n        \r\n        \r\n        this.deleted = this.deleted.bind(this);\r\n\r\n\r\n\r\n\r\n        this.state = {\r\n\r\n            currentUser: AuthService.getCurrentUser(),\r\n            currentStudents: [],\r\n            first: \"\",\r\n            last: \"\",\r\n            email: \"\",\r\n            updated: false,\r\n            doubleAccount: false,\r\n            existing_email: false,\r\n            separate: false,\r\n            time: \"\",\r\n            checkbox: \"\",\r\n            day: \"\",\r\n            studentList: true,\r\n            deleteStudent: false,\r\n            delStudent: \"\",\r\n            message: \"\",\r\n            messag: false,\r\n            tooSmall: false,\r\n            splashscreen: true,\r\n        };\r\n\r\n    }\r\n    \r\n    //handles any change for state\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    selectDay(day) {\r\n        this.setState({\r\n            day: day\r\n        })\r\n    }\r\n    changeTime(time) {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    }\r\n    //When a new student is added to the teachers account this function collects all the students and spits them into state.\r\n    update() {\r\n        //console.log(\"igothere\");\r\n        if (this.state.updated) {\r\n            AuthService.getStudents(this.state.currentUser.account._id).then(response => {\r\n                this.setState({\r\n                    currentStudents: response.data,\r\n                });\r\n            });\r\n            this.setState({\r\n                updated: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleted(e) {\r\n        \r\n        AuthService.deleteStudent(this.state.delStudent._id, this.state.delStudent.email);\r\n        this.splashscreen();\r\n    }\r\n    updateWindowDimensions() {\r\n        if(parseInt(window.innerWidth) <= 800)\r\n        this.setState({ tooSmall: true });\r\n     }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    }\r\n    async Splashscreen(){\r\n        this.setState({\r\n            splashscreen:false\r\n        })\r\n        \r\n        \r\n\r\n        \r\n\r\n    }\r\n    async splashscreen(){\r\n        this.setState({\r\n            splashscreen:!this.state.splashscreen\r\n        })\r\n        \r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(600)\r\n            window.location.reload();\r\n\r\n        \r\n\r\n    }\r\n    //get user if it exists from the jwt.sign for browser history. I don't use cookies for this app.\r\n\r\n    //this will help populate screen with all the students in the database for the teacher at mount time.\r\n    componentDidMount() {\r\n        \r\n\r\n\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n\r\n        if (this.state.currentUser) {\r\n\r\n\r\n\r\n            if (this.state.currentUser.role !== \"teacher\") {\r\n                \r\n                this.props.history.push(\"/\");\r\n                window.location.reload();\r\n\r\n            }\r\n            else {\r\n                console.log(this.state.currentUser.account._id);\r\n                AuthService.getStudents(this.state.currentUser.account._id, this.state.studentList).then(response => {\r\n                    console.log(response);\r\n                    this.setState({\r\n\r\n                        currentStudents: response.data,\r\n                    });\r\n                    \r\n\r\n                });\r\n                //console.log(this.state.currentstudents);\r\n            }\r\n        }\r\n        else {\r\n            this.props.history.push(\"/login\");\r\n            window.location.reload();\r\n\r\n        }\r\n        \r\n    }\r\n    windowreload() {\r\n        window.location.reload();\r\n    }\r\n    //this function will use controller Authservice to add a student with given material in state. Then uses components to reload a view of all the students.\r\n    async addStudent(e) {\r\n        e.preventDefault();\r\n        \r\n        if (!this.state.first || !this.state.last || !this.state.email) {\r\n            this.setState({\r\n                message: \"Please make sure to include forms with a star\",\r\n                messag: true,\r\n\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                updated: true,\r\n            });\r\n            AuthService.addStudent(\r\n                this.state.currentUser,\r\n                this.state.first,\r\n                this.state.last,\r\n                this.state.email,\r\n                this.state.doubleAccount,\r\n                this.state.separate,\r\n                this.state.time,\r\n                this.state.checkbox,\r\n                this.state.day,\r\n\r\n\r\n            ).then(response => {\r\n                if (response.data.existing_email) {\r\n                    this.setState({\r\n                        existing_email: response.data.existing_email,\r\n                    })\r\n                }\r\n                else {\r\n                        this.profile(response.data);\r\n                      \r\n                    this.update();\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n            //allows me to close the popup.\r\n    async handleClose(e){\r\n        await this.setState({\r\n            existing_email: false,\r\n        })\r\n    }\r\n    async deleteStudent0(student) {\r\n        await this.setState({\r\n            deleteStudent: true,\r\n            delStudent: student\r\n        })\r\n\r\n    }\r\n    async deleteStudent() {\r\n        await this.setState({\r\n            deleteStudent: false,\r\n        })\r\n\r\n    }\r\n    //tells the backend to create another student in the same account.\r\n    async doubleAccount(e) {\r\n        await this.setState({\r\n            doubleAccount: true,\r\n\r\n        });\r\n        AuthService.addStudent(\r\n            this.state.currentUser,\r\n            this.state.first,\r\n            this.state.last,\r\n            this.state.email,\r\n            this.state.doubleAccount,\r\n            this.state.separate,\r\n            this.state.time,\r\n            this.state.checkbox,\r\n            this.state.day,\r\n\r\n        ).then(response => {\r\n            window.location.reload();\r\n        })\r\n\r\n        //window.location.reload();\r\n        this.update();\r\n\r\n        \r\n    }\r\n    \r\n    //tells the backend to keep students with the same email as seperate accounts.\r\n    async separate(e) {\r\n        await this.setState({\r\n            separate: true,\r\n\r\n        });\r\n\r\n        AuthService.addStudent(\r\n            this.state.currentUser,\r\n            this.state.first,\r\n            this.state.last,\r\n            this.state.email,\r\n            this.state.doubleAccount,\r\n            this.state.separate,\r\n            this.state.time,\r\n            this.state.checkbox,\r\n            this.state.day,\r\n\r\n        ).then(response => {\r\n            window.location.reload();\r\n        })\r\n       \r\n        this.update();\r\n\r\n\r\n    }\r\n    profile(student) {\r\n\r\n        this.props.history.push({\r\n            pathname: \"/student\",\r\n            state: { detail: student }\r\n        });\r\n\r\n    }\r\n   \r\n    //I'm going to render StudentList for the list of students and the line after that only renders as a popup for when a student is added with the same email as another student.\r\n    //I'm passing handleclose doubleAccount and separate to the next component Existing Email.\r\n    render() {\r\n\r\n        const { history } = this.props;\r\n        return (\r\n            <div className=\"  fill1\" >\r\n                \r\n            {\r\n                this.state.currentUser ? (\r\n                    \r\n                        <div className=\" container example fill1\" style={{\r\n                        zIndex: \"1\",\r\n                        padding:\"0px\",\r\n                        \r\n                        }}>\r\n                            {this.state.splashscreen && (<Splashscreen closesplash={this.Splashscreen}/>)}\r\n                           \r\n                            {this.state.currentStudents.length === 0?(\r\n                             <div style={{height:\"200px\", marginTop:\"250px\"}}>\r\n                            <div className=\"card-container5ab centerized\" style={{display:\"flex\", flexDirection:\"column\", }}>\r\n                            You have no students currently. \r\n\r\n                            <AdddStudent addStudentButton={this.addStudent} handleChange={this.handleChange} message={this.state.message} messag={this.state.messag} selectDay={this.selectDay} changeTime={this.changeTime}/>\r\n\r\n\r\n                            </div>\r\n                            </div>):(\r\n                                <div>\r\n                                <div className=\"forfiles fill2\" style={{width:\"76%\", marginTop:\"20px\",}}>\r\n                                    {this.state.tooSmall?(<h1  style={{margin: \"0 auto\", marginTop:\"5px\", fontFamily:\"Lora\" }}>STUDENTS </h1>):(<h2 style={{marginTop:\"5px\", fontFamily:\"Lora\" }}className=\"\">STUDENTS: </h2>)}\r\n\r\n                                    {this.state.tooSmall?(<div></div>):(<AdddStudent addStudentButton={this.addStudent} handleChange={this.handleChange} message={this.state.message} messag={this.state.messag} selectDay={this.selectDay} changeTime={this.changeTime}/>)}\r\n                                \r\n                        </div>\r\n                        {this.state.tooSmall?(<div  style={{ margin: \"0 auto\", marginTop:\"7px\", width:\"100%\", display:\"flex\", flexDirection:\"row\", justifyContent:\"center\"}}><AdddStudent addStudentButton={this.addStudent} handleChange={this.handleChange} message={this.state.message} messag={this.state.messag} selectDay={this.selectDay} changeTime={this.changeTime}/></div>):(<div></div>)}\r\n\r\n                        </div>\r\n                            )}\r\n                            \r\n                        {this.state.existing_email && (<ExistingEmail handleClose={this.handleClose} doubleAccount={this.doubleAccount} separate={this.separate} />)}\r\n                        {this.state.deleteStudent && (<DeleteStudent handleClose={this.deleteStudent} delete={this.deleted} />)}\r\n\r\n                        <StudentList role={this.state.currentUser.role} students={this.state.currentStudents} history={history} deleted={this.deleteStudent0} />\r\n\r\n                        <div style={{width:\"200px\", height:\"500px\", opacity:\"0\"}}>Spacer</div>\r\n\r\n\r\n                    </div>\r\n                ) : (<div></div>)\r\n            }\r\n            </div>\r\n                \r\n    \r\n\r\n             \r\n                \r\n            \r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}