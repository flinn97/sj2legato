{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'; // const API_URL = \"https://legato.flinnapps.com/api/auth/\";\n\nconst API_URL = \"http://localhost:8080/legato/\"; //be sure to upload axios. This is my controller for everything that I do for the backend.\n\nclass AuthService {\n  login(email, password) {\n    //login with email and password. set jwt sign in localStorage.\n    return axios.post(API_URL + \"signin\", {\n      email,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      } //console.log(response.data);\n\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    //delete jwt sign.\n    localStorage.removeItem(\"user\");\n    window.location.reload();\n  }\n\n  async register(firstname, lastname, email, password) {\n    //Teacher login. Name email password. Probably going to separate to first name and last name.\n    return await axios.post(API_URL + \"signup\", {\n      firstname,\n      lastname,\n      email,\n      password\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  getAllusers() {\n    return axios.get(API_URL + \"getAllusers\", {}).then(response => {\n      console.log(response.data);\n      return response.data;\n    });\n  }\n\n  addStudent(user, first, last, time, day,\n  /*this is everything for checkboxes*/\n  yesnoCheckboxes, syncCheckbox, checkbox,\n  /*this is everything for time*/\n  yesnoTime, timeSync, weeklytimebiao, dailytimebiao, dmin, timebool, time1,\n  /*this is days practiced*/\n  daysbool, day1,\n  /*updating time frame practiced for days.*/\n  days, smonths, emonths, timeframePracticebiao, min, tsmonths, temonths,\n  /*updating streak info and star points (last two)*/\n  dayStreak, weekStreak, starPoints, manualsetup,\n  /*add the goals, first one is the goals of 0. */\n  goal, goals, maingoal, maindescription, maindate,\n  /*add the homeworks*/\n  homeworks,\n  /*done updating new student.*/\n  done) {\n    let aschedule = \"\";\n\n    for (let i = 0; i < time.length; i++) {\n      if (time[i] !== \":\") {\n        if (i === 0 && time[i] !== \"0\") {\n          aschedule = aschedule + time[i];\n        } else if (i > 0) {\n          aschedule = aschedule + time[i];\n        }\n      }\n    }\n\n    return axios.post(API_URL + \"addstudent\", {\n      user,\n      first,\n      last,\n      aschedule,\n      day,\n\n      /*this is everything for checkboxes*/\n      yesnoCheckboxes,\n      syncCheckbox,\n      checkbox,\n\n      /*this is everything for time*/\n      yesnoTime,\n      timeSync,\n      weeklytimebiao,\n      dailytimebiao,\n      dmin,\n      timebool,\n      time1,\n\n      /*this is days practiced*/\n      daysbool,\n      day1,\n\n      /*updating time frame practiced for days.*/\n      days,\n      smonths,\n      emonths,\n      timeframePracticebiao,\n      min,\n      tsmonths,\n      temonths,\n\n      /*updating streak info and star points (last two)*/\n      dayStreak,\n      weekStreak,\n      starPoints,\n      manualsetup,\n\n      /*add the goals, first one is the goals of 0. */\n      goal,\n      goals,\n      maingoal,\n      maindescription,\n      maindate,\n\n      /*add the homeworks*/\n      homeworks,\n\n      /*done updating new student.*/\n      done\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  setPastFirstTime(id, studentid, password) {\n    console.log(studentid); //for first time students changing password.\n\n    return axios.post(API_URL + \"past\", {\n      id,\n      studentid,\n      password\n    });\n  }\n\n  syncedchecking(student, day, checked, checkedd, daysPracticed, level, sp, starpointsGoal, pass, daystreak, npass) {\n    console.log(\"then here\");\n    return axios.post(API_URL + \"syncedchecking\", {\n      student,\n      day,\n      checked,\n      checkedd,\n      daysPracticed,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      daystreak,\n      npass\n    });\n  }\n\n  hwsyncedchecking(student, day, checked, checkedd, homework, syncedhw) {\n    console.log(\"then here\");\n    return axios.post(API_URL + \"hwsyncedchecking\", {\n      student,\n      day,\n      checked,\n      checkedd,\n      homework,\n      syncedhw\n    });\n  }\n\n  deleteStudent(student, email) {\n    console.log(student);\n    return axios.post(API_URL + \"deleteStudent\", {\n      student,\n      email\n    });\n  }\n\n  changeweek(id, time, level, sp, starpointsGoal, pass, timeTotal, totalWeekTime) {\n    return axios.post(API_URL + \"changeweek\", {\n      id,\n      time,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      timeTotal,\n      totalWeekTime\n    });\n  }\n\n  hwchangeweek(id, time) {\n    return axios.post(API_URL + \"hwchangeweek\", {\n      id,\n      time\n    });\n  }\n\n  cleartimepracticed(id) {\n    console.log(\"here\");\n    return axios.post(API_URL + \"cleartimepracticed\", {\n      id\n    });\n  }\n\n  cleartotaldays(id) {\n    console.log(\"hereio\");\n    return axios.post(API_URL + \"cleartotaldays\", {\n      id\n    });\n  }\n\n  editAlltheHomeworkdiaClose(id, yesnoCheckboxsync, yesnoStreak, yesnocheckboxes, edityesnoWeek, yesnoWeektext, yesnoDay, yesnoDaytext) {\n    return axios.post(API_URL + \"editAlltheHomeworkdiaClose\", {\n      id,\n      yesnoCheckboxsync,\n      yesnoStreak,\n      yesnocheckboxes,\n      edityesnoWeek,\n      yesnoWeektext,\n      yesnoDay,\n      yesnoDaytext\n    });\n  }\n\n  changetimes(id, day, time, level, sp, starpointsGoal, pass, daystreak, timeTotal, npass) {\n    return axios.post(API_URL + \"changetimes\", {\n      id,\n      day,\n      time,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      daystreak,\n      timeTotal,\n      npass\n    });\n  }\n\n  hwchangetimes(id, day, time, syncedhw) {\n    return axios.post(API_URL + \"hwchangetimes\", {\n      id,\n      day,\n      time,\n      syncedhw\n    });\n  }\n\n  editAlltheHomework(id, student) {\n    return axios.post(API_URL + \"deletenote\", {\n      id,\n      student\n    });\n  }\n\n  deletenote(student, id) {\n    return axios.post(API_URL + \"deletenote\", {\n      student,\n      id\n    });\n  }\n\n  deleteNotes(id, notes) {\n    return axios.post(API_URL + \"deleteNotes\", {\n      id,\n      notes\n    });\n  }\n\n  changenote(id, note) {\n    return axios.post(API_URL + \"changenote\", {\n      id,\n      note\n    });\n  }\n\n  timeSync(id, timeSync, min, daybiao, dmin) {\n    return axios.post(API_URL + \"timeSync\", {\n      id,\n      timeSync,\n      min,\n      daybiao,\n      dmin\n    });\n  }\n\n  hwmessage(id, message, date, role) {\n    return axios.post(API_URL + \"hwmessage\", {\n      id,\n      message,\n      date,\n      role\n    });\n  }\n\n  timeTotal(id, total) {\n    return axios.post(API_URL + \"timeTotal\", {\n      id,\n      total\n    });\n  }\n\n  dayTotal(id, total) {\n    return axios.post(API_URL + \"dayTotal\", {\n      id,\n      total\n    });\n  }\n\n  syncCheckboxes(id, checkbox) {\n    return axios.post(API_URL + \"syncCheckboxes\", {\n      id,\n      checkbox\n    });\n  }\n\n  changeNotes(id, note, notes) {\n    return axios.post(API_URL + \"changeNotes\", {\n      id,\n      note,\n      notes\n    });\n  }\n\n  deletefromarchive(id) {\n    return axios.post(API_URL + \"deletefromarchive\", {\n      id\n    });\n  }\n\n  addNote(id, description, date) {\n    console.log(id);\n    return axios.post(API_URL + \"addNote\", {\n      id,\n      description,\n      date\n    });\n  }\n\n  checkboxes(id, checkbox) {\n    return axios.post(API_URL + \"checkboxes\", {\n      id,\n      checkbox\n    });\n  }\n\n  getAccounts(id) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"getAccounts\", {\n      id\n    });\n  }\n\n  editalltheProgress(id, temptimegoal, temppracticegoal, totalTime, totalDays, starPoints, tempsmonths, tempemonths, temptsmonths, temptemonths, daysbool, timebool) {\n    return axios.post(API_URL + \"editalltheProgress\", {\n      id,\n      temptimegoal,\n      temppracticegoal,\n      totalTime,\n      totalDays,\n      starPoints,\n      tempsmonths,\n      tempemonths,\n      temptsmonths,\n      temptemonths,\n      daysbool,\n      timebool\n    });\n  }\n\n  hwchecked(id, homework, practice, level, sp, starpointsGoal, pass, daystreak) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"hwchecked\", {\n      id,\n      homework,\n      practice,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      daystreak\n    });\n  }\n\n  clearTime(id) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearTime\", {\n      id\n    });\n  }\n\n  clearhwTime(id) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearhwTime\", {\n      id\n    });\n  }\n\n  clearChecks(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearChecks\", {\n      id,\n      homework\n    });\n  }\n\n  clearhwChecks(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearhwChecks\", {\n      id,\n      homework\n    });\n  }\n\n  cleargoals(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"cleargoals\", {\n      id\n    });\n  }\n\n  clearhw(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearhw\", {\n      id\n    });\n  }\n\n  cleararchive(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"cleararchive\", {\n      id\n    });\n  }\n\n  getStudents(user, studentList) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"getStudents\", {\n      user,\n      studentList\n    });\n  }\n  /*\r\n   *  if (this.state.yesnoCheckboxes) {\r\n          if (this.state.syncCheckbox) {\r\n              AuthService.syncCheckboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n            }\r\n          else {\r\n              AuthService.checkboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n          }\r\n      }\r\n      if (this.state.yesnoTime) {\r\n            AuthService.timeSync(this.props.state.realtimestudent._id, this.state.timeSync, this.state.weeklytimebiao, this.state.dailytimebiao, this.state.dmin);\r\n  \r\n      }\r\n      if (this.state.timebool) {\r\n          AuthService.timeTotal(this.props.state.realtimestudent._id, \"0\")\r\n        }\r\n      if (this.state.daysbool) {\r\n          AuthService.dayTotal(this.props.state.realtimestudent._id, \"0\")\r\n        }\r\n      if (this.state.timeframePractice) {\r\n          AuthService.updateSetDays(this.props.state.realtimestudent._id, this.state.days, this.state.smonths, this.state.emonths, this.state.timeframePracticebiao, this.state.min, this.state.tsmonths, this.state.temonths);\r\n        }\r\n  }\r\n   * \r\n  //    oneCallThatsAll(id, checkbox, /*synccheck*/\n  // timeSync, weeklytimebiao, dailytimebiao, dmin /*yesnoTme*/) {\n  //     return axios.post(API_URL + \"oneCallThatsAll\", {\n  //           id,\n  //          main,\n  //         goals,\n  //      })\n  // }\n  //} \n\n\n  AddGoals(id, main, goals) {\n    return axios.post(API_URL + \"AddGoals\", {\n      id,\n      main,\n      goals\n    });\n  }\n\n  AddHomeworks(id, homeworks) {\n    return axios.post(API_URL + \"AddHomeworks\", {\n      id,\n      homeworks\n    });\n  }\n\n  doneUpdatingnewStudent(id, done) {\n    return axios.post(API_URL + \"doneUpdatingnewStudent\", {\n      id,\n      done\n    });\n  }\n\n  AddHomework(id, homework, type, hwchecked, description, hwcheckboxes, date, hwresearch, day, hwsynccheck, hwdmin, HWweeklytimebiao, hwtimesync, hwlink, struggles, hwQuestions, firstMessage, hwdailytimebiao, hwtimew) {\n    //add homework for student. Homework appears on students page.\n    //console.log(name, email, password);\n    //binding parameters.\n    return axios.post(API_URL + \"homework\", {\n      id,\n      homework,\n      type,\n      hwchecked,\n      description,\n      hwcheckboxes,\n      date,\n      hwresearch,\n      day,\n      hwsynccheck,\n      hwdmin,\n      HWweeklytimebiao,\n      hwtimesync,\n      hwlink,\n      struggles,\n      hwQuestions,\n      firstMessage,\n      hwdailytimebiao,\n      hwtimew\n    }); //console.log(response.data);\n  }\n\n  AddGoal(id, mainGoal, goal, description, date) {\n    //add homework for student. Homework appears on students page.\n    //console.log(name, email, password);\n    //binding parameters.\n    return axios.post(API_URL + \"goals\", {\n      id,\n      mainGoal,\n      goal,\n      description,\n      date\n    }); //console.log(response.data);\n  }\n\n  starPoints(id, manual) {\n    return axios.post(API_URL + \"starPoints\", {\n      id,\n      manual\n    });\n  }\n\n  updateSetDays(id, totalDays, monthStart, monthEnd, timebiao, min, tsmonths, temonths) {\n    return axios.post(API_URL + \"totalDays\", {\n      id,\n      totalDays,\n      monthStart,\n      monthEnd,\n      timebiao,\n      min,\n      tsmonths,\n      temonths\n    });\n  }\n\n  setDayStreak(id, streak) {\n    return axios.post(API_URL + \"setDayStreak\", {\n      id,\n      streak\n    });\n  }\n\n  setWeekStreak(id, streak) {\n    return axios.post(API_URL + \"setWeekStreak\", {\n      id,\n      streak\n    });\n  }\n\n  savegoal(id, goal, main) {\n    return axios.post(API_URL + \"archivegoal\", {\n      id,\n      goal,\n      main\n    });\n  }\n\n  daysPracticed(id, daysPracticed) {\n    return axios.post(API_URL + \"daysPracticed\", {\n      id,\n      daysPracticed\n    });\n  }\n\n  deletegoal(id, goal, main) {\n    return axios.post(API_URL + \"deletegoal\", {\n      id,\n      goal,\n      main\n    });\n  }\n\n  deleteHomework(id, homework) {\n    return axios.post(API_URL + \"deleteHomework\", {\n      id,\n      homework\n    });\n  }\n\n  goalStatusChange(id, checked, goal, main, complete, level, sp, starpointsGoal, pass, npass) {\n    //add homework for student. Homework appears on students page.\n    //console.log(name, email, password);\n    //binding parameters.\n    return axios.post(API_URL + \"goalStatusChange\", {\n      id,\n      checked,\n      goal,\n      main,\n      complete,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      npass\n    }); //console.log(response.data);\n  }\n\n  changeactivestudent(id, id2) {\n    //add homework for student. Homework appears on students page.\n    //console.log(name, email, password);\n    //binding parameters.\n    return axios.post(API_URL + \"changeactivestudent\", {\n      id,\n      id2\n    }); //console.log(response.data);\n  }\n\n  getCurrentUser(cookie) {\n    //gets whatever jwt was saved in local service. \n    if (cookie) {\n      if (JSON.parse(localStorage.getItem('user'))) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        const current = {\n          pastFirstTime: false\n        };\n        return current;\n      }\n    } else {\n      return JSON.parse(localStorage.getItem('user'));\n    }\n  }\n\n  changeuserinfo(id, accountid, firstname, lastname, about, email, phone) {\n    console.log(accountid);\n    return axios.post(API_URL + \"changeuserinfo\", {\n      id,\n      accountid,\n      firstname,\n      lastname,\n      about,\n      email,\n      phone\n    });\n  }\n\n  changeuserinfoA(id, firstname, lastname, email, password) {\n    return axios.post(API_URL + \"changeuserinfoA\", {\n      id,\n      firstname,\n      lastname,\n      email,\n      password\n    });\n  }\n\n  changeAccountInfo(id, email, password) {\n    return axios.post(API_URL + \"changeAccountInfo\", {\n      id,\n      email,\n      password\n    });\n  }\n\n  newMainGoal(id, goal) {\n    return axios.post(API_URL + \"newMainGoal\", {\n      id,\n      goal\n    });\n  }\n\n  changeStudentinfo(id, accountid, firstname, lastname, about, email, phone, time, checkbox, day) {\n    console.log(id);\n    return axios.post(API_URL + \"changeStudentinfo\", {\n      id,\n      accountid,\n      firstname,\n      lastname,\n      about,\n      email,\n      phone,\n      time,\n      checkbox,\n      day\n    });\n  }\n\n  admindelete(id) {\n    return axios.post(API_URL + \"admindelete\", {\n      id\n    });\n  }\n\n  changeStudentinfoA(id, firstname, lastname, email, checkbox, password) {\n    return axios.post(API_URL + \"changeStudentinfoA\", {\n      id,\n      firstname,\n      lastname,\n      email,\n      checkbox,\n      password\n    });\n  }\n\n  uploadPhoto(photo, id, background, role) {\n    console.log(background);\n    return axios.post('https://legato.flinnapps.com/api/auth/postpic', photo).then(response => {\n      //return axios.post('http://localhost:8080/api/auth/postpic', photo, )\n      // .then(response => {\n      console.log(response.data);\n      const picpath = response.data.path;\n      return axios.post(\"https://legato.flinnapps.com/api/auth/profilepic\", {\n        // return axios.post(\"http://localhost:8080/api/auth/profilepic\", {\n        picpath,\n        id,\n        background,\n        role\n      }).then(response => {\n        console.log(response.data);\n      });\n    });\n  }\n\n  checked(id, checked, level, sp, starpointsGoal, pass, daystreak, npass) {\n    console.log(id);\n    return axios.post(API_URL + \"checked\", {\n      id,\n      checked,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      daystreak,\n      npass\n    });\n  }\n\n  getAllaccounts(email, password) {\n    return axios.post(API_URL + \"getAllaccounts\", {\n      email,\n      password\n    });\n  }\n\n  getAllstudents(email, password) {\n    return axios.post(API_URL + \"getAllstudents\", {\n      email,\n      password\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/auth.service.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","API_URL","AuthService","login","email","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","window","location","reload","register","firstname","lastname","getAllusers","get","console","log","addStudent","user","first","last","time","day","yesnoCheckboxes","syncCheckbox","checkbox","yesnoTime","timeSync","weeklytimebiao","dailytimebiao","dmin","timebool","time1","daysbool","day1","days","smonths","emonths","timeframePracticebiao","min","tsmonths","temonths","dayStreak","weekStreak","starPoints","manualsetup","goal","goals","maingoal","maindescription","maindate","homeworks","done","aschedule","i","length","setPastFirstTime","id","studentid","syncedchecking","student","checked","checkedd","daysPracticed","level","sp","starpointsGoal","pass","daystreak","npass","hwsyncedchecking","homework","syncedhw","deleteStudent","changeweek","timeTotal","totalWeekTime","hwchangeweek","cleartimepracticed","cleartotaldays","editAlltheHomeworkdiaClose","yesnoCheckboxsync","yesnoStreak","yesnocheckboxes","edityesnoWeek","yesnoWeektext","yesnoDay","yesnoDaytext","changetimes","hwchangetimes","editAlltheHomework","deletenote","deleteNotes","notes","changenote","note","daybiao","hwmessage","message","date","role","total","dayTotal","syncCheckboxes","changeNotes","deletefromarchive","addNote","description","checkboxes","getAccounts","editalltheProgress","temptimegoal","temppracticegoal","totalTime","totalDays","tempsmonths","tempemonths","temptsmonths","temptemonths","hwchecked","practice","clearTime","clearhwTime","clearChecks","clearhwChecks","cleargoals","clearhw","cleararchive","getStudents","studentList","AddGoals","main","AddHomeworks","doneUpdatingnewStudent","AddHomework","type","hwcheckboxes","hwresearch","hwsynccheck","hwdmin","HWweeklytimebiao","hwtimesync","hwlink","struggles","hwQuestions","firstMessage","hwdailytimebiao","hwtimew","AddGoal","mainGoal","manual","updateSetDays","monthStart","monthEnd","timebiao","setDayStreak","streak","setWeekStreak","savegoal","deletegoal","deleteHomework","goalStatusChange","complete","changeactivestudent","id2","getCurrentUser","cookie","parse","getItem","current","pastFirstTime","changeuserinfo","accountid","about","phone","changeuserinfoA","changeAccountInfo","newMainGoal","changeStudentinfo","admindelete","changeStudentinfoA","uploadPhoto","photo","background","picpath","path","getAllaccounts","getAllstudents"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n// const API_URL = \"https://legato.flinnapps.com/api/auth/\";\r\nconst API_URL = \"http://localhost:8080/legato/\";\r\n//be sure to upload axios. This is my controller for everything that I do for the backend.\r\nclass AuthService {\r\n    login(email, password) {\r\n        //login with email and password. set jwt sign in localStorage.\r\n\r\n\r\n        return axios\r\n            .post(API_URL + \"signin\", {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n                //console.log(response.data);\r\n                return response.data;\r\n            });\r\n\r\n    }\r\n    logout() {\r\n        //delete jwt sign.\r\n        localStorage.removeItem(\"user\");\r\n        window.location.reload()\r\n    }\r\n    async register(firstname, lastname, email, password) {\r\n        //Teacher login. Name email password. Probably going to separate to first name and last name.\r\n        return await axios.post(API_URL + \"signup\", {\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password\r\n        }).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n    getAllusers() {\r\n        return axios.get(API_URL + \"getAllusers\", {\r\n        }).then(response => {\r\n            console.log(response.data)\r\n            return response.data;\r\n        });\r\n    }\r\n \r\n    addStudent(\r\n        user, first, last, time,  day,\r\n        /*this is everything for checkboxes*/ yesnoCheckboxes, syncCheckbox, checkbox,\r\n        /*this is everything for time*/ yesnoTime, timeSync, weeklytimebiao, dailytimebiao, dmin, timebool, time1,\r\n    /*this is days practiced*/ daysbool, day1,\r\n    /*updating time frame practiced for days.*/ days, smonths, emonths, timeframePracticebiao, min, tsmonths, temonths,\r\n    /*updating streak info and star points (last two)*/ dayStreak, weekStreak, starPoints, manualsetup,\r\n    /*add the goals, first one is the goals of 0. */ goal, goals, maingoal, maindescription, maindate,\r\n    /*add the homeworks*/ homeworks,\r\n    /*done updating new student.*/ done,) {\r\n        let aschedule = \"\";\r\n        for (let i = 0; i < time.length; i++) {\r\n            if (time[i] !== \":\") {\r\n                if (i === 0 && time[i] !== \"0\") {\r\n                    aschedule = aschedule + time[i];\r\n                }\r\n                else if (i > 0) {\r\n                    aschedule = aschedule + time[i];\r\n                }\r\n            }\r\n        }\r\n\r\nreturn axios\r\n    .post(API_URL + \"addstudent\", {\r\n        user, first, last, aschedule,  day,\r\n         /*this is everything for checkboxes*/yesnoCheckboxes, syncCheckbox, checkbox,\r\n        /*this is everything for time*/ yesnoTime, timeSync, weeklytimebiao, dailytimebiao, dmin, timebool, time1,\r\n    /*this is days practiced*/ daysbool, day1,\r\n    /*updating time frame practiced for days.*/ days, smonths, emonths, timeframePracticebiao, min, tsmonths, temonths,\r\n    /*updating streak info and star points (last two)*/ dayStreak, weekStreak, starPoints, manualsetup,\r\n    /*add the goals, first one is the goals of 0. */ goal, goals, maingoal, maindescription, maindate,\r\n    /*add the homeworks*/ homeworks,\r\n    /*done updating new student.*/ done,\r\n\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n}\r\n\r\n    setPastFirstTime(id, studentid, password) {\r\n        console.log(studentid);\r\n        //for first time students changing password.\r\n        return axios.post(API_URL + \"past\", {\r\n            id,\r\n            studentid,\r\n            password,\r\n        });\r\n    }\r\n\r\n\r\n    syncedchecking(student, day, checked, checkedd, daysPracticed, level, sp, starpointsGoal, pass, daystreak,npass ) {\r\n        console.log(\"then here\");\r\n        return axios\r\n            .post(API_URL + \"syncedchecking\", {\r\n                student, day, checked, checkedd, daysPracticed, level, sp, starpointsGoal, pass, daystreak, npass\r\n            });\r\n    }\r\n    hwsyncedchecking(student, day, checked, checkedd, homework, syncedhw) {\r\n        console.log(\"then here\");\r\n        return axios\r\n            .post(API_URL + \"hwsyncedchecking\", {\r\n                student, day, checked, checkedd, homework, syncedhw\r\n            });\r\n    }\r\n\r\n\r\n\r\n    deleteStudent(student, email) {\r\n        console.log(student);\r\n        return axios\r\n            .post(API_URL + \"deleteStudent\", {\r\n                student, email,\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    changeweek(id, time, level, sp, starpointsGoal, pass, timeTotal, totalWeekTime) {\r\n        return axios\r\n            .post(API_URL + \"changeweek\", {\r\n                id, time, level, sp, starpointsGoal, pass, timeTotal, totalWeekTime\r\n\r\n\r\n            })\r\n    }\r\n    hwchangeweek(id, time) {\r\n        return axios\r\n            .post(API_URL + \"hwchangeweek\", {\r\n                id, time,\r\n\r\n\r\n            })\r\n    }\r\n    cleartimepracticed(id){\r\n        console.log(\"here\")\r\n        return axios\r\n        .post(API_URL + \"cleartimepracticed\", {\r\n            id\r\n\r\n\r\n        })\r\n    }\r\n    cleartotaldays(id){\r\n        console.log(\"hereio\")\r\n        return axios\r\n        .post(API_URL + \"cleartotaldays\", {\r\n            id\r\n\r\n\r\n        })\r\n    }\r\n    editAlltheHomeworkdiaClose(id, yesnoCheckboxsync, yesnoStreak, yesnocheckboxes, edityesnoWeek, yesnoWeektext, yesnoDay, yesnoDaytext) {\r\n        return axios\r\n            .post(API_URL + \"editAlltheHomeworkdiaClose\", {\r\n                id, yesnoCheckboxsync, yesnoStreak, yesnocheckboxes, edityesnoWeek, yesnoWeektext, yesnoDay, yesnoDaytext\r\n\r\n\r\n            })\r\n    }\r\n    changetimes(id, day, time, level, sp, starpointsGoal, pass, daystreak, timeTotal, npass) {\r\n        return axios\r\n            .post(API_URL + \"changetimes\", {\r\n                id, day, time, level, sp, starpointsGoal, pass, daystreak, timeTotal, npass\r\n                \r\n\r\n            })\r\n    }\r\n    hwchangetimes\r\n        (id, day, time, syncedhw) {\r\n        return axios\r\n            .post(API_URL + \"hwchangetimes\", {\r\n                id, day, time, syncedhw\r\n\r\n\r\n            })\r\n    }\r\n    editAlltheHomework(id, student,) {\r\n        return axios\r\n            .post(API_URL + \"deletenote\", {\r\n                id, student,\r\n                \r\n\r\n            })\r\n    }\r\n    deletenote(student, id) {\r\n        return axios\r\n            .post(API_URL + \"deletenote\", {\r\n                student,\r\n                id,\r\n\r\n            })\r\n    }\r\n    deleteNotes(id, notes) {\r\n        return axios\r\n            .post(API_URL + \"deleteNotes\", {\r\n                id,\r\n                notes\r\n\r\n            })\r\n    }\r\n    changenote(id, note,) {\r\n        return axios\r\n            .post(API_URL + \"changenote\", {\r\n                id,\r\n                note,\r\n\r\n            })\r\n    }\r\n    timeSync(id, timeSync, min, daybiao, dmin) {\r\n        return axios\r\n            .post(API_URL + \"timeSync\", {\r\n                id,\r\n                timeSync,\r\n                min,\r\n                daybiao,\r\n                dmin\r\n\r\n            })\r\n    }\r\n    hwmessage(id, message, date, role) {\r\n        return axios\r\n            .post(API_URL + \"hwmessage\", {\r\n                id, message, date, role\r\n\r\n            })\r\n    }\r\n    timeTotal(id, total) {\r\n        return axios\r\n            .post(API_URL + \"timeTotal\", {\r\n                id,\r\n                total\r\n\r\n            })\r\n    }\r\n    dayTotal(id, total) {\r\n        return axios\r\n            .post(API_URL + \"dayTotal\", {\r\n                id,\r\n                total\r\n\r\n            })\r\n    }\r\n    syncCheckboxes(id, checkbox) {\r\n        return axios\r\n            .post(API_URL + \"syncCheckboxes\", {\r\n                id,\r\n                checkbox,\r\n\r\n            })\r\n    }\r\n\r\n    changeNotes(id, note, notes) {\r\n        return axios\r\n            .post(API_URL + \"changeNotes\", {\r\n                id,\r\n                note,\r\n                notes\r\n\r\n            })\r\n    }\r\n    deletefromarchive(id) {\r\n        return axios\r\n            .post(API_URL + \"deletefromarchive\", {\r\n                id,\r\n\r\n            })\r\n    }\r\n    addNote(id, description, date) {\r\n        console.log(id);\r\n        return axios\r\n            .post(API_URL + \"addNote\", {\r\n                id,\r\n                description,\r\n                date,\r\n\r\n            })\r\n    }\r\n    checkboxes(id, checkbox) {\r\n        return axios\r\n            .post(API_URL + \"checkboxes\", {\r\n                id,\r\n                checkbox,\r\n\r\n            })\r\n    }\r\n    getAccounts(id,) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"getAccounts\", {\r\n                id,\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n     \r\neditalltheProgress(id, temptimegoal, temppracticegoal, totalTime, totalDays, starPoints, tempsmonths, tempemonths, temptsmonths, temptemonths, daysbool, timebool,) {\r\n        \r\n\r\n        return axios\r\n            .post(API_URL + \"editalltheProgress\", {\r\n                id, temptimegoal, temppracticegoal, totalTime, totalDays, starPoints, tempsmonths, tempemonths, temptsmonths, temptemonths, daysbool, timebool,\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    \r\n    \r\n      \r\n\r\n\r\n    hwchecked(id, homework, practice, level, sp, starpointsGoal, pass, daystreak) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"hwchecked\", {\r\n                id,\r\n                homework,\r\n                practice,\r\n                level, sp, starpointsGoal, pass, daystreak\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    clearTime(id, ) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearTime\", {\r\n                id,\r\n                \r\n\r\n            })\r\n\r\n    }\r\n\r\n    clearhwTime(id,) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearhwTime\", {\r\n                id,\r\n\r\n\r\n            })\r\n\r\n    }\r\n    clearChecks(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearChecks\", {\r\n                id,\r\n                homework\r\n\r\n            })\r\n\r\n    }\r\n\r\n    clearhwChecks(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearhwChecks\", {\r\n                id,\r\n                homework\r\n\r\n            })\r\n\r\n    }\r\n    cleargoals(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"cleargoals\", {\r\n                id,\r\n\r\n            })\r\n\r\n    }\r\n\r\n    clearhw(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearhw\", {\r\n                id,\r\n\r\n            })\r\n\r\n    }\r\n    cleararchive(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"cleararchive\", {\r\n                id,\r\n\r\n            })\r\n\r\n    }\r\n\r\n    getStudents(user, studentList) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"getStudents\", {\r\n                user,\r\n                studentList,\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    /*\r\n     *  if (this.state.yesnoCheckboxes) {\r\n            if (this.state.syncCheckbox) {\r\n                AuthService.syncCheckboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n\r\n            }\r\n            else {\r\n                AuthService.checkboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n            }\r\n        }\r\n        if (this.state.yesnoTime) {\r\n\r\n            AuthService.timeSync(this.props.state.realtimestudent._id, this.state.timeSync, this.state.weeklytimebiao, this.state.dailytimebiao, this.state.dmin);\r\n\r\n\r\n\r\n        }\r\n        if (this.state.timebool) {\r\n            AuthService.timeTotal(this.props.state.realtimestudent._id, \"0\")\r\n\r\n        }\r\n        if (this.state.daysbool) {\r\n            AuthService.dayTotal(this.props.state.realtimestudent._id, \"0\")\r\n\r\n        }\r\n        if (this.state.timeframePractice) {\r\n            AuthService.updateSetDays(this.props.state.realtimestudent._id, this.state.days, this.state.smonths, this.state.emonths, this.state.timeframePracticebiao, this.state.min, this.state.tsmonths, this.state.temonths);\r\n\r\n        }\r\n    }\r\n     * \r\n//    oneCallThatsAll(id, checkbox, /*synccheck*/// timeSync, weeklytimebiao, dailytimebiao, dmin /*yesnoTme*/) {\r\n   //     return axios.post(API_URL + \"oneCallThatsAll\", {\r\n //           id,\r\n  //          main,\r\n   //         goals,\r\n  //      })\r\n   // }\r\n//} \r\n    AddGoals(id, main, goals) {\r\n        return axios.post(API_URL + \"AddGoals\", {\r\n            id,\r\n            main,\r\n            goals,\r\n        })\r\n    }\r\n    AddHomeworks(id, homeworks) {\r\n        return axios.post(API_URL + \"AddHomeworks\", {\r\n            id,\r\n            homeworks,\r\n        })\r\n    }\r\n    doneUpdatingnewStudent(id, done) {\r\n        return axios.post(API_URL + \"doneUpdatingnewStudent\", {\r\n            id,\r\n            done,\r\n        })\r\n    }\r\n\r\n\r\n   \r\n    AddHomework(id, homework, type, hwchecked, description, hwcheckboxes, date, hwresearch, day, hwsynccheck, hwdmin, HWweeklytimebiao, hwtimesync, hwlink, struggles, hwQuestions, firstMessage, hwdailytimebiao, hwtimew,) {\r\n        //add homework for student. Homework appears on students page.\r\n        //console.log(name, email, password);\r\n        //binding parameters.\r\n        return axios.post(API_URL + \"homework\", {\r\n            id,\r\n            homework,\r\n            type,\r\n            hwchecked,\r\n            description,\r\n            hwcheckboxes,\r\n            date,\r\n            hwresearch,\r\n            day,\r\n            hwsynccheck, hwdmin, HWweeklytimebiao, hwtimesync, hwlink, struggles, hwQuestions, firstMessage, hwdailytimebiao, hwtimew,\r\n        });\r\n        //console.log(response.data);\r\n\r\n\r\n        \r\n    }\r\n    AddGoal(id, mainGoal,goal, description, date, ) {\r\n        //add homework for student. Homework appears on students page.\r\n        //console.log(name, email, password);\r\n        //binding parameters.\r\n        return axios.post(API_URL + \"goals\", {\r\n            id,\r\n            mainGoal,\r\n            goal,\r\n           \r\n            description,\r\n           \r\n            date,\r\n           \r\n        });\r\n        //console.log(response.data);\r\n\r\n\r\n        \r\n    }\r\n    starPoints(id, manual) {\r\n        return axios.post(API_URL + \"starPoints\", {\r\n            id,\r\n\r\n            manual,\r\n\r\n        });\r\n    }\r\n    updateSetDays(id, totalDays, monthStart, monthEnd, timebiao, min, tsmonths, temonths) {\r\n        return axios.post(API_URL + \"totalDays\", {\r\n            id,\r\n\r\n            totalDays,\r\n            monthStart,\r\n            monthEnd,\r\n            timebiao,\r\n            min,\r\n            tsmonths,\r\n            temonths\r\n\r\n        });\r\n    }\r\n    setDayStreak(id, streak) {\r\n        return axios.post(API_URL + \"setDayStreak\", {\r\n            id,\r\n\r\n            streak,\r\n           \r\n\r\n        });\r\n    }\r\n    setWeekStreak(id, streak) {\r\n        return axios.post(API_URL + \"setWeekStreak\", {\r\n            id,\r\n\r\n            streak\r\n\r\n        });\r\n    }\r\n    savegoal(id, goal, main) {\r\n        return axios.post(API_URL + \"archivegoal\", {\r\n            id,\r\n            \r\n            goal,\r\n            main,\r\n            \r\n        });\r\n    }\r\n    daysPracticed(id, daysPracticed,) {\r\n        return axios.post(API_URL + \"daysPracticed\", {\r\n            id,\r\n\r\n            daysPracticed,\r\n\r\n        });\r\n    }\r\n   \r\n    deletegoal(id, goal, main) {\r\n        return axios.post(API_URL + \"deletegoal\", {\r\n            id,\r\n\r\n            goal,\r\n            main,\r\n\r\n        });\r\n    }\r\n    deleteHomework(id, homework) {\r\n        return axios.post(API_URL + \"deleteHomework\", {\r\n            id,\r\n\r\n            homework,\r\n\r\n\r\n        });\r\n    }\r\n    goalStatusChange(id, checked, goal, main, complete, level, sp, starpointsGoal, pass, npass) {\r\n        //add homework for student. Homework appears on students page.\r\n        //console.log(name, email, password);\r\n        //binding parameters.\r\n        return axios.post(API_URL + \"goalStatusChange\", {\r\n            id,\r\n            checked,\r\n            goal,\r\n            main,\r\n            complete,\r\n            level, sp, starpointsGoal, pass, npass\r\n\r\n           \r\n        });\r\n        //console.log(response.data);\r\n\r\n\r\n\r\n    }\r\n    changeactivestudent(id, id2,) {\r\n        //add homework for student. Homework appears on students page.\r\n        //console.log(name, email, password);\r\n        //binding parameters.\r\n        return axios.post(API_URL + \"changeactivestudent\", {\r\n            id,\r\n            id2,\r\n           \r\n\r\n\r\n        });\r\n        //console.log(response.data);\r\n\r\n\r\n\r\n    }\r\n\r\n    getCurrentUser(cookie) {\r\n        //gets whatever jwt was saved in local service. \r\n        if (cookie) {\r\n            if (JSON.parse(localStorage.getItem('user'))) {\r\n                return JSON.parse(localStorage.getItem('user'));\r\n            }\r\n            else {\r\n                const current = {\r\n                    pastFirstTime: false\r\n                }\r\n                return current;\r\n            }\r\n\r\n        }\r\n        else {\r\n            return JSON.parse(localStorage.getItem('user'));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    changeuserinfo(id, accountid, firstname, lastname, about, email, phone) {\r\n        console.log(accountid);\r\n\r\n        return axios.post(API_URL + \"changeuserinfo\", {\r\n            id,\r\n            accountid,\r\n            firstname,\r\n            lastname,\r\n            about,\r\n            email,\r\n            phone\r\n        })\r\n\r\n    }\r\n    changeuserinfoA(id, firstname, lastname, email, password) {\r\n\r\n        return axios.post(API_URL + \"changeuserinfoA\", {\r\n            id,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password\r\n        })\r\n\r\n    }\r\n    changeAccountInfo(id, email, password) {\r\n        return axios.post(API_URL + \"changeAccountInfo\", {\r\n            id,\r\n\r\n            email,\r\n            password\r\n        })\r\n    }\r\n    newMainGoal(id, goal, ){\r\n        return axios.post(API_URL + \"newMainGoal\", {\r\n            \r\n            id,\r\n            goal,\r\n            \r\n            \r\n           \r\n        })\r\n    }\r\n    changeStudentinfo(id, accountid, firstname, lastname, about, email, phone, time, checkbox,day) {\r\n        console.log(id);\r\n\r\n        return axios.post(API_URL + \"changeStudentinfo\", {\r\n            \r\n            id,\r\n            accountid,\r\n            firstname,\r\n            lastname,\r\n           about,\r\n            email,\r\n            phone,\r\n            time,\r\n            checkbox,\r\n            day,\r\n            \r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    admindelete(id) {\r\n        return axios.post(API_URL + \"admindelete\", {\r\n\r\n            id,\r\n\r\n        })\r\n    }\r\n    changeStudentinfoA(id, firstname, lastname, email,  checkbox,  password) {\r\n\r\n        return axios.post(API_URL + \"changeStudentinfoA\", {\r\n\r\n            id,\r\n            \r\n            firstname,\r\n            lastname,\r\n            \r\n            email,\r\n           \r\n            \r\n            checkbox,\r\n            \r\n            password\r\n        })\r\n\r\n    }\r\n    uploadPhoto(photo, id, background, role) {\r\n        console.log(background);\r\n        return axios.post('https://legato.flinnapps.com/api/auth/postpic',  photo ).then(response => {\r\n\r\n        //return axios.post('http://localhost:8080/api/auth/postpic', photo, )\r\n\r\n           // .then(response => {\r\n            console.log(response.data);\r\n            const picpath = response.data.path;\r\n                        return axios.post(\"https://legato.flinnapps.com/api/auth/profilepic\", {\r\n\r\n           // return axios.post(\"http://localhost:8080/api/auth/profilepic\", {\r\n                picpath,\r\n                id,\r\n                background,\r\n                role\r\n            }).then(response => {\r\n                console.log(response.data)\r\n            })\r\n        })\r\n\r\n        }\r\n\r\n    checked(id, checked, level, sp, starpointsGoal, pass, daystreak, npass) {\r\n        console.log(id);\r\n\r\n        return axios.post(API_URL + \"checked\", {\r\n            id,\r\n            checked,\r\n            level, sp, starpointsGoal, pass, daystreak, npass\r\n\r\n           \r\n\r\n        })\r\n\r\n    }\r\n    getAllaccounts(email, password) {\r\n        return axios.post(API_URL + \"getAllaccounts\", {\r\n            email,\r\n            password\r\n        })\r\n    }\r\n    getAllstudents(email, password) {\r\n        return axios.post(API_URL + \"getAllstudents\", {\r\n            email,\r\n            password\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}