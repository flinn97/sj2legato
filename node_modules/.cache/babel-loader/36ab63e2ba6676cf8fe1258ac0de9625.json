{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'; // const API_URL = \"https://legato.flinnapps.com/api/auth/\";\n\nconst API_URL = \"http://localhost:8080/legato/\"; //be sure to upload axios. This is my controller for everything that I do for the backend.\n\nclass AuthService {\n  login(email, password, loggedin) {\n    //login with email and password. set jwt sign in localStorage.\n    return axios.post(API_URL + \"signin\", {\n      email,\n      password,\n      loggedin\n    }).then(response => {\n      console.log(response.data);\n\n      if (!response.data[1]) {\n        return response.data[0];\n      } else {\n        let obj = response.data[0];\n        obj.accessToken = response.data[1];\n        localStorage.setItem(\"user\", JSON.stringify(obj));\n        return response.data[0];\n      }\n    });\n  }\n\n  async getCurrentUser() {\n    //gets whatever jwt was saved in local service. \n    // if (cookie) {\n    //     if (JSON.parse(localStorage.getItem('user'))) {\n    //         return JSON.parse(localStorage.getItem('user'));\n    //     }\n    //     else {\n    //         const current = {\n    //             pastFirstTime: false\n    //         }\n    //         return current;\n    //     }\n    // }\n    // else {\n    console.log(JSON.parse(localStorage.getItem('user')));\n    let myuser = JSON.parse(localStorage.getItem('user'));\n\n    if (JSON.parse(localStorage.getItem('user'))) {\n      let user = myuser.role === \"teacher\" ? await this.login(myuser.email, false, true) : await this.login(myuser._id, false, true);\n      return user;\n    } else {\n      return myuser;\n    } // }\n\n  }\n\n  logout() {\n    //delete jwt sign.\n    localStorage.removeItem(\"user\");\n    window.location.reload();\n  }\n\n  async register(firstname, lastname, email, password) {\n    //Teacher login. Name email password. Probably going to separate to first name and last name.\n    return await axios.post(API_URL + \"signup\", {\n      firstname,\n      lastname,\n      email,\n      password\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  getAllusers() {\n    return axios.get(API_URL + \"getAllusers\", {}).then(response => {\n      console.log(response.data);\n      return response.data;\n    });\n  }\n\n  addStudent(user, first, last, time, day,\n  /*this is everything for checkboxes*/\n  yesnoCheckboxes, syncCheckbox, checkbox,\n  /*this is everything for time*/\n  yesnoTime, timeSync, weeklytimebiao, dailytimebiao, dmin, timebool, time1,\n  /*this is days practiced*/\n  daysbool, day1,\n  /*updating time frame practiced for days.*/\n  days, smonths, emonths, timeframePracticebiao, min, tsmonths, temonths,\n  /*updating streak info and star points (last two)*/\n  dayStreak, weekStreak, starPoints, manualsetup,\n  /*add the goals, first one is the goals of 0. */\n  goal, goals, maingoal, maindescription, maindate,\n  /*add the homeworks*/\n  homeworks,\n  /*done updating new student.*/\n  done) {\n    let aschedule = \"\";\n\n    for (let i = 0; i < time.length; i++) {\n      if (time[i] !== \":\") {\n        if (i === 0 && time[i] !== \"0\") {\n          aschedule = aschedule + time[i];\n        } else if (i > 0) {\n          aschedule = aschedule + time[i];\n        }\n      }\n    }\n\n    return axios.post(API_URL + \"addstudent\", {\n      user,\n      first,\n      last,\n      aschedule,\n      day,\n\n      /*this is everything for checkboxes*/\n      yesnoCheckboxes,\n      syncCheckbox,\n      checkbox,\n\n      /*this is everything for time*/\n      yesnoTime,\n      timeSync,\n      weeklytimebiao,\n      dailytimebiao,\n      dmin,\n      timebool,\n      time1,\n\n      /*this is days practiced*/\n      daysbool,\n      day1,\n\n      /*updating time frame practiced for days.*/\n      days,\n      smonths,\n      emonths,\n      timeframePracticebiao,\n      min,\n      tsmonths,\n      temonths,\n\n      /*updating streak info and star points (last two)*/\n      dayStreak,\n      weekStreak,\n      starPoints,\n      manualsetup,\n\n      /*add the goals, first one is the goals of 0. */\n      goal,\n      goals,\n      maingoal,\n      maindescription,\n      maindate,\n\n      /*add the homeworks*/\n      homeworks,\n\n      /*done updating new student.*/\n      done\n    }).then(response => {\n      return response.data;\n    });\n  }\n  /**\r\n   * \r\n   * @param {*} role \r\n   * @param {*} id \r\n   * @param {*} changeData \r\n   * @returns change any data I want.\r\n   */\n\n\n  changeData(role, id, userid, changeData) {\n    return axios.post(API_URL + \"changeData\", {\n      role,\n      id,\n      userid,\n      changeData\n    });\n  }\n\n  setPastFirstTime(id, studentid, password) {\n    console.log(studentid); //for first time students changing password.\n\n    return axios.post(API_URL + \"past\", {\n      id,\n      studentid,\n      password\n    });\n  }\n\n  syncedchecking(student, day, checked, checkedd, daysPracticed, level, sp, starpointsGoal, pass, daystreak, npass) {\n    console.log(\"then here\");\n    return axios.post(API_URL + \"syncedchecking\", {\n      student,\n      day,\n      checked,\n      checkedd,\n      daysPracticed,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      daystreak,\n      npass\n    });\n  }\n\n  hwsyncedchecking(student, day, checked, checkedd, homework, syncedhw) {\n    console.log(\"then here\");\n    return axios.post(API_URL + \"hwsyncedchecking\", {\n      student,\n      day,\n      checked,\n      checkedd,\n      homework,\n      syncedhw\n    });\n  }\n\n  deleteStudent(student, email) {\n    console.log(student);\n    return axios.post(API_URL + \"deleteStudent\", {\n      student,\n      email\n    });\n  }\n\n  changeweek(id, time, level, sp, starpointsGoal, pass, timeTotal, totalWeekTime) {\n    return axios.post(API_URL + \"changeweek\", {\n      id,\n      time,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      timeTotal,\n      totalWeekTime\n    });\n  }\n\n  hwchangeweek(id, time) {\n    return axios.post(API_URL + \"hwchangeweek\", {\n      id,\n      time\n    });\n  }\n\n  cleartimepracticed(id) {\n    console.log(\"here\");\n    return axios.post(API_URL + \"cleartimepracticed\", {\n      id\n    });\n  }\n\n  cleartotaldays(id) {\n    console.log(\"hereio\");\n    return axios.post(API_URL + \"cleartotaldays\", {\n      id\n    });\n  }\n\n  editAlltheHomeworkdiaClose(id, yesnoCheckboxsync, yesnoStreak, yesnocheckboxes, edityesnoWeek, yesnoWeektext, yesnoDay, yesnoDaytext) {\n    return axios.post(API_URL + \"editAlltheHomeworkdiaClose\", {\n      id,\n      yesnoCheckboxsync,\n      yesnoStreak,\n      yesnocheckboxes,\n      edityesnoWeek,\n      yesnoWeektext,\n      yesnoDay,\n      yesnoDaytext\n    });\n  }\n\n  changetimes(id, day, time, level, sp, starpointsGoal, pass, daystreak, timeTotal, npass) {\n    return axios.post(API_URL + \"changetimes\", {\n      id,\n      day,\n      time,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      daystreak,\n      timeTotal,\n      npass\n    });\n  }\n\n  hwchangetimes(id, day, time, syncedhw) {\n    return axios.post(API_URL + \"hwchangetimes\", {\n      id,\n      day,\n      time,\n      syncedhw\n    });\n  }\n\n  editAlltheHomework(id, student) {\n    return axios.post(API_URL + \"deletenote\", {\n      id,\n      student\n    });\n  }\n\n  deletenote(student, id) {\n    return axios.post(API_URL + \"deletenote\", {\n      student,\n      id\n    });\n  }\n\n  deleteNotes(id, notes) {\n    return axios.post(API_URL + \"deleteNotes\", {\n      id,\n      notes\n    });\n  }\n\n  changenote(id, note) {\n    return axios.post(API_URL + \"changenote\", {\n      id,\n      note\n    });\n  }\n\n  timeSync(id, timeSync, min, daybiao, dmin) {\n    return axios.post(API_URL + \"timeSync\", {\n      id,\n      timeSync,\n      min,\n      daybiao,\n      dmin\n    });\n  }\n\n  hwmessage(id, message, date, role) {\n    return axios.post(API_URL + \"hwmessage\", {\n      id,\n      message,\n      date,\n      role\n    });\n  }\n\n  timeTotal(id, total) {\n    return axios.post(API_URL + \"timeTotal\", {\n      id,\n      total\n    });\n  }\n\n  dayTotal(id, total) {\n    return axios.post(API_URL + \"dayTotal\", {\n      id,\n      total\n    });\n  }\n\n  syncCheckboxes(id, checkbox) {\n    return axios.post(API_URL + \"syncCheckboxes\", {\n      id,\n      checkbox\n    });\n  }\n\n  changeNotes(id, note, notes) {\n    return axios.post(API_URL + \"changeNotes\", {\n      id,\n      note,\n      notes\n    });\n  }\n\n  deletefromarchive(id) {\n    return axios.post(API_URL + \"deletefromarchive\", {\n      id\n    });\n  }\n\n  addNote(id, description, date) {\n    console.log(id);\n    return axios.post(API_URL + \"addNote\", {\n      id,\n      description,\n      date\n    });\n  }\n\n  checkboxes(id, checkbox) {\n    return axios.post(API_URL + \"checkboxes\", {\n      id,\n      checkbox\n    });\n  }\n\n  getAccounts(id) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"getAccounts\", {\n      id\n    });\n  }\n\n  editalltheProgress(id, temptimegoal, temppracticegoal, totalTime, totalDays, starPoints, tempsmonths, tempemonths, temptsmonths, temptemonths, daysbool, timebool) {\n    return axios.post(API_URL + \"editalltheProgress\", {\n      id,\n      temptimegoal,\n      temppracticegoal,\n      totalTime,\n      totalDays,\n      starPoints,\n      tempsmonths,\n      tempemonths,\n      temptsmonths,\n      temptemonths,\n      daysbool,\n      timebool\n    });\n  }\n\n  hwchecked(id, homework, practice, level, sp, starpointsGoal, pass, daystreak) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"hwchecked\", {\n      id,\n      homework,\n      practice,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      daystreak\n    });\n  }\n\n  clearTime(id) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearTime\", {\n      id\n    });\n  }\n\n  clearhwTime(id) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearhwTime\", {\n      id\n    });\n  }\n\n  clearChecks(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearChecks\", {\n      id,\n      homework\n    });\n  }\n\n  clearhwChecks(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearhwChecks\", {\n      id,\n      homework\n    });\n  }\n\n  cleargoals(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"cleargoals\", {\n      id\n    });\n  }\n\n  clearhw(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"clearhw\", {\n      id\n    });\n  }\n\n  cleararchive(id, homework) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"cleararchive\", {\n      id\n    });\n  }\n\n  getStudents(user, studentList) {\n    //get all students from the database for that teacher.\n    //console.log(user);\n    return axios.post(API_URL + \"getStudents\", {\n      user,\n      studentList\n    });\n  }\n  /*\r\n   *  if (this.state.yesnoCheckboxes) {\r\n          if (this.state.syncCheckbox) {\r\n              AuthService.syncCheckboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n            }\r\n          else {\r\n              AuthService.checkboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n          }\r\n      }\r\n      if (this.state.yesnoTime) {\r\n            AuthService.timeSync(this.props.state.realtimestudent._id, this.state.timeSync, this.state.weeklytimebiao, this.state.dailytimebiao, this.state.dmin);\r\n  \r\n      }\r\n      if (this.state.timebool) {\r\n          AuthService.timeTotal(this.props.state.realtimestudent._id, \"0\")\r\n        }\r\n      if (this.state.daysbool) {\r\n          AuthService.dayTotal(this.props.state.realtimestudent._id, \"0\")\r\n        }\r\n      if (this.state.timeframePractice) {\r\n          AuthService.updateSetDays(this.props.state.realtimestudent._id, this.state.days, this.state.smonths, this.state.emonths, this.state.timeframePracticebiao, this.state.min, this.state.tsmonths, this.state.temonths);\r\n        }\r\n  }\r\n   * \r\n  //    oneCallThatsAll(id, checkbox, /*synccheck*/\n  // timeSync, weeklytimebiao, dailytimebiao, dmin /*yesnoTme*/) {\n  //     return axios.post(API_URL + \"oneCallThatsAll\", {\n  //           id,\n  //          main,\n  //         goals,\n  //      })\n  // }\n  //} \n\n\n  AddGoals(id, main, goals) {\n    return axios.post(API_URL + \"AddGoals\", {\n      id,\n      main,\n      goals\n    });\n  }\n\n  AddHomeworks(id, homeworks) {\n    return axios.post(API_URL + \"AddHomeworks\", {\n      id,\n      homeworks\n    });\n  }\n\n  doneUpdatingnewStudent(id, done) {\n    return axios.post(API_URL + \"doneUpdatingnewStudent\", {\n      id,\n      done\n    });\n  }\n\n  AddHomework(id, homework, type, hwchecked, description, hwcheckboxes, date, hwresearch, day, hwsynccheck, hwdmin, HWweeklytimebiao, hwtimesync, hwlink, struggles, hwQuestions, firstMessage, hwdailytimebiao, hwtimew) {\n    //add homework for student. Homework appears on students page.\n    //console.log(name, email, password);\n    //binding parameters.\n    return axios.post(API_URL + \"homework\", {\n      id,\n      homework,\n      type,\n      hwchecked,\n      description,\n      hwcheckboxes,\n      date,\n      hwresearch,\n      day,\n      hwsynccheck,\n      hwdmin,\n      HWweeklytimebiao,\n      hwtimesync,\n      hwlink,\n      struggles,\n      hwQuestions,\n      firstMessage,\n      hwdailytimebiao,\n      hwtimew\n    }); //console.log(response.data);\n  }\n\n  AddGoal(id, mainGoal, goal, description, date) {\n    //add homework for student. Homework appears on students page.\n    //console.log(name, email, password);\n    //binding parameters.\n    return axios.post(API_URL + \"goals\", {\n      id,\n      mainGoal,\n      goal,\n      description,\n      date\n    }); //console.log(response.data);\n  }\n\n  starPoints(id, manual) {\n    return axios.post(API_URL + \"starPoints\", {\n      id,\n      manual\n    });\n  }\n\n  updateSetDays(id, totalDays, monthStart, monthEnd, timebiao, min, tsmonths, temonths) {\n    return axios.post(API_URL + \"totalDays\", {\n      id,\n      totalDays,\n      monthStart,\n      monthEnd,\n      timebiao,\n      min,\n      tsmonths,\n      temonths\n    });\n  }\n\n  setDayStreak(id, streak) {\n    return axios.post(API_URL + \"setDayStreak\", {\n      id,\n      streak\n    });\n  }\n\n  setWeekStreak(id, streak) {\n    return axios.post(API_URL + \"setWeekStreak\", {\n      id,\n      streak\n    });\n  }\n\n  savegoal(id, goal, main) {\n    return axios.post(API_URL + \"archivegoal\", {\n      id,\n      goal,\n      main\n    });\n  }\n\n  daysPracticed(id, daysPracticed) {\n    return axios.post(API_URL + \"daysPracticed\", {\n      id,\n      daysPracticed\n    });\n  }\n\n  deletegoal(id, goal, main) {\n    return axios.post(API_URL + \"deletegoal\", {\n      id,\n      goal,\n      main\n    });\n  }\n\n  deleteHomework(id, homework) {\n    return axios.post(API_URL + \"deleteHomework\", {\n      id,\n      homework\n    });\n  }\n\n  goalStatusChange(id, checked, goal, main, complete, level, sp, starpointsGoal, pass, npass) {\n    //add homework for student. Homework appears on students page.\n    //console.log(name, email, password);\n    //binding parameters.\n    return axios.post(API_URL + \"goalStatusChange\", {\n      id,\n      checked,\n      goal,\n      main,\n      complete,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      npass\n    }); //console.log(response.data);\n  }\n\n  changeactivestudent(id, id2) {\n    //add homework for student. Homework appears on students page.\n    //console.log(name, email, password);\n    //binding parameters.\n    return axios.post(API_URL + \"changeactivestudent\", {\n      id,\n      id2\n    }); //console.log(response.data);\n  }\n\n  changeuserinfo(id, accountid, firstname, lastname, about, email, phone) {\n    console.log(accountid);\n    return axios.post(API_URL + \"changeuserinfo\", {\n      id,\n      accountid,\n      firstname,\n      lastname,\n      about,\n      email,\n      phone\n    });\n  }\n\n  changeuserinfoA(id, firstname, lastname, email, password) {\n    return axios.post(API_URL + \"changeuserinfoA\", {\n      id,\n      firstname,\n      lastname,\n      email,\n      password\n    });\n  }\n\n  changeAccountInfo(id, email, password) {\n    return axios.post(API_URL + \"changeAccountInfo\", {\n      id,\n      email,\n      password\n    });\n  }\n\n  newMainGoal(id, goal) {\n    return axios.post(API_URL + \"newMainGoal\", {\n      id,\n      goal\n    });\n  }\n\n  changeStudentinfo(id, accountid, firstname, lastname, about, email, phone, time, checkbox, day) {\n    console.log(id);\n    return axios.post(API_URL + \"changeStudentinfo\", {\n      id,\n      accountid,\n      firstname,\n      lastname,\n      about,\n      email,\n      phone,\n      time,\n      checkbox,\n      day\n    });\n  }\n\n  admindelete(id) {\n    return axios.post(API_URL + \"admindelete\", {\n      id\n    });\n  }\n\n  changeStudentinfoA(id, firstname, lastname, email, checkbox, password) {\n    return axios.post(API_URL + \"changeStudentinfoA\", {\n      id,\n      firstname,\n      lastname,\n      email,\n      checkbox,\n      password\n    });\n  }\n\n  uploadPhoto(photo, id, background, role) {\n    console.log(background);\n    return axios.post('https://legato.flinnapps.com/api/auth/postpic', photo).then(response => {\n      //return axios.post('http://localhost:8080/api/auth/postpic', photo, )\n      // .then(response => {\n      console.log(response.data);\n      const picpath = response.data.path;\n      return axios.post(\"https://legato.flinnapps.com/api/auth/profilepic\", {\n        // return axios.post(\"http://localhost:8080/api/auth/profilepic\", {\n        picpath,\n        id,\n        background,\n        role\n      }).then(response => {\n        console.log(response.data);\n      });\n    });\n  }\n\n  checked(id, checked, level, sp, starpointsGoal, pass, daystreak, npass) {\n    console.log(id);\n    return axios.post(API_URL + \"checked\", {\n      id,\n      checked,\n      level,\n      sp,\n      starpointsGoal,\n      pass,\n      daystreak,\n      npass\n    });\n  }\n\n  getAllaccounts(email, password) {\n    return axios.post(API_URL + \"getAllaccounts\", {\n      email,\n      password\n    });\n  }\n\n  getAllstudents(email, password) {\n    return axios.post(API_URL + \"getAllstudents\", {\n      email,\n      password\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/auth.service.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","API_URL","AuthService","login","email","password","loggedin","post","then","response","console","log","data","obj","accessToken","localStorage","setItem","JSON","stringify","getCurrentUser","parse","getItem","myuser","user","role","_id","logout","removeItem","window","location","reload","register","firstname","lastname","getAllusers","get","addStudent","first","last","time","day","yesnoCheckboxes","syncCheckbox","checkbox","yesnoTime","timeSync","weeklytimebiao","dailytimebiao","dmin","timebool","time1","daysbool","day1","days","smonths","emonths","timeframePracticebiao","min","tsmonths","temonths","dayStreak","weekStreak","starPoints","manualsetup","goal","goals","maingoal","maindescription","maindate","homeworks","done","aschedule","i","length","changeData","id","userid","setPastFirstTime","studentid","syncedchecking","student","checked","checkedd","daysPracticed","level","sp","starpointsGoal","pass","daystreak","npass","hwsyncedchecking","homework","syncedhw","deleteStudent","changeweek","timeTotal","totalWeekTime","hwchangeweek","cleartimepracticed","cleartotaldays","editAlltheHomeworkdiaClose","yesnoCheckboxsync","yesnoStreak","yesnocheckboxes","edityesnoWeek","yesnoWeektext","yesnoDay","yesnoDaytext","changetimes","hwchangetimes","editAlltheHomework","deletenote","deleteNotes","notes","changenote","note","daybiao","hwmessage","message","date","total","dayTotal","syncCheckboxes","changeNotes","deletefromarchive","addNote","description","checkboxes","getAccounts","editalltheProgress","temptimegoal","temppracticegoal","totalTime","totalDays","tempsmonths","tempemonths","temptsmonths","temptemonths","hwchecked","practice","clearTime","clearhwTime","clearChecks","clearhwChecks","cleargoals","clearhw","cleararchive","getStudents","studentList","AddGoals","main","AddHomeworks","doneUpdatingnewStudent","AddHomework","type","hwcheckboxes","hwresearch","hwsynccheck","hwdmin","HWweeklytimebiao","hwtimesync","hwlink","struggles","hwQuestions","firstMessage","hwdailytimebiao","hwtimew","AddGoal","mainGoal","manual","updateSetDays","monthStart","monthEnd","timebiao","setDayStreak","streak","setWeekStreak","savegoal","deletegoal","deleteHomework","goalStatusChange","complete","changeactivestudent","id2","changeuserinfo","accountid","about","phone","changeuserinfoA","changeAccountInfo","newMainGoal","changeStudentinfo","admindelete","changeStudentinfoA","uploadPhoto","photo","background","picpath","path","getAllaccounts","getAllstudents"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n// const API_URL = \"https://legato.flinnapps.com/api/auth/\";\r\nconst API_URL = \"http://localhost:8080/legato/\";\r\n//be sure to upload axios. This is my controller for everything that I do for the backend.\r\nclass AuthService {\r\n    login(email, password, loggedin) {\r\n        //login with email and password. set jwt sign in localStorage.\r\n\r\n\r\n        return axios\r\n            .post(API_URL + \"signin\", {\r\n                email,\r\n                password,\r\n                loggedin\r\n            })\r\n            .then(response => {\r\n                console.log(response.data);\r\n\r\n                if(!response.data[1]){\r\n                    return response.data[0];\r\n                }\r\n                else {\r\n                    let obj = response.data[0]\r\n                    obj.accessToken=response.data[1]\r\n                    localStorage.setItem(\"user\", JSON.stringify(obj));\r\n                    return response.data[0];\r\n                }\r\n            });\r\n\r\n    }\r\n    async getCurrentUser() {\r\n        //gets whatever jwt was saved in local service. \r\n        // if (cookie) {\r\n        //     if (JSON.parse(localStorage.getItem('user'))) {\r\n        //         return JSON.parse(localStorage.getItem('user'));\r\n        //     }\r\n        //     else {\r\n        //         const current = {\r\n        //             pastFirstTime: false\r\n        //         }\r\n        //         return current;\r\n        //     }\r\n\r\n        // }\r\n        // else {\r\n            console.log(JSON.parse(localStorage.getItem('user')))\r\n            let myuser = JSON.parse(localStorage.getItem('user'))\r\n            if(JSON.parse(localStorage.getItem('user'))){\r\n            let user = myuser.role===\"teacher\"? await this.login(myuser.email, false, true) : await this.login(myuser._id, false, true)\r\n            return user\r\n            }\r\n            else{\r\n                return myuser\r\n            }\r\n\r\n        // }\r\n    }\r\n    logout() {\r\n        //delete jwt sign.\r\n        localStorage.removeItem(\"user\");\r\n        window.location.reload()\r\n    }\r\n    async register(firstname, lastname, email, password) {\r\n        //Teacher login. Name email password. Probably going to separate to first name and last name.\r\n        return await axios.post(API_URL + \"signup\", {\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password\r\n        }).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n    getAllusers() {\r\n        return axios.get(API_URL + \"getAllusers\", {\r\n        }).then(response => {\r\n            console.log(response.data)\r\n            return response.data;\r\n        });\r\n    }\r\n \r\n    addStudent(\r\n        user, first, last, time,  day,\r\n        /*this is everything for checkboxes*/ yesnoCheckboxes, syncCheckbox, checkbox,\r\n        /*this is everything for time*/ yesnoTime, timeSync, weeklytimebiao, dailytimebiao, dmin, timebool, time1,\r\n    /*this is days practiced*/ daysbool, day1,\r\n    /*updating time frame practiced for days.*/ days, smonths, emonths, timeframePracticebiao, min, tsmonths, temonths,\r\n    /*updating streak info and star points (last two)*/ dayStreak, weekStreak, starPoints, manualsetup,\r\n    /*add the goals, first one is the goals of 0. */ goal, goals, maingoal, maindescription, maindate,\r\n    /*add the homeworks*/ homeworks,\r\n    /*done updating new student.*/ done,) {\r\n        let aschedule = \"\";\r\n        for (let i = 0; i < time.length; i++) {\r\n            if (time[i] !== \":\") {\r\n                if (i === 0 && time[i] !== \"0\") {\r\n                    aschedule = aschedule + time[i];\r\n                }\r\n                else if (i > 0) {\r\n                    aschedule = aschedule + time[i];\r\n                }\r\n            }\r\n        }\r\n\r\nreturn axios\r\n    .post(API_URL + \"addstudent\", {\r\n        user, first, last, aschedule,  day,\r\n         /*this is everything for checkboxes*/yesnoCheckboxes, syncCheckbox, checkbox,\r\n        /*this is everything for time*/ yesnoTime, timeSync, weeklytimebiao, dailytimebiao, dmin, timebool, time1,\r\n    /*this is days practiced*/ daysbool, day1,\r\n    /*updating time frame practiced for days.*/ days, smonths, emonths, timeframePracticebiao, min, tsmonths, temonths,\r\n    /*updating streak info and star points (last two)*/ dayStreak, weekStreak, starPoints, manualsetup,\r\n    /*add the goals, first one is the goals of 0. */ goal, goals, maingoal, maindescription, maindate,\r\n    /*add the homeworks*/ homeworks,\r\n    /*done updating new student.*/ done,\r\n\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n}\r\n    /**\r\n     * \r\n     * @param {*} role \r\n     * @param {*} id \r\n     * @param {*} changeData \r\n     * @returns change any data I want.\r\n     */\r\n    changeData(role, id, userid, changeData){\r\n        return axios.post(API_URL + \"changeData\", {\r\n            role, id, userid, changeData\r\n        })\r\n\r\n    }\r\n\r\n    setPastFirstTime(id, studentid, password) {\r\n        console.log(studentid);\r\n        //for first time students changing password.\r\n        return axios.post(API_URL + \"past\", {\r\n            id,\r\n            studentid,\r\n            password,\r\n        });\r\n    }\r\n\r\n\r\n    syncedchecking(student, day, checked, checkedd, daysPracticed, level, sp, starpointsGoal, pass, daystreak,npass ) {\r\n        console.log(\"then here\");\r\n        return axios\r\n            .post(API_URL + \"syncedchecking\", {\r\n                student, day, checked, checkedd, daysPracticed, level, sp, starpointsGoal, pass, daystreak, npass\r\n            });\r\n    }\r\n    hwsyncedchecking(student, day, checked, checkedd, homework, syncedhw) {\r\n        console.log(\"then here\");\r\n        return axios\r\n            .post(API_URL + \"hwsyncedchecking\", {\r\n                student, day, checked, checkedd, homework, syncedhw\r\n            });\r\n    }\r\n\r\n\r\n\r\n    deleteStudent(student, email) {\r\n        console.log(student);\r\n        return axios\r\n            .post(API_URL + \"deleteStudent\", {\r\n                student, email,\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    changeweek(id, time, level, sp, starpointsGoal, pass, timeTotal, totalWeekTime) {\r\n        return axios\r\n            .post(API_URL + \"changeweek\", {\r\n                id, time, level, sp, starpointsGoal, pass, timeTotal, totalWeekTime\r\n\r\n\r\n            })\r\n    }\r\n    hwchangeweek(id, time) {\r\n        return axios\r\n            .post(API_URL + \"hwchangeweek\", {\r\n                id, time,\r\n\r\n\r\n            })\r\n    }\r\n    cleartimepracticed(id){\r\n        console.log(\"here\")\r\n        return axios\r\n        .post(API_URL + \"cleartimepracticed\", {\r\n            id\r\n\r\n\r\n        })\r\n    }\r\n    cleartotaldays(id){\r\n        console.log(\"hereio\")\r\n        return axios\r\n        .post(API_URL + \"cleartotaldays\", {\r\n            id\r\n\r\n\r\n        })\r\n    }\r\n    editAlltheHomeworkdiaClose(id, yesnoCheckboxsync, yesnoStreak, yesnocheckboxes, edityesnoWeek, yesnoWeektext, yesnoDay, yesnoDaytext) {\r\n        return axios\r\n            .post(API_URL + \"editAlltheHomeworkdiaClose\", {\r\n                id, yesnoCheckboxsync, yesnoStreak, yesnocheckboxes, edityesnoWeek, yesnoWeektext, yesnoDay, yesnoDaytext\r\n\r\n\r\n            })\r\n    }\r\n    changetimes(id, day, time, level, sp, starpointsGoal, pass, daystreak, timeTotal, npass) {\r\n        return axios\r\n            .post(API_URL + \"changetimes\", {\r\n                id, day, time, level, sp, starpointsGoal, pass, daystreak, timeTotal, npass\r\n                \r\n\r\n            })\r\n    }\r\n    hwchangetimes\r\n        (id, day, time, syncedhw) {\r\n        return axios\r\n            .post(API_URL + \"hwchangetimes\", {\r\n                id, day, time, syncedhw\r\n\r\n\r\n            })\r\n    }\r\n    editAlltheHomework(id, student,) {\r\n        return axios\r\n            .post(API_URL + \"deletenote\", {\r\n                id, student,\r\n                \r\n\r\n            })\r\n    }\r\n    deletenote(student, id) {\r\n        return axios\r\n            .post(API_URL + \"deletenote\", {\r\n                student,\r\n                id,\r\n\r\n            })\r\n    }\r\n    deleteNotes(id, notes) {\r\n        return axios\r\n            .post(API_URL + \"deleteNotes\", {\r\n                id,\r\n                notes\r\n\r\n            })\r\n    }\r\n    changenote(id, note,) {\r\n        return axios\r\n            .post(API_URL + \"changenote\", {\r\n                id,\r\n                note,\r\n\r\n            })\r\n    }\r\n    timeSync(id, timeSync, min, daybiao, dmin) {\r\n        return axios\r\n            .post(API_URL + \"timeSync\", {\r\n                id,\r\n                timeSync,\r\n                min,\r\n                daybiao,\r\n                dmin\r\n\r\n            })\r\n    }\r\n    hwmessage(id, message, date, role) {\r\n        return axios\r\n            .post(API_URL + \"hwmessage\", {\r\n                id, message, date, role\r\n\r\n            })\r\n    }\r\n    timeTotal(id, total) {\r\n        return axios\r\n            .post(API_URL + \"timeTotal\", {\r\n                id,\r\n                total\r\n\r\n            })\r\n    }\r\n    dayTotal(id, total) {\r\n        return axios\r\n            .post(API_URL + \"dayTotal\", {\r\n                id,\r\n                total\r\n\r\n            })\r\n    }\r\n    syncCheckboxes(id, checkbox) {\r\n        return axios\r\n            .post(API_URL + \"syncCheckboxes\", {\r\n                id,\r\n                checkbox,\r\n\r\n            })\r\n    }\r\n\r\n    changeNotes(id, note, notes) {\r\n        return axios\r\n            .post(API_URL + \"changeNotes\", {\r\n                id,\r\n                note,\r\n                notes\r\n\r\n            })\r\n    }\r\n    deletefromarchive(id) {\r\n        return axios\r\n            .post(API_URL + \"deletefromarchive\", {\r\n                id,\r\n\r\n            })\r\n    }\r\n    addNote(id, description, date) {\r\n        console.log(id);\r\n        return axios\r\n            .post(API_URL + \"addNote\", {\r\n                id,\r\n                description,\r\n                date,\r\n\r\n            })\r\n    }\r\n    checkboxes(id, checkbox) {\r\n        return axios\r\n            .post(API_URL + \"checkboxes\", {\r\n                id,\r\n                checkbox,\r\n\r\n            })\r\n    }\r\n    getAccounts(id,) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"getAccounts\", {\r\n                id,\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n     \r\neditalltheProgress(id, temptimegoal, temppracticegoal, totalTime, totalDays, starPoints, tempsmonths, tempemonths, temptsmonths, temptemonths, daysbool, timebool,) {\r\n        \r\n\r\n        return axios\r\n            .post(API_URL + \"editalltheProgress\", {\r\n                id, temptimegoal, temppracticegoal, totalTime, totalDays, starPoints, tempsmonths, tempemonths, temptsmonths, temptemonths, daysbool, timebool,\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    \r\n    \r\n      \r\n\r\n\r\n    hwchecked(id, homework, practice, level, sp, starpointsGoal, pass, daystreak) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"hwchecked\", {\r\n                id,\r\n                homework,\r\n                practice,\r\n                level, sp, starpointsGoal, pass, daystreak\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    clearTime(id, ) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearTime\", {\r\n                id,\r\n                \r\n\r\n            })\r\n\r\n    }\r\n\r\n    clearhwTime(id,) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearhwTime\", {\r\n                id,\r\n\r\n\r\n            })\r\n\r\n    }\r\n    clearChecks(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearChecks\", {\r\n                id,\r\n                homework\r\n\r\n            })\r\n\r\n    }\r\n\r\n    clearhwChecks(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearhwChecks\", {\r\n                id,\r\n                homework\r\n\r\n            })\r\n\r\n    }\r\n    cleargoals(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"cleargoals\", {\r\n                id,\r\n\r\n            })\r\n\r\n    }\r\n\r\n    clearhw(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"clearhw\", {\r\n                id,\r\n\r\n            })\r\n\r\n    }\r\n    cleararchive(id, homework) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"cleararchive\", {\r\n                id,\r\n\r\n            })\r\n\r\n    }\r\n\r\n    getStudents(user, studentList) {\r\n        //get all students from the database for that teacher.\r\n        //console.log(user);\r\n\r\n        return axios\r\n            .post(API_URL + \"getStudents\", {\r\n                user,\r\n                studentList,\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    /*\r\n     *  if (this.state.yesnoCheckboxes) {\r\n            if (this.state.syncCheckbox) {\r\n                AuthService.syncCheckboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n\r\n            }\r\n            else {\r\n                AuthService.checkboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n            }\r\n        }\r\n        if (this.state.yesnoTime) {\r\n\r\n            AuthService.timeSync(this.props.state.realtimestudent._id, this.state.timeSync, this.state.weeklytimebiao, this.state.dailytimebiao, this.state.dmin);\r\n\r\n\r\n\r\n        }\r\n        if (this.state.timebool) {\r\n            AuthService.timeTotal(this.props.state.realtimestudent._id, \"0\")\r\n\r\n        }\r\n        if (this.state.daysbool) {\r\n            AuthService.dayTotal(this.props.state.realtimestudent._id, \"0\")\r\n\r\n        }\r\n        if (this.state.timeframePractice) {\r\n            AuthService.updateSetDays(this.props.state.realtimestudent._id, this.state.days, this.state.smonths, this.state.emonths, this.state.timeframePracticebiao, this.state.min, this.state.tsmonths, this.state.temonths);\r\n\r\n        }\r\n    }\r\n     * \r\n//    oneCallThatsAll(id, checkbox, /*synccheck*/// timeSync, weeklytimebiao, dailytimebiao, dmin /*yesnoTme*/) {\r\n   //     return axios.post(API_URL + \"oneCallThatsAll\", {\r\n //           id,\r\n  //          main,\r\n   //         goals,\r\n  //      })\r\n   // }\r\n//} \r\n    AddGoals(id, main, goals) {\r\n        return axios.post(API_URL + \"AddGoals\", {\r\n            id,\r\n            main,\r\n            goals,\r\n        })\r\n    }\r\n    AddHomeworks(id, homeworks) {\r\n        return axios.post(API_URL + \"AddHomeworks\", {\r\n            id,\r\n            homeworks,\r\n        })\r\n    }\r\n    doneUpdatingnewStudent(id, done) {\r\n        return axios.post(API_URL + \"doneUpdatingnewStudent\", {\r\n            id,\r\n            done,\r\n        })\r\n    }\r\n\r\n\r\n   \r\n    AddHomework(id, homework, type, hwchecked, description, hwcheckboxes, date, hwresearch, day, hwsynccheck, hwdmin, HWweeklytimebiao, hwtimesync, hwlink, struggles, hwQuestions, firstMessage, hwdailytimebiao, hwtimew,) {\r\n        //add homework for student. Homework appears on students page.\r\n        //console.log(name, email, password);\r\n        //binding parameters.\r\n        return axios.post(API_URL + \"homework\", {\r\n            id,\r\n            homework,\r\n            type,\r\n            hwchecked,\r\n            description,\r\n            hwcheckboxes,\r\n            date,\r\n            hwresearch,\r\n            day,\r\n            hwsynccheck, hwdmin, HWweeklytimebiao, hwtimesync, hwlink, struggles, hwQuestions, firstMessage, hwdailytimebiao, hwtimew,\r\n        });\r\n        //console.log(response.data);\r\n\r\n\r\n        \r\n    }\r\n    AddGoal(id, mainGoal,goal, description, date, ) {\r\n        //add homework for student. Homework appears on students page.\r\n        //console.log(name, email, password);\r\n        //binding parameters.\r\n        return axios.post(API_URL + \"goals\", {\r\n            id,\r\n            mainGoal,\r\n            goal,\r\n           \r\n            description,\r\n           \r\n            date,\r\n           \r\n        });\r\n        //console.log(response.data);\r\n\r\n\r\n        \r\n    }\r\n    starPoints(id, manual) {\r\n        return axios.post(API_URL + \"starPoints\", {\r\n            id,\r\n\r\n            manual,\r\n\r\n        });\r\n    }\r\n    updateSetDays(id, totalDays, monthStart, monthEnd, timebiao, min, tsmonths, temonths) {\r\n        return axios.post(API_URL + \"totalDays\", {\r\n            id,\r\n\r\n            totalDays,\r\n            monthStart,\r\n            monthEnd,\r\n            timebiao,\r\n            min,\r\n            tsmonths,\r\n            temonths\r\n\r\n        });\r\n    }\r\n    setDayStreak(id, streak) {\r\n        return axios.post(API_URL + \"setDayStreak\", {\r\n            id,\r\n\r\n            streak,\r\n           \r\n\r\n        });\r\n    }\r\n    setWeekStreak(id, streak) {\r\n        return axios.post(API_URL + \"setWeekStreak\", {\r\n            id,\r\n\r\n            streak\r\n\r\n        });\r\n    }\r\n    savegoal(id, goal, main) {\r\n        return axios.post(API_URL + \"archivegoal\", {\r\n            id,\r\n            \r\n            goal,\r\n            main,\r\n            \r\n        });\r\n    }\r\n    daysPracticed(id, daysPracticed,) {\r\n        return axios.post(API_URL + \"daysPracticed\", {\r\n            id,\r\n\r\n            daysPracticed,\r\n\r\n        });\r\n    }\r\n   \r\n    deletegoal(id, goal, main) {\r\n        return axios.post(API_URL + \"deletegoal\", {\r\n            id,\r\n\r\n            goal,\r\n            main,\r\n\r\n        });\r\n    }\r\n    deleteHomework(id, homework) {\r\n        return axios.post(API_URL + \"deleteHomework\", {\r\n            id,\r\n\r\n            homework,\r\n\r\n\r\n        });\r\n    }\r\n    goalStatusChange(id, checked, goal, main, complete, level, sp, starpointsGoal, pass, npass) {\r\n        //add homework for student. Homework appears on students page.\r\n        //console.log(name, email, password);\r\n        //binding parameters.\r\n        return axios.post(API_URL + \"goalStatusChange\", {\r\n            id,\r\n            checked,\r\n            goal,\r\n            main,\r\n            complete,\r\n            level, sp, starpointsGoal, pass, npass\r\n\r\n           \r\n        });\r\n        //console.log(response.data);\r\n\r\n\r\n\r\n    }\r\n    changeactivestudent(id, id2,) {\r\n        //add homework for student. Homework appears on students page.\r\n        //console.log(name, email, password);\r\n        //binding parameters.\r\n        return axios.post(API_URL + \"changeactivestudent\", {\r\n            id,\r\n            id2,\r\n           \r\n\r\n\r\n        });\r\n        //console.log(response.data);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    changeuserinfo(id, accountid, firstname, lastname, about, email, phone) {\r\n        console.log(accountid);\r\n\r\n        return axios.post(API_URL + \"changeuserinfo\", {\r\n            id,\r\n            accountid,\r\n            firstname,\r\n            lastname,\r\n            about,\r\n            email,\r\n            phone\r\n        })\r\n\r\n    }\r\n    changeuserinfoA(id, firstname, lastname, email, password) {\r\n\r\n        return axios.post(API_URL + \"changeuserinfoA\", {\r\n            id,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password\r\n        })\r\n\r\n    }\r\n    changeAccountInfo(id, email, password) {\r\n        return axios.post(API_URL + \"changeAccountInfo\", {\r\n            id,\r\n\r\n            email,\r\n            password\r\n        })\r\n    }\r\n    newMainGoal(id, goal, ){\r\n        return axios.post(API_URL + \"newMainGoal\", {\r\n            \r\n            id,\r\n            goal,\r\n            \r\n            \r\n           \r\n        })\r\n    }\r\n    changeStudentinfo(id, accountid, firstname, lastname, about, email, phone, time, checkbox,day) {\r\n        console.log(id);\r\n\r\n        return axios.post(API_URL + \"changeStudentinfo\", {\r\n            \r\n            id,\r\n            accountid,\r\n            firstname,\r\n            lastname,\r\n           about,\r\n            email,\r\n            phone,\r\n            time,\r\n            checkbox,\r\n            day,\r\n            \r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    admindelete(id) {\r\n        return axios.post(API_URL + \"admindelete\", {\r\n\r\n            id,\r\n\r\n        })\r\n    }\r\n    changeStudentinfoA(id, firstname, lastname, email,  checkbox,  password) {\r\n\r\n        return axios.post(API_URL + \"changeStudentinfoA\", {\r\n\r\n            id,\r\n            \r\n            firstname,\r\n            lastname,\r\n            \r\n            email,\r\n           \r\n            \r\n            checkbox,\r\n            \r\n            password\r\n        })\r\n\r\n    }\r\n    uploadPhoto(photo, id, background, role) {\r\n        console.log(background);\r\n        return axios.post('https://legato.flinnapps.com/api/auth/postpic',  photo ).then(response => {\r\n\r\n        //return axios.post('http://localhost:8080/api/auth/postpic', photo, )\r\n\r\n           // .then(response => {\r\n            console.log(response.data);\r\n            const picpath = response.data.path;\r\n                        return axios.post(\"https://legato.flinnapps.com/api/auth/profilepic\", {\r\n\r\n           // return axios.post(\"http://localhost:8080/api/auth/profilepic\", {\r\n                picpath,\r\n                id,\r\n                background,\r\n                role\r\n            }).then(response => {\r\n                console.log(response.data)\r\n            })\r\n        })\r\n\r\n        }\r\n\r\n    checked(id, checked, level, sp, starpointsGoal, pass, daystreak, npass) {\r\n        console.log(id);\r\n\r\n        return axios.post(API_URL + \"checked\", {\r\n            id,\r\n            checked,\r\n            level, sp, starpointsGoal, pass, daystreak, npass\r\n\r\n           \r\n\r\n        })\r\n\r\n    }\r\n    getAllaccounts(email, password) {\r\n        return axios.post(API_URL + \"getAllaccounts\", {\r\n            email,\r\n            password\r\n        })\r\n    }\r\n    getAllstudents(email, password) {\r\n        return axios.post(API_URL + \"getAllstudents\", {\r\n            email,\r\n            password\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}