{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/signin.js\";\nimport React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This is not a valid email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n}; //this component signs in a teacher allready in the database.\n//using react-validation.\n\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nexport default class Login extends Component {\n  componentDidMount() {\n    let auth = AuthService.getCurrentUser();\n\n    if (auth) {\n      if (auth.role === \"teacher\") {\n        this.props.history.push(\"/profile\");\n        window.location.reload();\n      }\n\n      if (auth.role === \"student\") {\n        this.props.history.push(\"/student_routes\");\n        window.location.reload();\n      }\n    }\n  } //state creation and binding.\n\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this); //this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\",\n      attempts: 0\n    };\n  } //handles all changes with state.\n\n\n  //submites for login using the controller to connect with backend. Sends to the teacher profile if teacher or the student if back end spits out student.\n  handleLogin(e) {\n    e.preventDefault();\n    let attempt = this.state.attempts + 1;\n    this.setState({\n      message: \"\",\n      loading: true,\n      attempts: attempt\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      if (!this.state.email || !this.state.password) {\n        this.setState({\n          message: \"Please include correct email and password\"\n        });\n      } else {\n        var lower = this.state.email.toLowerCase();\n        AuthService.login(lower, this.state.password).then(response => {\n          //console.log(response);\n          if (response.role === \"admin\") {\n            this.props.history.push(\"/admin\");\n            window.location.reload();\n          } else {\n            if (response.role === \"student\") {\n              console.log(response.data);\n              this.props.history.push({\n                pathname: \"/student_routes\",\n                state: {\n                  current: response.data\n                }\n              });\n              window.location.reload();\n            } else {\n              this.props.history.push(\"/profile\");\n              window.location.reload();\n            }\n          }\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        });\n      }\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    //login page for the screen. \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n            alt: \"profile-img\",\n            className: \"profile-img-card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              value: this.props.state.email,\n              onChange: this.props.handleChange,\n              maxlength: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: this.props.state.password,\n              onChange: this.props.handleChange,\n              maxlength: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              marginTop: \"37px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn  btn-block\",\n              style: {\n                background: \"#696eb5\",\n                height: \"35px\",\n                color: \"#F0F2EF\",\n                width: \"85spx\"\n              },\n              onClick: this.props.handleLogin.bind(this, {\n                currentUser: true,\n                student: true\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/signin.js"],"names":["React","Component","AuthService","email","value","isEmail","required","Login","componentDidMount","auth","getCurrentUser","role","props","history","push","window","location","reload","constructor","handleChange","event","name","target","setState","handleLogin","bind","state","password","loading","message","attempts","e","preventDefault","attempt","form","validateAll","checkBtn","context","_errors","length","lower","toLowerCase","login","then","response","console","log","data","pathname","current","error","resMessage","toString","render","marginTop","background","height","color","width","currentUser","student"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAIA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,MAAI,CAACC,OAAO,CAACD,KAAD,CAAZ,EAAqB;AACjB,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ,CARD,C,CAUA;AACA;;;AACA,MAAME,QAAQ,GAAGF,KAAK,IAAI;AACtB,MAAI,CAACA,KAAL,EAAY;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ,CARD;;AAUA,eAAe,MAAMG,KAAN,SAAoBN,SAApB,CAA8B;AACzCO,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,IAAI,GAAGP,WAAW,CAACQ,cAAZ,EAAX;;AACA,QAAID,IAAJ,EAAU;AACN,UAAIA,IAAI,CAACE,IAAL,KAAc,SAAlB,EAA6B;AACzB,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AACD,UAAIR,IAAI,CAACE,IAAL,KAAc,SAAlB,EAA6B;AACzB,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AACJ;AACJ,GAbwC,CAczC;;;AACAC,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBO,YAhBmB,GAgBHC,KAAD,IAAW;AACtB,YAAM;AAAEC,QAAAA,IAAF;AAAQjB,QAAAA;AAAR,UAAkBgB,KAAK,CAACE,MAA9B;AAEA,WAAKC,QAAL,CAAc;AACV,SAACF,IAAD,GAAQjB;AADE,OAAd;AAGH,KAtBkB;;AAEf,SAAKoB,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKN,YAAL,GAAoB,KAAKA,YAAL,CAAkBM,IAAlB,CAAuB,IAAvB,CAApB,CAHe,CAIf;;AAEA,SAAKC,KAAL,GAAa;AAETvB,MAAAA,KAAK,EAAE,EAFE;AAGTwB,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,OAAO,EAAE,KAJA;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,QAAQ,EAAC;AANA,KAAb;AAQH,GA7BwC,CA8BzC;;;AAQA;AACAN,EAAAA,WAAW,CAACO,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,OAAO,GAAG,KAAKP,KAAL,CAAWI,QAAX,GAAsB,CAApC;AACA,SAAKP,QAAL,CAAc;AACVM,MAAAA,OAAO,EAAE,EADC;AAEVD,MAAAA,OAAO,EAAE,IAFC;AAGVE,MAAAA,QAAQ,EAAEG;AAHA,KAAd;AAMA,SAAKC,IAAL,CAAUC,WAAV;;AAEA,QAAI,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,OAAtB,CAA8BC,MAA9B,KAAyC,CAA7C,EACA;AACI,UAAI,CAAC,KAAKb,KAAL,CAAWvB,KAAZ,IAAqB,CAAC,KAAKuB,KAAL,CAAWC,QAArC,EAA+C;AAC3C,aAAKJ,QAAL,CAAc;AACVM,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH,OAJD,MAKK;AACD,YAAIW,KAAK,GAAG,KAAKd,KAAL,CAAWvB,KAAX,CAAiBsC,WAAjB,EAAZ;AACJvC,QAAAA,WAAW,CAACwC,KAAZ,CAAkBF,KAAlB,EAAyB,KAAKd,KAAL,CAAWC,QAApC,EAA8CgB,IAA9C,CAAmDC,QAAQ,IAAI;AAC3D;AAGA,cAAIA,QAAQ,CAACjC,IAAT,KAAkB,OAAtB,EAA+B;AAC3B,iBAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACAC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAEH,WAJD,MAKK;AACD,gBAAI2B,QAAQ,CAACjC,IAAT,KAAkB,SAAtB,EAAiC;AAC7BkC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,mBAAKnC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACpBkC,gBAAAA,QAAQ,EAAE,iBADU;AAEpBtB,gBAAAA,KAAK,EAAE;AAAEuB,kBAAAA,OAAO,EAAEL,QAAQ,CAACG;AAApB;AAFa,eAAxB;AAIAhC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,aAPD,MAQK;AACD,mBAAKL,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACAC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AACJ;AACA,SAvBL,EAwBIiC,KAAK,IAAI;AACL,gBAAMC,UAAU,GACXD,KAAK,CAACN,QAAN,IACGM,KAAK,CAACN,QAAN,CAAeG,IADlB,IAEGG,KAAK,CAACN,QAAN,CAAeG,IAAf,CAAoBlB,OAFxB,IAGAqB,KAAK,CAACrB,OAHN,IAIAqB,KAAK,CAACE,QAAN,EALJ;AAOA,eAAK7B,QAAL,CAAc;AACVK,YAAAA,OAAO,EAAE,KADC;AAEVC,YAAAA,OAAO,EAAEsB;AAFC,WAAd;AAIH,SApCL;AAsCC;AACJ,KAhDD,MAgDO;AACH,WAAK5B,QAAL,CAAc;AACVK,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH;AACJ;;AAEDyB,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAC,6CAAT;AAAuD,YAAA,GAAG,EAAC,aAA3D;AAAyE,YAAA,SAAS,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEgB;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,SAAS,EAAC,cAFd;AAGI,cAAA,IAAI,EAAC,OAHT;AAII,cAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWc,KAAX,CAAiBvB,KAJ5B;AAKI,cAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWO,YALzB;AAMI,cAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFhB,eAcgB;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,SAAS,EAAC,cAFd;AAGI,cAAA,IAAI,EAAC,UAHT;AAII,cAAA,KAAK,EAAE,KAAKP,KAAL,CAAWc,KAAX,CAAiBC,QAJ5B;AAKI,cAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWO,YALzB;AAMI,cAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdhB,eA2BgB;AAAK,YAAA,SAAS,EAAC,YAAf;AAA4B,YAAA,KAAK,EAAE;AAACmC,cAAAA,SAAS,EAAC;AAAX,aAAnC;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,gBAAlB;AAAmC,cAAA,KAAK,EAAE;AAAEC,gBAAAA,UAAU,EAAE,SAAd;AAAyBC,gBAAAA,MAAM,EAAE,MAAjC;AAAyCC,gBAAAA,KAAK,EAAE,SAAhD;AAA2DC,gBAAAA,KAAK,EAAE;AAAlE,eAA1C;AAAuH,cAAA,OAAO,EAAE,KAAK9C,KAAL,CAAWY,WAAX,CAAuBC,IAAvB,CAA4B,IAA5B,EAAiC;AAACkC,gBAAAA,WAAW,EAAC,IAAb;AAAkBC,gBAAAA,OAAO,EAAC;AAA1B,eAAjC,CAAhI;AAAA,qCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA3BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AArJwC","sourcesContent":["import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n//this component signs in a teacher allready in the database.\r\n//using react-validation.\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n    componentDidMount() {\r\n        let auth = AuthService.getCurrentUser();\r\n        if (auth) {\r\n            if (auth.role === \"teacher\") {\r\n                this.props.history.push(\"/profile\");\r\n                window.location.reload();\r\n            }\r\n            if (auth.role === \"student\") {\r\n                this.props.history.push(\"/student_routes\");\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n    //state creation and binding.\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        //this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            \r\n            email: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\",\r\n            attempts:0,\r\n        };\r\n    }\r\n    //handles all changes with state.\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    //submites for login using the controller to connect with backend. Sends to the teacher profile if teacher or the student if back end spits out student.\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n        let attempt = this.state.attempts + 1;\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true,\r\n            attempts: attempt\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0)\r\n        {\r\n            if (!this.state.email || !this.state.password) {\r\n                this.setState({\r\n                    message:\"Please include correct email and password\"\r\n                })\r\n            }\r\n            else { \r\n                var lower = this.state.email.toLowerCase();\r\n            AuthService.login(lower, this.state.password).then(response => {\r\n                //console.log(response);\r\n\r\n                \r\n                if (response.role === \"admin\") {\r\n                    this.props.history.push(\"/admin\")\r\n                    window.location.reload();\r\n\r\n                }\r\n                else {\r\n                    if (response.role === \"student\") {\r\n                        console.log(response.data);\r\n                        this.props.history.push({\r\n                            pathname: \"/student_routes\",\r\n                            state: { current: response.data }\r\n                        });\r\n                        window.location.reload();\r\n                    }\r\n                    else {\r\n                        this.props.history.push(\"/profile\");\r\n                        window.location.reload();\r\n                    }\r\n                }\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n                );\r\n            }\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //login page for the screen. \r\n        return (\r\n            <div >\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" alt=\"profile-img\" className=\"profile-img-card\"/>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Email\">Email</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        value={this.props.state.email}\r\n                                        onChange={this.props.handleChange}\r\n                                        maxlength=\"30\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.props.state.password}\r\n                                        onChange={this.props.handleChange}\r\n                                        maxlength=\"20\"\r\n\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\" style={{marginTop:\"37px\"}}>\r\n                                    <button className=\"btn  btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"85spx\" }} onClick={this.props.handleLogin.bind(this,{currentUser:true,student:true})} >\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                   \r\n                    \r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}