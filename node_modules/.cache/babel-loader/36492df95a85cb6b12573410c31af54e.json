{"ast":null,"code":"class studentSevice {\n  /**\r\n   * \r\n   * @param {*} goal \r\n   * @param {*} maingoals \r\n   * @param {*} mainGoal \r\n   * @param {*} add \r\n   * @param {*} del \r\n   * @returns new updated list of a students goals.\r\n   */\n  updateAddGoals(goal, maingoals, mainGoal, myswitch) {\n    debugger;\n    let mainG = mainGoal;\n    let currentmains = maingoals;\n    let i = this.compare(maingoals, mainG);\n    let j = this.compare(mainG.mainGoal.goals, goal ? goal : {\n      id: 1\n    }, true);\n\n    switch (myswitch) {\n      case \"addmain\":\n        currentmains.push(mainG);\n        break;\n\n      case \"addgoal\":\n        currentmains[i].mainGoal.goals.push(goal);\n        break;\n\n      case \"delmain\":\n        currentmains.splice(i, 1);\n        break;\n\n      case \"delgoal\":\n        currentmains[i].mainGoal.goals.splice(j, 1);\n        break;\n\n      case \"updatemain\":\n        currentmains[i] = mainG;\n        break;\n\n      case \"updategoal\":\n        currentmains[i].mainGoal.goals[j] = goal;\n        break;\n    }\n\n    return currentmains;\n  }\n\n  compare(compare, compare1, condition) {\n    debugger;\n    let value;\n\n    for (let i = 0; i < compare.length; i++) {\n      if (!condition) {\n        if (compare1._id ? compare[i]._id === compare1._id : compare[i].mainGoal.id === compare1.mainGoal.id) {\n          value = i;\n          break;\n        }\n      } else if (condition) {\n        if (compare1._id ? compare[i]._id === compare1._id : compare[i].id === compare1.id) {\n          value = i;\n          break;\n        }\n      } else {\n        value = false;\n      }\n    }\n\n    return value;\n  }\n\n}\n\nexport default new studentSevice();","map":{"version":3,"sources":["/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/studentService.js"],"names":["studentSevice","updateAddGoals","goal","maingoals","mainGoal","myswitch","mainG","currentmains","i","compare","j","goals","id","push","splice","compare1","condition","value","length","_id"],"mappings":"AACA,MAAMA,aAAN,CAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,cAAc,CAACC,IAAD,EAAOC,SAAP,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAuC;AACjD;AACA,QAAIC,KAAK,GAAGF,QAAZ;AACA,QAAIG,YAAY,GAAEJ,SAAlB;AACA,QAAIK,CAAC,GAAC,KAAKC,OAAL,CAAaN,SAAb,EAAwBG,KAAxB,CAAN;AACA,QAAII,CAAC,GAAE,KAAKD,OAAL,CAAaH,KAAK,CAACF,QAAN,CAAeO,KAA5B,EAAmCT,IAAI,GAAEA,IAAF,GAAQ;AAACU,MAAAA,EAAE,EAAC;AAAJ,KAA/C,EAAuD,IAAvD,CAAP;;AACA,YAAOP,QAAP;AACI,WAAK,SAAL;AACIE,QAAAA,YAAY,CAACM,IAAb,CAAkBP,KAAlB;AACA;;AACJ,WAAK,SAAL;AACIC,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBJ,QAAhB,CAAyBO,KAAzB,CAA+BE,IAA/B,CAAoCX,IAApC;AACA;;AACJ,WAAK,SAAL;AACIK,QAAAA,YAAY,CAACO,MAAb,CAAoBN,CAApB,EAAuB,CAAvB;AACA;;AACJ,WAAK,SAAL;AACID,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBJ,QAAhB,CAAyBO,KAAzB,CAA+BG,MAA/B,CAAsCJ,CAAtC,EAAyC,CAAzC;AACA;;AACJ,WAAK,YAAL;AACIH,QAAAA,YAAY,CAACC,CAAD,CAAZ,GAAiBF,KAAjB;AACA;;AACJ,WAAK,YAAL;AACIC,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBJ,QAAhB,CAAyBO,KAAzB,CAA+BD,CAA/B,IAAmCR,IAAnC;AACA;AAlBR;;AAqBA,WAAOK,YAAP;AACC;;AACDE,EAAAA,OAAO,CAACA,OAAD,EAAUM,QAAV,EAAoBC,SAApB,EAA8B;AACjC;AACA,QAAIC,KAAJ;;AACA,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACC,OAAO,CAACS,MAAvB,EAA+BV,CAAC,EAAhC,EAAmC;AAC/B,UAAG,CAACQ,SAAJ,EAAc;AACd,YAAID,QAAQ,CAACI,GAAT,GAAcV,OAAO,CAACD,CAAD,CAAP,CAAWW,GAAX,KAAkBJ,QAAQ,CAACI,GAAzC,GAA+CV,OAAO,CAACD,CAAD,CAAP,CAAWJ,QAAX,CAAoBQ,EAApB,KAA0BG,QAAQ,CAACX,QAAT,CAAkBQ,EAA/F,EAAoG;AAC5FK,UAAAA,KAAK,GAAET,CAAP;AACA;AACP;AACA,OALD,MAMK,IAAGQ,SAAH,EAAa;AACd,YAAGD,QAAQ,CAACI,GAAT,GAAcV,OAAO,CAACD,CAAD,CAAP,CAAWW,GAAX,KAAkBJ,QAAQ,CAACI,GAAzC,GAA+CV,OAAO,CAACD,CAAD,CAAP,CAAWI,EAAX,KAAiBG,QAAQ,CAACH,EAA5E,EAA+E;AAC/EK,UAAAA,KAAK,GAAET,CAAP;AACA;AACC;AACJ,OALI,MAMD;AACAS,QAAAA,KAAK,GAAE,KAAP;AACH;AACJ;;AACD,WAAOA,KAAP;AACH;;AA5De;;AAiEpB,eAAe,IAAIjB,aAAJ,EAAf","sourcesContent":["\r\nclass studentSevice {\r\n/**\r\n * \r\n * @param {*} goal \r\n * @param {*} maingoals \r\n * @param {*} mainGoal \r\n * @param {*} add \r\n * @param {*} del \r\n * @returns new updated list of a students goals.\r\n */\r\nupdateAddGoals(goal, maingoals, mainGoal, myswitch ) {\r\n    debugger\r\n    let mainG = mainGoal;\r\n    let currentmains= maingoals;\r\n    let i=this.compare(maingoals, mainG)\r\n    let j= this.compare(mainG.mainGoal.goals, goal? goal: {id:1}, true)\r\n    switch(myswitch){\r\n        case \"addmain\":\r\n            currentmains.push(mainG);\r\n            break;\r\n        case \"addgoal\":\r\n            currentmains[i].mainGoal.goals.push(goal);\r\n            break;\r\n        case \"delmain\":\r\n            currentmains.splice(i, 1);\r\n            break;\r\n        case \"delgoal\":\r\n            currentmains[i].mainGoal.goals.splice(j, 1);\r\n            break;\r\n        case \"updatemain\":\r\n            currentmains[i]= mainG;\r\n            break;\r\n        case \"updategoal\":\r\n            currentmains[i].mainGoal.goals[j]= goal\r\n            break\r\n\r\n    }\r\n    return currentmains\r\n    }\r\n    compare(compare, compare1, condition){\r\n        debugger\r\n        let value;\r\n        for(let i=0; i<compare.length; i++){\r\n            if(!condition){\r\n            if((compare1._id? compare[i]._id=== compare1._id : compare[i].mainGoal.id=== compare1.mainGoal.id) ){\r\n                    value= i\r\n                    break;\r\n            }\r\n            }\r\n            else if(condition){\r\n                if(compare1._id? compare[i]._id=== compare1._id : compare[i].id=== compare1.id){\r\n                value= i\r\n                break;\r\n                }\r\n            }\r\n            else{\r\n                value= false\r\n            }\r\n        }\r\n        return value\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default new studentSevice();"]},"metadata":{},"sourceType":"module"}