{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/existingEmail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Epopup from './existingPopup.js'; //Allows me to create another popup if an account for a student entered allready exits. This is an edge case problem solution.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExistingEmail(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(true);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n    props.handleClose();\n  };\n\n  const isDouble = () => {\n    props.doubleAccount();\n    togglePopup();\n  };\n\n  const separated = () => {\n    props.separate();\n    togglePopup();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      zIndex: \"1010\"\n    },\n    children: isOpen && /*#__PURE__*/_jsxDEV(Epopup, {\n      handleClose: togglePopup,\n      doubleAccount: isDouble,\n      separate: separated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ExistingEmail, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");\n\n_c = ExistingEmail;\nexport default ExistingEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingEmail\");","map":{"version":3,"sources":["/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/existingEmail.js"],"names":["React","useState","Epopup","ExistingEmail","props","isOpen","setIsOpen","togglePopup","handleClose","isDouble","doubleAccount","separated","separate","zIndex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CACA;;;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACtBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAD,IAAAA,KAAK,CAACI,WAAN;AACH,GAHD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACnBL,IAAAA,KAAK,CAACM,aAAN;AACAH,IAAAA,WAAW;AACd,GAHD;;AAIA,QAAMI,SAAS,GAAG,MAAM;AACpBP,IAAAA,KAAK,CAACQ,QAAN;AACAL,IAAAA,WAAW;AACd,GAHD;;AAKA,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA,cAEFR,MAAM,iBAAI,QAAC,MAAD;AACP,MAAA,WAAW,EAAEE,WADN;AAEP,MAAA,aAAa,EAAEE,QAFR;AAGP,MAAA,QAAQ,EAAEE;AAHH;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UAAP;AASH;;GAzBQR,a;;KAAAA,a;AA2BT,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Epopup from './existingPopup.js';\r\n//Allows me to create another popup if an account for a student entered allready exits. This is an edge case problem solution.\r\nfunction ExistingEmail(props) {\r\n    const [isOpen, setIsOpen] = useState(true);\r\n\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen);\r\n        props.handleClose();\r\n    }\r\n    const isDouble = () => {\r\n        props.doubleAccount();\r\n        togglePopup();\r\n    }\r\n    const separated = () => {\r\n        props.separate();\r\n        togglePopup();\r\n    }\r\n\r\n    return <div style={{ zIndex: \"1010\" }}>\r\n        \r\n        {isOpen && <Epopup \r\n            handleClose={togglePopup}\r\n            doubleAccount={isDouble}\r\n            separate={separated}\r\n            \r\n        />}\r\n    </div>\r\n}\r\n\r\nexport default ExistingEmail;"]},"metadata":{},"sourceType":"module"}