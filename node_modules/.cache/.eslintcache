[{"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/index.js":"1","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/App.js":"2","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/admin.js":"3","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/auth.service.js":"4","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/about.js":"5","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/userProfile.js":"6","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/signin.js":"7","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/metro.js":"8","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/students.teacher.js":"9","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/calendar.js":"10","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/contact.js":"11","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/student.js":"12","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/home.js":"13","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/profile.js":"14","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/usersignup.js":"15","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/student_routes.js":"16","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/adminedit.js":"17","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/prostudentList1.js":"18","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/prostudentList.js":"19","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/short.js":"20","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/deletestudent.js":"21","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/button.js":"22","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/splashscreen.js":"23","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/slider.js":"24","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/studentEdit.js":"25","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/practice.js":"26","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/archive.js":"27","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/practice2.js":"28","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/notes.js":"29","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/editAlltheHomework.js":"30","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/goals.js":"31","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/student_array.js":"32","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/newuser.js":"33","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/existingEmail.js":"34","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/dialoghelp.js":"35","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/studentList.js":"36","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/add1student.js":"37","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/editing.js":"38","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/diapicture.js":"39","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/editBackground.js":"40","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/homeworks.js":"41","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/showHomework.js":"42","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/routeFunc.js":"43","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/progress.js":"44","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/dropdown.js":"45","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/rendering.js":"46","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/percent.js":"47","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/del.js":"48","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/showgoal.js":"49","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/diagoal.js":"50","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/moreProgress.js":"51","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/archiving.js":"52","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/starpointz.js":"53","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/checkbox2.js":"54","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/editProgress.js":"55","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/setday.js":"56","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/addStudent.js":"57","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/changeCurrent.js":"58","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/existingPopup.js":"59","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/diapiccontent.js":"60","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/checkbox.js":"61","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/show_homework.js":"62","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/newPassword.js":"63","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/show_goal.js":"64","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/addGoal.js":"65","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/fullpic.js":"66","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/homeworked.js":"67","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/student_profile.js":"68","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/timess.js":"69","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/messageStudenthw.js":"70","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/practice3.js":"71","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/times.js":"72","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/goals2.js":"73","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/newapp.js":"74","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/dashboard.js":"75","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/sidemenu.js":"76","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/profilepic.js":"77","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/menu.js":"78","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/logout.js":"79","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/mystudents.js":"80","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/chat.js":"81","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/todaycomponent.js":"82","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/metro.js":"83","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/dash.js":"84","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/studentDash.js":"85","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/goals.js":"86","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/studentinfo.js":"87","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/homework.js":"88","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/notes.js":"89","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/progress.js":"90","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/slider.js":"91","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/calendar.js":"92","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/signin.js":"93","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/admin.js":"94","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/addStudent.js":"95","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/dropdown.js":"96","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/calendarService.js":"97","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/stats.js":"98","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/components/progresscircle.js":"99","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/components/moreProgress.js":"100","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/components/checkbox.js":"101","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/teacher.js":"102","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/components/checkbox2.js":"103","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/studentService.js":"104","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/addGoal.js":"105","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/archive.js":"106","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/newnote.js":"107","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/addhomework.js":"108","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/times.js":"109"},{"size":321,"mtime":1651720712276,"results":"110","hashOfConfig":"111"},{"size":4489,"mtime":1653453235806,"results":"112","hashOfConfig":"111"},{"size":6804,"mtime":1651718695896,"results":"113","hashOfConfig":"111"},{"size":22257,"mtime":1652849859258,"results":"114","hashOfConfig":"111"},{"size":547,"mtime":1651718695687,"results":"115","hashOfConfig":"111"},{"size":23717,"mtime":1651718695880,"results":"116","hashOfConfig":"111"},{"size":8164,"mtime":1651718695844,"results":"117","hashOfConfig":"111"},{"size":4430,"mtime":1651718695813,"results":"118","hashOfConfig":"111"},{"size":7086,"mtime":1651718695875,"results":"119","hashOfConfig":"111"},{"size":23312,"mtime":1651718695719,"results":"120","hashOfConfig":"111"},{"size":517,"mtime":1651718695734,"results":"121","hashOfConfig":"111"},{"size":72887,"mtime":1651718695844,"results":"122","hashOfConfig":"111"},{"size":1357,"mtime":1651718695797,"results":"123","hashOfConfig":"111"},{"size":11955,"mtime":1651718695828,"results":"124","hashOfConfig":"111"},{"size":7781,"mtime":1651718695896,"results":"125","hashOfConfig":"111"},{"size":9004,"mtime":1651718695641,"results":"126","hashOfConfig":"111"},{"size":15262,"mtime":1651718695911,"results":"127","hashOfConfig":"111"},{"size":5119,"mtime":1651718695500,"results":"128","hashOfConfig":"111"},{"size":6735,"mtime":1651718695500,"results":"129","hashOfConfig":"111"},{"size":1546,"mtime":1651718695531,"results":"130","hashOfConfig":"111"},{"size":381,"mtime":1651718695266,"results":"131","hashOfConfig":"111"},{"size":456,"mtime":1651718695203,"results":"132","hashOfConfig":"111"},{"size":1722,"mtime":1651718695578,"results":"133","hashOfConfig":"111"},{"size":1206,"mtime":1651718695578,"results":"134","hashOfConfig":"111"},{"size":12396,"mtime":1651718695609,"results":"135","hashOfConfig":"111"},{"size":1013,"mtime":1651718695453,"results":"136","hashOfConfig":"111"},{"size":3027,"mtime":1651718695187,"results":"137","hashOfConfig":"111"},{"size":2008,"mtime":1651718695468,"results":"138","hashOfConfig":"111"},{"size":18865,"mtime":1651718695438,"results":"139","hashOfConfig":"111"},{"size":7397,"mtime":1651718695328,"results":"140","hashOfConfig":"111"},{"size":90610,"mtime":1651718695750,"results":"141","hashOfConfig":"111"},{"size":1364,"mtime":1651718695625,"results":"142","hashOfConfig":"111"},{"size":1123,"mtime":1651718695438,"results":"143","hashOfConfig":"111"},{"size":847,"mtime":1651718695359,"results":"144","hashOfConfig":"111"},{"size":1085,"mtime":1651718695266,"results":"145","hashOfConfig":"111"},{"size":18149,"mtime":1651718695625,"results":"146","hashOfConfig":"111"},{"size":52705,"mtime":1651718695703,"results":"147","hashOfConfig":"111"},{"size":12229,"mtime":1651718695344,"results":"148","hashOfConfig":"111"},{"size":3520,"mtime":1651718695281,"results":"149","hashOfConfig":"111"},{"size":2858,"mtime":1651718695328,"results":"150","hashOfConfig":"111"},{"size":540,"mtime":1651718695390,"results":"151","hashOfConfig":"111"},{"size":776,"mtime":1651718695531,"results":"152","hashOfConfig":"111"},{"size":810,"mtime":1651718695516,"results":"153","hashOfConfig":"111"},{"size":10771,"mtime":1651718695468,"results":"154","hashOfConfig":"111"},{"size":9122,"mtime":1651718695297,"results":"155","hashOfConfig":"111"},{"size":698,"mtime":1651718695500,"results":"156","hashOfConfig":"111"},{"size":1875,"mtime":1651718695438,"results":"157","hashOfConfig":"111"},{"size":2369,"mtime":1651718695250,"results":"158","hashOfConfig":"111"},{"size":539,"mtime":1651718695563,"results":"159","hashOfConfig":"111"},{"size":459,"mtime":1651718695266,"results":"160","hashOfConfig":"111"},{"size":11829,"mtime":1651718695406,"results":"161","hashOfConfig":"111"},{"size":2221,"mtime":1651718695203,"results":"162","hashOfConfig":"111"},{"size":2659,"mtime":1651718695578,"results":"163","hashOfConfig":"111"},{"size":3252,"mtime":1651718695234,"results":"164","hashOfConfig":"111"},{"size":13002,"mtime":1651718695344,"results":"165","hashOfConfig":"111"},{"size":1511,"mtime":1651718695516,"results":"166","hashOfConfig":"111"},{"size":8617,"mtime":1651718695171,"results":"167","hashOfConfig":"111"},{"size":1197,"mtime":1651718695219,"results":"168","hashOfConfig":"111"},{"size":1570,"mtime":1651718695359,"results":"169","hashOfConfig":"111"},{"size":4709,"mtime":1651718695281,"results":"170","hashOfConfig":"111"},{"size":13939,"mtime":1651718695219,"results":"171","hashOfConfig":"111"},{"size":58434,"mtime":1651718695547,"results":"172","hashOfConfig":"111"},{"size":3140,"mtime":1651718695422,"results":"173","hashOfConfig":"111"},{"size":10139,"mtime":1651718695547,"results":"174","hashOfConfig":"111"},{"size":2939,"mtime":1651718695171,"results":"175","hashOfConfig":"111"},{"size":914,"mtime":1651718695375,"results":"176","hashOfConfig":"111"},{"size":28599,"mtime":1651718695375,"results":"177","hashOfConfig":"111"},{"size":62575,"mtime":1651718695860,"results":"178","hashOfConfig":"111"},{"size":672,"mtime":1651718695656,"results":"179","hashOfConfig":"111"},{"size":9140,"mtime":1651718695406,"results":"180","hashOfConfig":"111"},{"size":711,"mtime":1651718695468,"results":"181","hashOfConfig":"111"},{"size":8351,"mtime":1651718695641,"results":"182","hashOfConfig":"111"},{"size":34798,"mtime":1651718695766,"results":"183","hashOfConfig":"111"},{"size":15208,"mtime":1651718695141,"results":"184","hashOfConfig":"111"},{"size":2847,"mtime":1652925022312,"results":"185","hashOfConfig":"111"},{"size":1067,"mtime":1652922458373,"results":"186","hashOfConfig":"111"},{"size":665,"mtime":1651723226694,"results":"187","hashOfConfig":"111"},{"size":1368,"mtime":1652924145746,"results":"188","hashOfConfig":"111"},{"size":713,"mtime":1652397096278,"results":"189","hashOfConfig":"111"},{"size":1826,"mtime":1652924152861,"results":"190","hashOfConfig":"111"},{"size":653,"mtime":1652920821126,"results":"191","hashOfConfig":"111"},{"size":910,"mtime":1652830649182,"results":"192","hashOfConfig":"111"},{"size":3867,"mtime":1652920864214,"results":"193","hashOfConfig":"111"},{"size":1636,"mtime":1652919821612,"results":"194","hashOfConfig":"111"},{"size":1693,"mtime":1652920933574,"results":"195","hashOfConfig":"111"},{"size":5905,"mtime":1653281884573,"results":"196","hashOfConfig":"111"},{"size":543,"mtime":1651765485460,"results":"197","hashOfConfig":"111"},{"size":4349,"mtime":1653452002184,"results":"198","hashOfConfig":"111"},{"size":2632,"mtime":1653281416186,"results":"199","hashOfConfig":"111"},{"size":1297,"mtime":1653455796561,"results":"200","hashOfConfig":"111"},{"size":1098,"mtime":1651791981608,"results":"201","hashOfConfig":"111"},{"size":1849,"mtime":1652840299979,"results":"202","hashOfConfig":"111"},{"size":4465,"mtime":1652925375588,"results":"203","hashOfConfig":"111"},{"size":3985,"mtime":1652324772875,"results":"204","hashOfConfig":"111"},{"size":10608,"mtime":1652832076875,"results":"205","hashOfConfig":"111"},{"size":9122,"mtime":1651718695297,"results":"206","hashOfConfig":"111"},{"size":1526,"mtime":1652832530236,"results":"207","hashOfConfig":"111"},{"size":566,"mtime":1652920977762,"results":"208","hashOfConfig":"111"},{"size":11015,"mtime":1653281804001,"results":"209","hashOfConfig":"111"},{"size":1969,"mtime":1653455683085,"results":"210","hashOfConfig":"111"},{"size":7455,"mtime":1653455264614,"results":"211","hashOfConfig":"111"},{"size":326,"mtime":1652922566026,"results":"212","hashOfConfig":"111"},{"size":1549,"mtime":1653281416186,"results":"213","hashOfConfig":"111"},{"size":4080,"mtime":1653454884848,"results":"214","hashOfConfig":"111"},{"size":5067,"mtime":1653281416186,"results":"215","hashOfConfig":"111"},{"size":2211,"mtime":1653278754597,"results":"216","hashOfConfig":"111"},{"size":1050,"mtime":1653280785258,"results":"217","hashOfConfig":"111"},{"size":7583,"mtime":1653450646824,"results":"218","hashOfConfig":"111"},{"size":5249,"mtime":1653456046227,"results":"219","hashOfConfig":"111"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},"a6mtn4",{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"228"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"228"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"228"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"228"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"228"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"228"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"228"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"228"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"228"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"228"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"228"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"228"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"228"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"228"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"228"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"228"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"228"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"228"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"228"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"228"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"228"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"228"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"228"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"228"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"228"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"228"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"228"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"228"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"228"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"228"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"228"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"228"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"228"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"228"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"228"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"228"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"228"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"228"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"228"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"228"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"222"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"222"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"222"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"222"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"222"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"222"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"222"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"222"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"222"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"222"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"222"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/index.js",[],["491","492"],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/App.js",["493"],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/admin.js",["494"],"import React, { Component } from \"react\";\r\nimport authService from \"../services/auth.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport AdminEdit from \"./adminedit.js\";\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.more = this.more.bind(this);\r\n        this.less = this.less.bind(this);\r\n        this.deleted = this.deleted.bind(this);\r\n\r\n        this.state = {\r\n            currentUser: undefined,\r\n            accounts: [],\r\n            Teachers: [],\r\n            students: [],\r\n            more: false,\r\n            current: undefined,\r\n            account: false,\r\n        }\r\n\r\n    };\r\n\r\n    async componentDidMount() {\r\n        let auth = AuthService.getCurrentUser();\r\n        if (auth.role !== \"admin\") {\r\n            this.props.history.push(\"/\");\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            await this.setState({\r\n                currentUser: auth,\r\n            })\r\n            AuthService.getAllaccounts(this.state.currentUser.email, \"Samantha0320!\").then(response => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    accounts: response.data\r\n                })\r\n            });\r\n            AuthService.getAllstudents(this.state.currentUser.email, \"Samantha0320!\").then(response => {\r\n                this.setState({\r\n                    students: response.data\r\n                })\r\n            });\r\n            AuthService.getAllusers(this.state.currentUser.email, \"Samantha0320!\").then(response => {\r\n                this.setState({\r\n                    Teachers: response.data\r\n                })\r\n            });\r\n           \r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    less() {\r\n        this.setState({\r\n            more: false,\r\n            current: undefined,\r\n            account: false,\r\n\r\n        })\r\n    }\r\n    more(clicked, account) {\r\n        if (account) {\r\n            this.setState({\r\n                account: true,\r\n                more: true,\r\n                current: clicked\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                more: true,\r\n                current: clicked\r\n            })\r\n        }\r\n        \r\n    }\r\n    deleted(id) {\r\n        AuthService.admindelete(id);\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"fill1 centerized\" style={{ zIndex: \"1010\" }}>\r\n                {this.state.more && (<AdminEdit current={this.state.current} account={this.state.account} handleClose={this.less}/> )}\r\n\r\n                {this.state.currentUser ? (<div className=\"fill1 centerized\" >\r\n                    {this.state.currentUser.role === \"admin\" ? (\r\n                        <div className=\"fill1 centerized\" >\r\n\r\n\r\n                            <div className=\"fill1 checkboxstuff centerized z2\">\r\n\r\n                                {this.state.accounts.length !== 0 ? (\r\n\r\n                                    <div className=\"card-container2ab \" style={{ height: \"700px\" }}>\r\n                                        <div className=\"homeworkScroll\" >\r\n                                {\r\n                                    this.state.accounts.map((account, index) => \r\n                                        <div className=\"checkboxstuff7 fill2\" key={index}>\r\n                                            < div className=\"checkboxstuff fill2\"> <p onClick={this.more.bind(this, account, true)} className=\"huv rowss\">{account.email}</p> <p style={{ marginLeft: \"50px\" }} onClick={this.deleted.bind(this, account._id)} className=\"huv rowss\">delete</p></div>\r\n                                        </div>\r\n\r\n                                    \r\n                                    )}\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                ) : (<div>\r\n                                        I got here\r\n                                    </div>)}\r\n\r\n\r\n\r\n                                {this.state.Teachers.length !== 0 ? (\r\n\r\n                                    <div className=\"card-container2ab\" style={{ height: \"700px\" }}>\r\n                                        <div className=\"homeworkScroll\" >\r\n                                        {\r\n                                            this.state.Teachers.map((teacher, index) =>\r\n                                                <div className=\"checkboxstuff7 fill2\" key={index}>\r\n                                                    < div className=\"checkboxstuff fill2\"> <p onClick={this.more.bind(this, teacher, true)} className=\"huv rowss\">{teacher.email}</p> <p style={{marginLeft: \"50px\"}} onClick={this.deleted.bind(this, teacher._id )} className=\"huv rowss\">delete</p></div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                            )}\r\n\r\n                                                    </div>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n                                ) : (<div>\r\n                                        I got here\r\n                                    </div>)}\r\n\r\n\r\n\r\n                                {this.state.students.length !== 0 ? (\r\n\r\n                                    <div className=\"card-container2ab \" style={{ height: \"700px\" }}>\r\n                                        <div className=\"homeworkScroll\" >\r\n                                        {\r\n                                            this.state.students.map((student, index) =>\r\n                                                <div className=\"checkboxstuff7 fill2\" key={index}>\r\n                                                    < div className=\"checkboxstuff fill2\" > <p onClick={this.more.bind(this, student, true)} className=\"huv rowss\">{student.firstName} {student.email}</p> <p style={{ marginLeft: \"50px\" }} onClick={this.deleted.bind(this, student._id)} className=\"huv rowss\">delete</p></div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                            )}\r\n\r\n                                            </div>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n                                ) : (<div className=\"card-container2ab\">\r\n                                    I got here\r\n                                </div>)}\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    ) : (<div></div>)}\r\n\r\n\r\n                </div>) : (<div></div>)}\r\n           \r\n\r\n\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Admin;",["495","496"],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/auth.service.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/about.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/userProfile.js",["497","498","499","500"],"//to do -> fix so that if X is pushed everything goes back to how it was.\r\n//update the token in the browser storage.\r\n// fix all edge cases. \r\n// all text boxes should have the current info as place holders. \r\n\r\nimport React, { Component } from \"react\";\r\nimport background from \"./music.png\";\r\nimport Pic from \"../components/diapicture\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport \"./pages.css\"\r\nimport edit from \"./edit.png\";\r\nimport Editing from \"../components/editing\";\r\nimport EditBack from \"../components/editBackground\";\r\nimport axios from \"axios\";\r\nimport List from \"../components/prostudentList.js\";\r\nimport List1 from \"../components/prostudentList1.js\";\r\nimport moment from 'moment';\r\nimport DeleteStudent from '../components/deletestudent.js';\r\nimport Short from \"../components/short.js\"\r\nimport Amplify, { Storage } from 'aws-amplify';\r\nimport Splashscreen  from \"../components/splashscreen.js\";\r\n\r\n//import { withAuthenticator} from 'aws-amplify-react'\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\nclass userProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.openPic = this.openPic.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleEditClose = this.handleEditClose.bind(this);\r\n\r\n        this.editMe = this.editMe.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.editBackground = this.editBackground.bind(this);\r\n        this.handleBackClose = this.handleBackClose.bind(this);\r\n        this.handleSub = this.handleSub.bind(this);\r\n        this.getCurrentUserinRealTime = this.getCurrentUserinRealTime.bind(this);\r\n        this.deleted = this.deleted.bind(this);\r\n        this.del = this.del.bind(this);\r\n        this.deleteStudent = this.deleteStudent.bind(this);\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n        this.splashscreen = this.splashscreen.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            diaPic: false,\r\n            edit: false, \r\n            picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            newPic: \"\",\r\n            currentUser: AuthService.getCurrentUser(),\r\n            realtimeusr: undefined,\r\n            about: \"this is how you learn\",\r\n            first: \"\",\r\n            last: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            edittheBackground: false,\r\n            background: background,\r\n            currentStudents: [],\r\n            studentList: true,\r\n            Today: [],\r\n            del: false,\r\n            delstudent: undefined,\r\n            file:\"\",\r\n            height: \"750px\",\r\n            tooSmall: false,\r\n            splashscreen:true,\r\n\r\n        }\r\n\r\n    };\r\n    Splashscreen(){\r\n        this.setState({splashscreen:false})\r\n    }\r\n    updateWindowDimensions() {\r\n       \r\n        if(parseInt(window.innerWidth) <= 550)\r\n        this.setState({ tooSmall: true, \r\n            height: \"2000px\"\r\n        });\r\n     }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    }\r\n    \r\n    \r\n    getCurrentUserinRealTime() {\r\n        let id = \"\";\r\n        const API_URL = \"https://legato.flinnapps.com/api/auth/\";\r\n        //const API_URL = \"http://localhost:8080/api/auth/\";\r\n        if (this.state.currentUser.login) {\r\n            id = this.state.currentUser.user._id;\r\n        }\r\n        else {\r\n            id = this.state.currentUser.id;\r\n        }\r\n\r\n        axios.post(API_URL + \"getuser\", {\r\n            id,\r\n\r\n        }).then(response => {\r\n            this.setState({ realtimeusr: response.data.user })\r\n            console.log(response.data);\r\n\r\n\r\n            if (this.state.realtimeusr.profilepic) {\r\n                let usr = this.state.realtimeusr.profilepic\r\n                axios.post(API_URL + \"getprofile\", {\r\n                    id, usr\r\n                }).then(response => {\r\n                    console.log(\"here,\", response);\r\n                    \r\n                })\r\n                //\r\n\r\n                this.setState({ picture: this.state.realtimeusr.profilepic });\r\n            }\r\n            if (this.state.realtimeusr.backgroundpic) {\r\n                const background = this.state.realtimeusr.backgroundpic;\r\n                this.setState({ background: background });\r\n            }\r\n            this.setState({\r\n                about: this.state.realtimeusr.about,\r\n                first: this.state.realtimeusr.firstname,\r\n                last: this.state.realtimeusr.lastname,\r\n                email: this.state.realtimeusr.email,\r\n                phone: this.state.realtimeusr.phone,\r\n            })\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        if(parseInt(window.innerWidth) <= 1000)\r\n        this.setState({ tooSmall: true, \r\n        });\r\n        if(parseInt(window.innerWidth) <= 550)\r\n        this.setState({ tooSmall: true, \r\n            height: \"2000px\"\r\n        });\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n\r\n        if (this.state.currentUser) {\r\n\r\n\r\n            if (this.state.currentUser.role !== \"teacher\") {\r\n                this.props.history.push(\"/\");\r\n                window.location.reload();\r\n            }\r\n            else {\r\n                this.getCurrentUserinRealTime();\r\n                AuthService.getStudents(this.state.currentUser.account._id, this.state.studentList).then(response => {\r\n                    this.setState({\r\n\r\n                        currentStudents: response.data,\r\n                    });\r\n                    let today = [];\r\n                    for (let i = 0; i < this.state.currentStudents.length; i++) {\r\n                        if (this.state.currentStudents[i].day.toString() === moment().format('dddd').toString()) {\r\n\r\n                            let scheduling = this.handleTime(this.state.currentStudents[i].scheduling);\r\n\r\n\r\n                            today.push({\r\n                                student: this.state.currentStudents[i],\r\n                                time: scheduling,\r\n                            }\r\n                            );\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        Today: today,\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.props.history.push(\"/login\");\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    handleTime(apptTime) {\r\n        var ar = \"\";\r\n        let ampm = false;\r\n        for (let i = 0, j = i + 1; i < apptTime.length; i++, j++) {\r\n\r\n            if (i === 0) {\r\n                console.log(i);\r\n\r\n                if (apptTime.length === 4) {\r\n\r\n                    if (apptTime[0] === \"1\") {\r\n\r\n                        if (apptTime[1] === \"0\") {\r\n                            ar = ar + \"10\";\r\n                            ampm = true;\r\n\r\n                        }\r\n                        if (apptTime[1] === \"1\") {\r\n                            ar = ar + \"11\";\r\n                            ampm = true;\r\n                        }\r\n                        if (apptTime[1] === \"2\") {\r\n                            ar = ar + \"12\";\r\n                        }\r\n                        if (apptTime[1] === \"3\") {\r\n                            ar = ar + \"1\";\r\n                        }\r\n                        if (apptTime[1] === \"4\") {\r\n                            ar = ar + \"2\";\r\n                        }\r\n                        if (apptTime[1] === \"5\") {\r\n                            ar = ar + \"3\";\r\n                        }\r\n                        if (apptTime[1] === \"6\") {\r\n                            ar = ar + \"4\";\r\n                        }\r\n                        if (apptTime[1] === \"7\") {\r\n                            ar = ar + \"5\";\r\n\r\n\r\n                        }\r\n                        if (apptTime[1] === \"8\") {\r\n                            ar = ar + \"6\";\r\n                        }\r\n                        if (apptTime[1] === \"9\") {\r\n                            ar = ar + \"7\";\r\n                        }\r\n\r\n                    } else if (apptTime[0] === \"2\") {\r\n                        if (apptTime[1] === \"0\") {\r\n                            ar = ar + \"8\";\r\n                        }\r\n                        if (apptTime[1] === \"1\") {\r\n                            ar = ar + \"9\";\r\n                        }\r\n                        if (apptTime[1] === \"2\") {\r\n                            ar = ar + \"10\";\r\n                        }\r\n                        if (apptTime[1] === \"3\") {\r\n                            ar = ar + \"11\";\r\n                        }\r\n                    }\r\n                    else if (apptTime[0] === \"0\") {\r\n                        if (apptTime[1] === \"0\") {\r\n                            ar = ar + \"12\";\r\n                            ampm = true;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(apptTime);\r\n                    ar = ar + apptTime[i];\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n            else {\r\n                if (apptTime.length === 3) {\r\n                    console.log(i);\r\n                    if (i === 1) {\r\n                        ar = ar + \":\";\r\n\r\n                    }\r\n                    console.log(apptTime);\r\n                    ar = ar + apptTime[i];\r\n\r\n                    if (i === 2) {\r\n                        ar = ar + \" AM\";\r\n                    }\r\n\r\n\r\n                }\r\n                else {\r\n                    if (apptTime[j]) {\r\n                        if (i === 1) {\r\n                            ar = ar + \":\";\r\n                        }\r\n\r\n                        ar = ar + apptTime[j];\r\n                        if (i === 2) {\r\n                            if (ampm) {\r\n                                ar = ar + \" AM\";\r\n                            }\r\n                            else { ar = ar + \" PM\"; }\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n            console.log(ar);\r\n\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    profile(student) {\r\n\r\n        this.props.history.push({\r\n            pathname: \"/student\",\r\n            state: { detail: student }\r\n        });\r\n\r\n    }\r\n\r\n    handleBackClose() {\r\n        this.setState({\r\n            edittheBackground: false\r\n        });\r\n    }\r\n    editBackground() {\r\n        this.setState({\r\n            edittheBackground: true,\r\n        })\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    editMe() {\r\n        this.setState({\r\n            edit: true\r\n        })\r\n    }\r\n\r\n    handleEditClose() {\r\n        this.setState({\r\n            edit: false\r\n        });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            diaPic: false\r\n        });\r\n    };\r\n\r\n    changePic(pic) {\r\n        this.setState({\r\n            diaPic: pic.toString()\r\n        });\r\n    };\r\n\r\n    openPic = (event) => {\r\n        this.setState(\r\n            {\r\n                diaPic: true\r\n            });\r\n\r\n    };\r\n    deleted() {\r\n        AuthService.deleteStudent(this.state.delstudent._id, this.state.delstudent.email);\r\n        this.splashscreen();\r\n    }\r\n    async splashscreen(){\r\n        this.setState({\r\n            splashscreen:!this.state.splashscreen\r\n        })\r\n        \r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(600)\r\n            window.location.reload();\r\n\r\n        \r\n\r\n    }\r\n    async del(student) {\r\n        await this.setState({\r\n            delstudent: student,\r\n            del:true,\r\n        })\r\n    }\r\n\r\n    handleSub(e) {\r\n        e.preventDefault();\r\n        //var data = this.state;\r\n        if (this.state.currentUser.login) {\r\n            AuthService.changeuserinfo(\r\n                this.state.currentUser.user._id,\r\n                this.state.currentUser.account._id,\r\n                this.state.first,\r\n                this.state.last,\r\n                this.state.about,\r\n                this.state.email,\r\n                this.state.phone,\r\n            ).then(response => {\r\n                console.log(response.data.changed.about);\r\n                this.setState({\r\n                    about: response.data.changed.about,\r\n                    first: response.data.changed.firstname,\r\n                    last: response.data.changed.lastname,\r\n                    email: response.data.changed.email,\r\n                    phone: response.data.changed.phone,\r\n                    edit: false\r\n                });\r\n\r\n\r\n            })\r\n        }\r\n        AuthService.changeuserinfo(\r\n            this.state.currentUser.id,\r\n            this.state.currentUser.account._id,\r\n            this.state.first,\r\n            this.state.last,\r\n            this.state.about,\r\n            this.state.email,\r\n            this.state.phone,\r\n        ).then(response => {\r\n            console.log(response.data.changed.about);\r\n            this.setState({\r\n                about: response.data.changed.about,\r\n                first: response.data.changed.firstname,\r\n                last: response.data.changed.lastname,\r\n                email: response.data.changed.email,\r\n                phone: response.data.changed.phone,\r\n                edit: false\r\n            });\r\n\r\n\r\n        })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    deleteStudent() {\r\n        this.setState({\r\n            del:false,\r\n        })\r\n    }\r\n    render()\r\n    {\r\n        const { history } = this.props;\r\n        return (\r\n\r\n            <div className=\"z2 example\">\r\n                {this.state.splashscreen && (<Splashscreen closesplash={this.Splashscreen}/>)}\r\n                <div className=\"fill1\">\r\n                    <div className=\"columbized card-container0\" style={{marginTop: \"22px\"}}>\r\n                        {this.state.diaPic && (<Pic handleClose={this.handleClose} realusr={this.state.realtimeusr} />)}\r\n                        {this.state.del && (<DeleteStudent handleClose={this.deleteStudent} delete={this.deleted} />)}\r\n\r\n\r\n                {this.state.edittheBackground && (<EditBack handleBackClose={this.handleBackClose} realusr={this.state.realtimeusr} />)}\r\n\r\n                    {this.state.edit && (<Editing state ={this.state} handleSub={this.handleSub} handleEditClose={this.handleEditClose} handleChange={this.handleChange} state={this.state.realtimeusr} />)}\r\n\r\n                        <div className=\"front1 centerized\" style={{position:\"relative\"}}>\r\n                \r\n\r\n                \r\n                <div className=\"overlap\">\r\n\r\n                    <img\r\n                                src={this.state.background}\r\n                                alt=\"music\"\r\n                                        className=\"back-screen cropped1\"\r\n                                \r\n                        />\r\n                </div>\r\n\r\n                    \r\n                <div className=\"overlapsaab\" style={{marginTop: \"8%\"}}>\r\n\r\n                    <img\r\n                        src={this.state.picture}\r\n                    alt=\"profile-img\"\r\n                                    className=\"profile-img-cardabc huv cropped1 centerized\"\r\n                                onClick={this.openPic}\r\n                                    />\r\n                                    \r\n                    </div>\r\n                </div>\r\n                        <div className=\"makeitwork0ab\">\r\n                    \r\n                    <div className=\"makeitworkagain\">\r\n                        <h2>{this.state.first} {this.state.last}</h2>\r\n                        \r\n                    </div>\r\n                    <div className=\"makeitworkagain\">\r\n                        {this.state.about}\r\n                        \r\n                    </div>\r\n                    <div>\r\n                        {this.state.email}\r\n                    </div> \r\n                    <div>\r\n                        {this.state.phone}\r\n                            </div>\r\n                            <div onClick={this.editMe} className=\"huv rowss1\">\r\n                                <p className=\"huv rowss3\">Edit Profile</p>\r\n\r\n\r\n                            </div>\r\n                            {this.state.tooSmall?(<div><u>Todays Appointments</u> ({this.state.Today.length})</div>):(<div></div>)}\r\n                    \r\n\r\n                    \r\n\r\n                  \r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n                </div>\r\n                    <div className=\"proStud\" style={{ height: \"650px\" }}>\r\n                        <div className=\"card-container1\">\r\n                            {this.state.tooSmall?(<div style={{width:\"100%\"}}>\r\n\r\n                                {this.state.currentStudents.length > 0 ? (<List1 role={this.state.currentUser.role} students={this.state.currentStudents} history={history} del={this.del} />) : (<div className=\"centerizeList\"> <h4 style={{ borderBottom: \"1px solid gray\", color:\"gray\", height:\"40px\"}} >no current students </h4></div>)}\r\n\r\n                            </div>):(<div style={{width:\"100%\"}}> \r\n\r\n                                {this.state.currentStudents.length > 0 ? (<List role={this.state.currentUser.role} students={this.state.currentStudents} history={history} del={this.del} />) : (<div className=\"centerizeList\"> <h4 style={{ borderBottom: \"1px solid gray\", color:\"gray\", height:\"40px\"}} >no current students </h4></div>)}\r\n\r\n                            </div>)}\r\n                    </div>\r\n                    {!this.state.tooSmall?(\r\n\r\n<div className=\"card-container2\">\r\n<div className=\"flex-box2\">\r\n<div  style={{ width: \"95%\", borderLeft: \"1px solid #e0e0eb\", borderRight:\"1px solid #e0e0eb\", marginTop:\"15px\" }}>\r\n    <div className=\"cal-day-bottom centerized\">\r\n        <h3>Todays Schedule</h3>\r\n    </div>\r\n        <div className=\"container\">\r\n            {\r\n                this.state.Today.map((appointment, index) =>\r\n                    <div onClick={this.profile.bind(this, appointment.student)} className=\"huv rowss centerized\" style={{ margin: \"5px\" }} key={index}>\r\n                        {appointment.student.firstName.length > 9 ? (<div className=\"checkboxstuff1\"> <Short word={appointment.student.firstName} wordtype=\"procal\" /> <p style={{ marginLeft: \"3px\" }}>{appointment.time}</p></div>): (<p>{appointment.student.firstName} {appointment.time}</p>)}\r\n                        \r\n                        </div>\r\n            )} \r\n\r\n    </div>\r\n</div>\r\n</div>\r\n</div>\r\n                    ):(<div></div>)}\r\n                \r\n                </div>\r\n\r\n                </div>\r\n                <div style={{ opacity: \"0\", marginTop:\"100px\"}}>\r\n                    <table style={{ width: \"100%\" }}>\r\n                        <tr>\r\n                            <td style={{ width: \"40%\" }}>\r\n                                <div style={{ flexDirection: \"column\" }}>\r\n                                    <div> <p>Mon: 0 Minutes</p></div>\r\n                                    <div>  <p>Tues: 0 Minute</p></div>\r\n                                    <div> <p>Wed: 0 Minutes</p></div>\r\n                                    <div> <p>Thurs: 0 Minute</p></div>\r\n                                </div>\r\n                            </td>\r\n                            <td style={{ width: \"50%\" }}>\r\n                                <div style={{ flexDirection: \"column\" }}>\r\n                                    <div> <p>Fri: 0 Minutes</p></div>\r\n                                    <div>  <p>Sat: 0 Minutes</p></div>\r\n                                    <div> <p>Sun: 0 Minute</p></div>\r\n                                    <div><p> Total: 0/100 Minutes</p></div>\r\n                                </div>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                  \r\n                </div>\r\n                <div style={{ opacity: \"0\" }}>\r\n                    <table style={{ width: \"100%\" }}>\r\n                        <tr>\r\n                            <td style={{ width: \"40%\" }}>\r\n                                <div style={{ flexDirection: \"column\" }}>\r\n                                    <div> <p>Mon: 0 Minutes</p></div>\r\n                                    <div>  <p>Tues: 0 Minute</p></div>\r\n                                    <div> <p>Wed: 0 Minutes</p></div>\r\n                                    <div> <p>Thurs: 0 Minute</p></div>\r\n                                </div>\r\n                            </td>\r\n                            <td style={{ width: \"50%\" }}>\r\n                                <div style={{ flexDirection: \"column\" }}>\r\n                                    <div> <p>Fri: 0 Minutes</p></div>\r\n                                    <div>  <p>Sat: 0 Minutes</p></div>\r\n                                    <div> <p>Sun: 0 Minute</p></div>\r\n                                    <div><p> Total: 0/100 Minutes</p></div>\r\n                                </div>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                  \r\n                </div>\r\n                <div style={{ opacity: \"0\" }}>\r\n                    <table style={{ width: \"100%\" }}>\r\n                        <tr>\r\n                            <td style={{ width: \"40%\" }}>\r\n                                <div style={{ flexDirection: \"column\" }}>\r\n                                    <div> <p>Mon: 0 Minutes</p></div>\r\n                                    <div>  <p>Tues: 0 Minute</p></div>\r\n                                    <div> <p>Wed: 0 Minutes</p></div>\r\n                                    <div> <p>Thurs: 0 Minute</p></div>\r\n                                </div>\r\n                            </td>\r\n                            <td style={{ width: \"50%\" }}>\r\n                                <div style={{ flexDirection: \"column\" }}>\r\n                                    <div> <p>Fri: 0 Minutes</p></div>\r\n                                    <div>  <p>Sat: 0 Minutes</p></div>\r\n                                    <div> <p>Sun: 0 Minute</p></div>\r\n                                    <div><p> Total: 0/100 Minutes</p></div>\r\n                                </div>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                  \r\n                </div>\r\n                <div style={{ opacity: \"0\" }}>\r\n                    <table style={{ width: \"100%\" }}>\r\n                        <tr>\r\n                            <td style={{ width: \"40%\" }}>\r\n                                <div style={{ flexDirection: \"column\" }}>\r\n                                    <div> <p>Mon: 0 Minutes</p></div>\r\n                                    <div>  <p>Tues: 0 Minute</p></div>\r\n                                    <div> <p>Wed: 0 Minutes</p></div>\r\n                                    <div> <p>Thurs: 0 Minute</p></div>\r\n                                </div>\r\n                            </td>\r\n                            <td style={{ width: \"50%\" }}>\r\n                                <div style={{ flexDirection: \"column\" }}>\r\n                                    <div> <p>Fri: 0 Minutes</p></div>\r\n                                    <div>  <p>Sat: 0 Minutes</p></div>\r\n                                    <div> <p>Sun: 0 Minute</p></div>\r\n                                    <div><p> Total: 0/100 Minutes</p></div>\r\n                                </div>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                  \r\n                </div>\r\n                \r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default userProfile;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/signin.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/metro.js",["501"],"import React, { Component } from \"react\";\r\nimport Button from '../components/button.js';\r\nimport Slider from '../components/slider.js';\r\nimport './pages.css';\r\nimport Metro from \"./metronome.png\"\r\nimport Splashscreen  from \"../components/splashscreen.js\";\r\n\r\n\r\nclass Metronome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bpm: 100,\r\n            playing: false,\r\n            count: 0,\r\n            tooSmall: false,\r\n            marginTop: \"200px\",\r\n            margint: \"\",\r\n            screensize: \"\",\r\n            maxHeight:\"700px\",\r\n            splashscreen:true,\r\n\r\n        }\r\n        this.click1 = new Audio(\"https://daveceddia.com/freebies/react-metronome/click1.wav\");\r\n        this.click2 = new Audio(\"https://daveceddia.com/freebies/react-metronome/click1.wav\");\r\n        this.handleBPM = this.handleBPM.bind(this);\r\n        this.updateInterval = this.updateInterval.bind(this);\r\n        this.startStop = this.startStop.bind(this);\r\n        this.playClick = this.playClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n\r\n        \r\n    }\r\n    Splashscreen(){\r\n        this.setState({splashscreen:false})\r\n    }\r\n    updateWindowDimensions() {\r\n        this.setState({screensize: window.innerWidth})\r\n        if(parseInt(window.innerWidth) <= 800)\r\n        this.setState({ \r\n            tooSmall: true,\r\n            marginTop: \"20px\",\r\n        margint: \"00px\", \r\n        maxHeight:\"400px\",\r\n        margint: \"50px\",\r\n    });\r\n     }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    } \r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n\r\n    updateInterval() {\r\n        const bmpSpeed = 60 * 1000 / this.state.bpm;\r\n        this.timer = setInterval(this.playClick, bmpSpeed);\r\n    }\r\n\r\n    handleBPM(event) {\r\n        const bpm = event.target.value;\r\n        if (this.state.playing) {\r\n            clearInterval(this.timer);\r\n            this.updateInterval();\r\n            this.setState({\r\n                count: 0,\r\n                bpm\r\n            });\r\n        } else {\r\n            this.setState({\r\n                bpm\r\n            });\r\n        };\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n\r\n        \r\n        \r\n\r\n\r\n    }\r\n\r\n    playClick() {\r\n        if (this.state.count === 0) this.click2.play();\r\n        else this.click1.play();\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n\r\n    startStop() {\r\n        if (this.state.playing) {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                playing: false\r\n            });\r\n        } else {\r\n            this.updateInterval();\r\n            this.setState({\r\n                count: 0,\r\n                playing: true\r\n            }, this.playClick)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n            \r\n            <div className=\"z2\">\r\n                {this.state.splashscreen && (<Splashscreen closesplash={this.Splashscreen}/>)}\r\n            <div className=\"columbized\">\r\n\r\n            <div className= \"fill1 centerized\" style={{ marginTop: this.state.marginTop, display:\"flex\", flexDirection:\"column\", padding:\"5px\" }}>\r\n            <img src = {Metro} alt=\"metro\" style={{width: '700px', maxHeight:this.state.maxHeight, position:\"absolute\", }}/>\r\n                <div style={{zIndex: \"1500\", display:\"flex\", flexDirection:\"column\", }}>\r\n                    {this.state.tooSmall?(<h4 className=\"centerize \" style={{marginTop:\"70px\", marginBottom:\"50px\"}}>Metronome</h4>):(<h1 className=\"centerize spacer-bottom\" style={{marginTop: this.state.margint}}>Metronome</h1>)}\r\n                \r\n                        <div><Slider bpm={this.state.bpm} handleChange={this.handleBPM} handleChanges={this.handleChange} tooSmall={this.state.screensize}/>\r\n                        <Button handleClick={this.startStop} currentState={this.state.playing}  />\r\n                        </div></div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Metronome;\r\n\r\n\r\n\r\n","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/students.teacher.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/calendar.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/contact.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/student.js",["502","503","504","505","506"],"//todo -> beautify edit stuff.\r\n//probably going to have to have the backend update the email on the account for the student for login.\r\nimport React, { Component } from \"react\"\r\nimport AuthService from \"../services/auth.service\";\r\nimport background from \"./music.png\";\r\nimport edit from \"./edit.png\";\r\nimport Editing from \"../components/studentEdit.js\";\r\nimport axios from \"axios\";\r\nimport Checkboxnum from \"../components/practice.js\";\r\nimport Homework from \"../components/homeworks\";\r\nimport ShowHomework from \"../components/showHomework\";\r\nimport Goals from \"./goals.js\";\r\nimport save from \"../components/save.png\";\r\nimport trash from \"./Trash1.png\";\r\nimport Archive from \"../components/archive.js\"\r\nimport Notes from \"../components/notes.js\"\r\nimport EditAlltheHomework from \"../components/editAlltheHomework.js\"\r\nimport Splashscreen  from \"../components/splashscreen.js\";\r\n\r\n\r\nimport authService from \"../services/auth.service\";\r\nimport Checkboxnum2 from \"../components/practice2.js\";\r\nimport Short from \"../components/short.js\";\r\n//import AddedStudent from \"./addedStudent.js\";\r\nimport AddedStudent from \"./add1student.js\";\r\nimport AddStudent from \"../components/deletestudent\";\r\nimport leaf from \"./leaf.png\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n//import AllHomeworks from \"../components/homeworkList.js\"\r\n//this is the student page that shows for the teacher. It shows the teacher various information about the student as well as a function to add homework.\r\nexport default class Student extends Component {\r\n    //create state\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.AddHomework = this.AddHomework.bind(this);\r\n        this.handleEditClose = this.handleEditClose.bind(this);\r\n        this.handleSub = this.handleSub.bind(this);\r\n        this.handleHomework = this.handleHomework.bind(this);\r\n        this.handleHomeworkClose = this.handleHomeworkClose.bind(this);\r\n        this.showHomework = this.showHomework.bind(this);\r\n        this.deleteHomework = this.deleteHomework.bind(this);\r\n        this.clearChecks = this.clearChecks.bind(this);\r\n        this.clearTime = this.clearTime.bind(this);\r\n        this.editAlltheHomework = this.editAlltheHomework.bind(this);\r\n        this.editAlltheHomeworkdiaOpen = this.editAlltheHomeworkdiaOpen.bind(this);\r\n        this.editAlltheHomeworkdiaClose = this.editAlltheHomeworkdiaClose.bind(this);\r\n        this.changestyle = this.changestyle.bind(this);\r\n        this.selectDay = this.selectDay.bind(this);\r\n        this.changeTime = this.changeTime.bind(this);\r\n        this.changestyle1 = this.changestyle1.bind(this);\r\n       \r\n        \r\n        this.notes = this.notes.bind(this);\r\n        this.keep = this.keep.bind(this);\r\n        this.handletheclose = this.handletheclose.bind(this);\r\n\r\n        this.changestate = this.changestate.bind(this);\r\n\r\n        this.hideHomeworkClose = this.hideHomeworkClose.bind(this);\r\n\r\n        this.handlehwChange = this.handlehwChange.bind(this);\r\n\r\n        this.editMe = this.editMe.bind(this);\r\n        this.handletime = this.handletime.bind(this);\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            currentUsr: authService.getCurrentUser(),\r\n            homework: \"\",\r\n            homeworks: [],\r\n            homeworked: false,\r\n            edit: false,\r\n            picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            newPic: \"\",\r\n            currentUser: undefined,\r\n            background: background,\r\n            first: \"\",\r\n            last: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            about: \"\",\r\n            time: \"\",\r\n            checkbox: \"\",\r\n            day: \"\",\r\n            realtimestudent: null,\r\n            password: \"\",\r\n            hwtype: \"\",\r\n            hwchecked: \"\",\r\n            hwdescription: \"\",\r\n            hwcheckboxes: \"0\",\r\n            hwdate: \"\",\r\n            hwreasearch: \"\",\r\n            assignment: false,\r\n            research: false,\r\n            hwtop: \"60px\",\r\n            practice: false,\r\n            currentHomework: undefined,\r\n            showHomework: false,\r\n            daily: \"0\",\r\n            totalDays: \"\",\r\n            studentaccount: \"\",\r\n            changetime: \"\",\r\n            studentid: \"\",\r\n            newlyadded: false,\r\n            notes: false,\r\n            hwsynccheck: false,\r\n            hwdmin: \"\",\r\n            HWweeklytimebiao: \"\",\r\n            hwtimesync: false,\r\n            hwlink: \"\",\r\n            struggles: false,\r\n            hwQuestions: true,\r\n            editAlltheHomework: false,\r\n            yesnoCheckboxsync: false,\r\n            yesnoStreak: false,\r\n            yesnocheckboxes: false,\r\n            yesnoWeek: false,\r\n            yesnoWeektext: \"\",\r\n            yesnoDay: false,\r\n            yesnoDaytext: \"\",\r\n            c: false,\r\n            t: false,\r\n            hwdailytimebiao: false,\r\n            hwtimew: false,\r\n            alignself: \"flex-start\",\r\n            width: \"64%\",\r\n            width2: \"50%\",\r\n            tooSmall: false,\r\n            width1: \"22%\",\r\n            height: \"1000px\",\r\n            height1:\"1500px\",\r\n            thousand: false,\r\n            alignself1: \"flex-start\",\r\n            showProfile: false,\r\n            justifyContent1: \"\",\r\n            marginLeftedit:\"400px\",\r\n            splashscreen:false,\r\n\r\n        };\r\n    }\r\n    async Splashscreen(){\r\n        this.setState({\r\n            splashscreen:!this.state.splashscreen\r\n        })\r\n        \r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(650)\r\n            window.location.reload();\r\n\r\n        \r\n\r\n    }\r\n    updateWindowDimensions() {\r\n       \r\n        if(parseInt(window.innerWidth) <= 1200){\r\n        this.setState({ tooSmall: true, \r\n            width1: \"0px\",\r\n            height: \"2500px\",\r\n            height1:\"2000px\",\r\n            marginLeftedit:\"80vw\"\r\n            \r\n        });\r\n    }\r\n        if(parseInt(window.innerWidth) <= 1200){\r\n        this.setState({ tooSmall: true, \r\n            width1: \"0px\",\r\n            height: \"2500px\",\r\n            height1:\"2000px\"\r\n          \r\n            \r\n        });\r\n        if(parseInt(window.innerWidth) >= 800){\r\n            this.setState({ hwtop:\"180px\"\r\n              \r\n                \r\n            });\r\n        }\r\n        \r\n        if(parseInt(window.innerWidth) >= 1000){\r\n            this.setState({ marginLeftedit:\"350px\"\r\n              \r\n                \r\n            });\r\n        }\r\n    \r\n        if(parseInt(window.innerWidth) >= 1200){\r\n            this.setState({ tooSmall: true, \r\n                thousand: true,\r\n                width1: \"0px\",\r\n                height: \"2500px\",\r\n                height1:\"2000px\",\r\n                marginLeftedit:\"400px\"\r\n              \r\n                \r\n            });\r\n        }\r\n    }\r\n        \r\n     }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    }\r\n    \r\n    \r\n    async handletime() {\r\n\r\n    }\r\n    changestyle() {\r\n        if (this.state.alignself === \"flex-start\") {\r\n            this.setState({\r\n                alignself: \"flex-end\",\r\n                width: \"41%\",\r\n                notes: true\r\n            })\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                alignself: \"flex-start\",\r\n                width: \"64%\",\r\n                notes:false\r\n            })\r\n        }\r\n    }\r\n    changestyle1() {\r\n        if (this.state.alignself1 === \"flex-start\") {\r\n            this.setState({\r\n                alignself1: \"flex-end\",\r\n                width2: \"50%\",\r\n                width1: \"100%\",\r\n                showProfile: true,\r\n                height: \"1000px\",\r\n                justifyContent1: \"center\"\r\n            })\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                alignself1: \"flex-start\",\r\n                width2: \"50%\",\r\n                showProfile:false,\r\n                width1: \"0px\",\r\n                height: \"2500px\",\r\n                justifyContent1: \"\"\r\n            })\r\n        }\r\n    }\r\n    selectDay(day) {\r\n        this.setState({\r\n            day: day\r\n        })\r\n    }\r\n    changeTime(time) {\r\n        this.setState({\r\n            changetime: time\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n\r\n\r\n        if (this.state.currentUsr) {\r\n\r\n\r\n            if (this.state.currentUsr.role !== \"teacher\") {\r\n                this.props.history.push(\"/\");\r\n                window.location.reload();\r\n            }\r\n            else {\r\n                if (this.props.location.state) {\r\n                    \r\n                    //this.setState({\r\n                    //  currentUser: this.props.location.state.detail,\r\n                    //password: this.props.location.state.detail.password,\r\n                    //studentid: \"\",\r\n\r\n                    //                    })\r\n                                       const API_URL = \"https://legato.flinnapps.com/api/auth/\";\r\n\r\n                    //const API_URL = \"http://localhost:8080/api/auth/\";\r\n                    const id = this.props.location.state.detail._id;\r\n                    axios.post(API_URL + \"getstudent\", {\r\n\r\n                        id,\r\n                    }).then(response => {\r\n                        this.setState({ realtimestudent: response.data.student });\r\n                        console.log(response.data);\r\n                        console.log(this.state.realtimestudent);\r\n\r\n                        if (this.state.realtimestudent.profilepic) {\r\n                            const porfilePic = this.state.realtimestudent.profilepic;\r\n                            this.setState({ picture: porfilePic });\r\n                        }\r\n                        if (this.state.realtimestudent.backgroundpic) {\r\n                            const background =  this.state.realtimestudent.backgroundpic;\r\n                            this.setState({ background: background });\r\n                        }\r\n                        var ar = \"\";\r\n                        let ampm = false;\r\n                        for (let i = 0, j = i + 1; i < this.state.realtimestudent.scheduling.length; i++, j++) {\r\n\r\n                            if (i === 0) {\r\n\r\n\r\n                                if (this.state.realtimestudent.scheduling.length === 4) {\r\n\r\n                                    if (this.state.realtimestudent.scheduling[0] === \"1\") {\r\n                                        console.log(this.state.realtimestudent.scheduling[0]);\r\n                                        console.log(this.state.realtimestudent.scheduling[1]);\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"0\") {\r\n                                            ar = ar + \"10\";\r\n                                            ampm = true;\r\n\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"1\") {\r\n                                            ar = ar + \"11\";\r\n                                            ampm = true;\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"2\") {\r\n                                            ar = ar + \"12\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"3\") {\r\n                                            ar = ar + \"1\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"4\") {\r\n                                            ar = ar + \"2\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"5\") {\r\n                                            ar = ar + \"3\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"6\") {\r\n                                            ar = ar + \"4\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"7\") {\r\n                                            ar = ar + \"5\";\r\n\r\n                                            console.log(ar);\r\n\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"8\") {\r\n                                            ar = ar + \"6\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"9\") {\r\n                                            ar = ar + \"7\";\r\n                                        }\r\n\r\n                                    } else if (this.state.realtimestudent.scheduling[0] === \"2\") {\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"0\") {\r\n                                            ar = ar + \"8\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"1\") {\r\n                                            ar = ar + \"9\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"2\") {\r\n                                            ar = ar + \"10\";\r\n                                        }\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"3\") {\r\n                                            ar = ar + \"11\";\r\n                                        }\r\n                                    }\r\n                                    else if (this.state.realtimestudent.scheduling[0] === \"0\") {\r\n                                        if (this.state.realtimestudent.scheduling[1] === \"0\") {\r\n                                            ar = ar + \"12\";\r\n                                            ampm = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    ar = ar + this.state.realtimestudent.scheduling[i];\r\n\r\n                                }\r\n                            }\r\n\r\n\r\n\r\n                            else {\r\n                                if (this.state.realtimestudent.scheduling.length === 3) {\r\n                                    if (i === 1) {\r\n                                        ar = ar + \":\";\r\n\r\n                                    }\r\n                                    ar = ar + this.state.realtimestudent.scheduling[i];\r\n\r\n                                    if (i === 2) {\r\n                                        ar = ar + \" AM\";\r\n                                    }\r\n\r\n\r\n                                }\r\n                                else {\r\n                                    if (this.state.realtimestudent.scheduling[j]) {\r\n                                        if (i === 1) {\r\n                                            ar = ar + \":\";\r\n                                        }\r\n                                        ar = ar + this.state.realtimestudent.scheduling[j];\r\n                                        if (i === 2) {\r\n                                            if (ampm) {\r\n                                                ar = ar + \" AM\";\r\n                                            }\r\n                                            else { ar = ar + \" PM\"; }\r\n\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n\r\n\r\n                            }\r\n\r\n\r\n                        }\r\n\r\n                        let totaldays = this.state.realtimestudent.totalDays;\r\n                        if (this.state.realtimestudent.totalDays === undefined) {\r\n                            totaldays = 0;\r\n                        }\r\n                        if (this.state.realtimestudent.syncedCheckbox) {\r\n                            this.setState({\r\n                                c: true,\r\n                            })\r\n                        }\r\n                        if (this.state.realtimestudent.checkboxes !==\"0\") {\r\n                            this.setState({\r\n                                c: true,\r\n                            })\r\n\r\n                        }\r\n                        if (this.state.realtimestudent.edityesnoWeek) {\r\n                            this.setState({\r\n                                t: true,\r\n                            })\r\n                        }\r\n                        if (this.state.realtimestudent.timeday) {\r\n                            this.setState({\r\n                                t: true,\r\n                            })\r\n                        }\r\n                        this.setState({\r\n                            first: this.state.realtimestudent.firstName,\r\n                            studentid: this.state.realtimestudent._id,\r\n                            last: this.state.realtimestudent.lastName,\r\n                            email: this.state.realtimestudent.email,\r\n                            phone: this.state.realtimestudent.phone,\r\n                            time: ar,\r\n                            checkbox: this.state.realtimestudent.checkbox,\r\n                            day: this.state.realtimestudent.day,\r\n                            about: this.state.realtimestudent.about,\r\n                            homework: this.state.realtimestudent.homework,\r\n                            homeworks: this.state.realtimestudent.homeworks,\r\n                            totalDays: totaldays,\r\n                            newlyadded: this.state.realtimestudent.newlyadded,\r\n                            yesnoCheckboxsync: this.state.realtimestudent.syncedCheckbox,\r\n                            yesnoStreak: this.state.realtimestudent.dayStreak,\r\n                            yesnocheckboxes: this.state.realtimestudent.checkboxes,\r\n                            yesnoWeek: this.state.realtimestudent.time,\r\n                            yesnoWeektext: this.state.realtimestudent.min,\r\n                            yesnoDay: this.state.realtimestudent.timeday,\r\n                            yesnoDaytext: this.state.realtimestudent.dmin,\r\n                        });\r\n                        if (this.props.location.state.detail.password.length > 40) {\r\n                            this.setState({\r\n                                password: \"******\",\r\n                            })\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                password: this.state.realtimestudent.password,\r\n                            })\r\n                        }\r\n                        \r\n                    });\r\n                }\r\n                else {\r\n                    this.props.history.push(\"/profile\");\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.props.history.push(\"/login\");\r\n            window.location.reload();\r\n        }\r\n\r\n    }\r\n    deleteHomework(homework) {\r\n        AuthService.deleteHomework(this.state.realtimestudent._id, homework);\r\n        this.Splashscreen();\r\n        //window.location.reload();\r\n    }\r\n    clearTime() {\r\n\r\n        AuthService.clearTime(this.state.realtimestudent._id);\r\n        this.Splashscreen();\r\n        //window.location.reload();\r\n    }\r\n    clearChecks() {\r\n        let homework = false;\r\n        if (this.state.realtimestudent.syncedCheckbox) {\r\n            homework = true;\r\n            AuthService.clearChecks(this.state.realtimestudent._id, homework);\r\n\r\n        }\r\n        else {\r\n            AuthService.clearChecks(this.state.realtimestudent._id, homework);\r\n\r\n        }\r\n        this.Splashscreen();\r\n       // window.location.reload();\r\n\r\n    }\r\n\r\n    handleSub(e) {\r\n        e.preventDefault();\r\n        let id = false;\r\n        let about = false;\r\n        let time = \"\";\r\n        if (this.state.changetime) {\r\n            time = this.state.changetime;\r\n        }\r\n        else {\r\n            time = this.state.realtimestudent.scheduling;\r\n        }\r\n\r\n\r\n\r\n        AuthService.changeStudentinfo(\r\n            this.props.location.state.detail._id,\r\n            id,\r\n            this.state.first,\r\n            this.state.last,\r\n            this.state.realtimestudent.about,\r\n            this.state.email,\r\n            this.state.phone,\r\n            time,\r\n            this.state.checkbox,\r\n            this.state.day\r\n\r\n        )\r\n\r\n\r\n\r\n        //window.location.reload();\r\n        this.setState({edit:false})\r\n        this.Splashscreen();\r\n\r\n\r\n    }\r\n    //change whatever is needed in the state\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        if(name===\"yesnoDaytext\"){\r\n            if(value!==\"\"){\r\n                if(value ===\"0\"){\r\n                    this.setState({\r\n                        yesnoDay: false\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        yesnoDay: true\r\n                    })\r\n                }\r\n                \r\n            }\r\n            else{\r\n                this.setState({\r\n                    yesnoDay: false\r\n                })\r\n            }\r\n\r\n        }\r\n        if(name===\"yesnoWeektext\"){\r\n            if(value!==\"\"){\r\n                if(value ===\"0\"){\r\n                    this.setState({\r\n                        yesnoWeek: false\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        yesnoWeek: true\r\n                    })\r\n                }\r\n            }\r\n            else{\r\n                this.setState({\r\n                    yesnoWeek: false\r\n                })\r\n            }\r\n        }\r\n    \r\n\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n\r\n        if (value === \"true\") {\r\n            this.setState({\r\n                [name]: true,\r\n            })\r\n        }\r\n        else if (value === \"false\") {\r\n            this.setState({\r\n                [name]: false,\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handlehwChange = (event) => {\r\n        \r\n        const { name, value } = event.target\r\n        if(name===\"hwdmin\"){\r\n            if(value !== \"\"){\r\n                this.setState({\r\n                    hwdailytimebiao: true,\r\n                    hwtimesync: true,\r\n                })\r\n            }\r\n\r\n        }\r\n        if(name===\"HWweeklytimebiao\"){\r\n            if(value !== \"\"){\r\n                this.setState({\r\n                    hwtimew: true,\r\n                })\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n        if (value === \"true\") {\r\n            this.setState({\r\n                [name]: true,\r\n            })\r\n        }\r\n        else if (value===\"false\") {\r\n            this.setState({\r\n                [name]: false,\r\n            })\r\n        }\r\n        if (value === \"assignment\") {\r\n            this.setState({\r\n                assignment: true,\r\n                research: false,\r\n                practice: false,\r\n            })\r\n        }\r\n        if (value === \"research\") {\r\n            this.setState({\r\n                assignment: false,\r\n                research: true,\r\n                practice: false,\r\n            })\r\n        }\r\n        if (value === \"practice\") {\r\n            this.setState({\r\n                assignment: false,\r\n                research: false,\r\n                practice: true,\r\n            })\r\n        }\r\n\r\n    }\r\n    editMe() {\r\n        this.setState({\r\n            edit: true\r\n        })\r\n    }\r\n\r\n    handleEditClose() {\r\n        this.setState({\r\n            edit: false\r\n        });\r\n    };\r\n    keep() {\r\n        this.setState({\r\n            notes: true,\r\n        })\r\n    }\r\n    notes(note) {\r\n        if (note) {\r\n            this.setState({\r\n                notes: true,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                notes: false,\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    hideHomeworkClose() {\r\n        this.setState({\r\n            showHomework: false\r\n        });\r\n        \r\n        window.location.reload();\r\n    };\r\n    handleHomeworkClose() {\r\n        this.setState({\r\n            homeworked: false,\r\n            practice: false,\r\n            assignment: false,\r\n            research: false,\r\n            \r\n        });\r\n    };\r\n    //Uses controller to change the homework of the student.\r\n    AddHomework(e) {\r\n        this.setState({\r\n            homeworked: true\r\n        });\r\n\r\n    }\r\n    async handleHomework(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            homeworked: false\r\n        });\r\n\r\n\r\n        if (this.state.hwtype === \"\") {\r\n\r\n            await this.setState({\r\n                hwtype: \"assignment\"\r\n            })\r\n        }\r\n\r\n        AuthService.AddHomework(this.props.location.state.detail._id,\r\n            this.state.homework,\r\n            this.state.hwtype,\r\n            this.state.hwchecked,\r\n            this.state.hwdescription,\r\n            this.state.hwcheckboxes,\r\n            this.state.hwdate,\r\n            this.state.hwreasearch,\r\n            this.state.daily,\r\n            this.state.hwsynccheck,\r\n            this.state.hwdmin,\r\n            this.state.HWweeklytimebiao,\r\n            this.state.hwtimesync,\r\n            this.state.hwlink,\r\n            this.state.struggles,\r\n            this.state.hwQuestions,\r\n            this.state.hwdailytimebiao,\r\n            this.state.hwtimew,\r\n           \r\n            true,\r\n\r\n\r\n        );\r\n\r\n\r\n\r\n        //window.location.reload();\r\n        this.Splashscreen()\r\n    }\r\n    showHomework(homework) {\r\n        this.setState({\r\n            showHomework: true,\r\n            currentHomework: homework,\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    handletheclose(id, title, description, type, day, checkboxes, date, research, HWweeklytimebiao, hwsynccheck, week, daygoal, hwstruggles, hwQuestions, hwdmin, hwlink, syncedCheckboxes, checked, hwtime) {\r\n\r\n        let newHW = {\r\n\r\n            title: title,\r\n            hwcheckboxes: checkboxes,\r\n            hwtype: type,\r\n            description: description,\r\n            date: date,\r\n            daily: day,\r\n            _id: this.state.currentHomework._id,\r\n            research: research,\r\n            HWweeklytimebiao: HWweeklytimebiao,\r\n            hwsynccheck: hwsynccheck,\r\n            week: week,\r\n            daygoal: daygoal,\r\n            hwstruggles: hwstruggles,\r\n            hwQuestions: hwQuestions,\r\n            hwdmin: hwdmin,\r\n            hwlink: hwlink,\r\n            syncedCheckboxes: syncedCheckboxes,\r\n            checked: checked,\r\n            hwtime: hwtime,\r\n        }\r\n        console.log(newHW);\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.homeworks.length; i++) {\r\n            if (this.state.homeworks[i]._id === newHW._id) {\r\n\r\n                ar.push(newHW);\r\n            }\r\n            else {\r\n                ar.push(this.state.homeworks[i]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        AuthService.AddHomeworks\r\n            (\r\n                this.props.location.state.detail._id,\r\n                ar\r\n            );\r\n\r\n        //window.location.reload();\r\n        this.Splashscreen();\r\n        \r\n\r\n    }\r\n\r\n    changestate() {\r\n\r\n    }\r\n    editAlltheHomework() {\r\n        console.log(this.state.yesnocheckboxes);\r\n\r\n        AuthService.editAlltheHomeworkdiaClose(this.props.location.state.detail._id, this.state.yesnoCheckboxsync, this.state.yesnoStreak, this.state.yesnocheckboxes, this.state.yesnoWeek, this.state.yesnoWeektext, this.state.yesnoDay, this.state.yesnoDaytext).then(response =>\r\n        {\r\n            console.log(response)\r\n            this.setState({\r\n                editAlltheHomework: false,\r\n            })\r\n           //window.location.reload();\r\n           \r\n        })\r\n        this.Splashscreen();\r\n\r\n       \r\n    }\r\n    editAlltheHomeworkdiaOpen() {\r\n        this.setState({\r\n            editAlltheHomework: true,\r\n        })\r\n    }\r\n    editAlltheHomeworkdiaClose() {\r\n        this.setState({\r\n            editAlltheHomework: false,\r\n        })\r\n    }\r\n    //style={{ height: \"1000px\" }}\r\n    render() {\r\n        return (\r\n            <div className=\"z2 fill1 example\" >\r\n                {this.state.realtimestudent ? (\r\n                    <div className=\"fill1 \" style={{height:\"1100px\"}}>\r\n                        {this.state.splashscreen && (<Splashscreen closesplash={this.Splashscreen}/>)}\r\n                        {this.state.edit && (<Editing handleSub={this.handleSub} handleEditClose={this.handleEditClose} handleChange={this.handleChange} student={this.props.location.state.detail.firstName}  selectDay={this.selectDay} changeTime={ this.changeTime } state={this.state} />)}\r\n                        {this.state.homeworked && (<Homework handleHomework={this.handleHomework} handleChange={this.handlehwChange} handleClose={this.handleHomeworkClose} practice={this.state.practice} research={this.state.research} assignment={this.state.assignment} />)}\r\n                        {this.state.editAlltheHomework && (<EditAlltheHomework editAlltheHomework={this.editAlltheHomework} handleChange={this.handleChange} handleClose={this.editAlltheHomeworkdiaClose} yesnoCheckboxsync={this.state.realtimestudent.syncedCheckbox}\r\n                            yesnoStreak={ this.state.realtimestudent.dayStreak}\r\n                            yesnocheckboxes={this.state.realtimestudent.checkboxes}\r\n                            yesnoWeek={this.state.realtimestudent.time}\r\n                            yesnoWeektext={this.state.realtimestudent.min}\r\n                            yesnoDay={this.state.realtimestudent.timeday}\r\n                            yesnoDaytext={this.state.realtimestudent.dmin} />)}\r\n\r\n                        {this.state.showHomework && (<ShowHomework homework={this.state.currentHomework} hideHomework={this.hideHomeworkClose} role=\"teacher\" handletheclose={this.handletheclose} id={this.state.currentHomework._id} homeworks={this.state.homeworks} student={this.props.location.state.detail._id }/>)}\r\n                        {\r\n                            this.state.realtimestudent.newlyadded ? (<div className=\"fill1\"> <AddedStudent state={this.state} changestate={this.changestate} history={this.props.history}/></div>) :\r\n                                (\r\n                                    <div className=\"fill1 checkboxstuff1 \">\r\n                                        <div style={{ height: this.state.height, width: this.state.width1,   }} >\r\n                                            \r\n                                            {this.state.tooSmall?(<div style={{width:\"100vw\",}}><div style={{width:\"100%\", }}>\r\n                    <div style={{ width: \"250px\", height: \"35px\", border: \"2px solid gray\", display: \"flex\", flexDirection: \"row\", justifyContent: this.state.alignself1, margin:\"0 auto\" }} class=\"progress-bar2 huv\" onClick={this.changestyle1}>\r\n                        <div style={{ width: \"250px\", height: \"35px\", zIndex: \"50\", position: \"absolute\", background: \"none\", display: \"flex\", color: \"#F0F2EF\", flexDirection:\"row\", justifyContent:\"space-around\", marginTop:\"3px\"}}><p>{this.state.alignself1===\"flex-start\"?(<span>Stats &#62;&#62;&#62;</span>):(<span>Stats</span>)}</p><p>{this.state.alignself1===\"flex-start\"?(<span>Profile </span>):(<span>&#60;&#60;&#60;Profile</span>)}</p></div>\r\n       \r\n                        <div style={{ width: this.state.width2, height: \"37px\", border: \"3px solid gray\", alignSelf: \"center\", zIndex: \"2\" }} ></div>\r\n                    </div>\r\n                </div></div>):(\r\n\r\n<div className=\"card-container4\" style={{ height: \"1250px\", width: \"22%\", position: \"fixed\", }}>\r\n\r\n                                                \r\n\r\n<div>\r\n    <div className=\"front\">\r\n    <div className=\"makeitwork2\">\r\n        <img\r\n            src={edit}\r\n            alt=\"edit\"\r\n            className=\"edit2 huv\"\r\n            onClick={this.editMe}\r\n\r\n        />\r\n    </div>\r\n\r\n\r\n\r\n       \r\n\r\n\r\n        <div className=\"overlaps1a\" >\r\n\r\n            <img\r\n                src={this.state.picture}\r\n                alt=\"profile-img\"\r\n                className=\"profile-img-cardabc cropped1\"\r\n                style={{marginLeft:\"5vw\"}}\r\n\r\n            />\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div className=\"makeitwork1a\">\r\n    \r\n    <div style={{ marginBottom: \"15px\", alignSelf:\"flex-start\", margin:\"0 auto\" }}>\r\n\r\n        <div className=\"\">\r\n            <h2>{this.state.first} {this.state.last}</h2>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div className=\"makeitwork3\" style={{ display:\"flex\", flexDirection:\"column\", justifyContent:\"center\" }}>\r\n        <div >\r\n            <div style={{ alignSelf:\"center\", color: \"gray\",  margin:\"0 auto\", marginBottom: \"5px\" }}>Student Info:</div>\r\n        </div>\r\n        <div>\r\n            <u style={{ margin:\"0 auto\", color: \"blue\", alignSelf:\"center\" }}>{this.state.email}</u>\r\n        </div>\r\n        <div>\r\n            {this.state.phone}\r\n        </div>\r\n        <div>\r\n            <div style={{ margin:\"0 auto\", color: \"gray\", alignSelf:\"center\" }}></div>\r\n        </div>\r\n        <div>\r\n\r\n            {this.state.about}\r\n        </div>\r\n        <div>\r\n        Scheduled Time: {this.state.time} {this.state.realtimestudent.day}\r\n        </div>\r\n\r\n        \r\n        {this.state.password===\"******\"?(\r\n            <div>\r\n        </div>\r\n        ):(\r\n            <div>\r\n            Student Password: {this.state.password}\r\n        </div>\r\n        )}\r\n\r\n    </div>\r\n    <div className=\"makeitwork4\" style={{ marginTop: \"40px\" }}>\r\n        {this.state.realtimestudent ? (\r\n\r\n            <div >\r\n                <div>\r\n                    <div style={{ width: \"250px\", height: \"35px\", border: \"2px solid gray\", display: \"flex\", flexDirection: \"row\", justifyContent: this.state.alignself }} class=\"progress-bar2 huv\" onClick={this.changestyle}>\r\n                        <div style={{ width: \"250px\", height: \"35px\", zIndex: \"50\", position: \"absolute\", background: \"none\", display: \"flex\", color: \"#F0F2EF\", flexDirection:\"row\", justifyContent:\"space-around\", marginTop:\"3px\"}}>\r\n                            <p>{this.state.alignself===\"flex-start\"?(<span>Achievements&#62;&#62;&#62;</span>):(<span>Achievements</span>)}</p><p>{this.state.alignself===\"flex-start\"?(<span>Notes </span>):(<span>&#60;&#60;&#60;Notes</span>)}</p>\r\n                            </div>\r\n       \r\n                        <div style={{ width: this.state.width, height: \"37px\", border: \"3px solid gray\", alignSelf: \"center\", zIndex: \"2\" }} ></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.notes ? (\r\n                    <Notes notes={this.state.realtimestudent.notes} changenotes={this.notes} student={this.props.location.state.detail._id} keep={ this.keep}/>\r\n                    ) : (\r\n                        <Archive archived={this.state.realtimestudent.archive} changenotes={this.notes} Splashscreen={this.Splashscreen}/>\r\n                    )}\r\n\r\n            </div>\r\n\r\n\r\n        ) : (<div></div>)}\r\n    </div>\r\n</div>\r\n</div>\r\n                                            )}\r\n                                            \r\n                                            {this.state.showProfile?(<div style={{width:\"100vw\",   position:\"absolute\", zIndex:\"4000\", }}><div className=\"card-container4\" style={{ height: \"1250px\", margin: \"0 auto\" }}>\r\n\r\n                                                \r\n\r\n<div>\r\n    <div className=\"front\">\r\n\r\n\r\n\r\n       \r\n\r\n\r\n        <div className=\"overlaps1a\" >\r\n\r\n            <img\r\n                src={this.state.picture}\r\n                alt=\"profile-img\"\r\n                className=\"profile-img-cardabc cropped1\"\r\n\r\n            />\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div className=\"makeitwork1a\">\r\n    <div className=\"makeitwork2\">\r\n        <img\r\n            src={edit}\r\n            alt=\"edit\"\r\n            className=\"edit2 huv\"\r\n            onClick={this.editMe}\r\n\r\n        />\r\n    </div>\r\n    <div style={{ marginBottom: \"15px\", alignSelf:\"flex-start\", marginLeft:\"75px\" }}>\r\n\r\n        <div className=\"\">\r\n            <h2>{this.state.first} {this.state.last}</h2>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div className=\"makeitwork3\">\r\n        <div >\r\n            <div style={{ float: \"left\", color: \"gray\", marginBottom: \"5px\" }}>Contact Info:</div>\r\n        </div>\r\n        <div>\r\n            <u style={{ color: \"blue\" }}>{this.state.email}</u>\r\n        </div>\r\n        <div>\r\n            {this.state.phone}\r\n        </div>\r\n        <div>\r\n            <div style={{ float: \"left\", color: \"gray\", marginBottom: \"5px\", marginTop: \"15px\" }}>More Info:</div>\r\n        </div>\r\n        <div>\r\n\r\n            {this.state.about}\r\n        </div>\r\n        <div>\r\n            appointment time: {this.state.time}\r\n        </div>\r\n\r\n        {this.state.password===\"******\"?(\r\n            <div>\r\n        </div>\r\n        ):(\r\n            <div>\r\n            Student Password: {this.state.password}\r\n        </div>\r\n        )}\r\n        \r\n\r\n    </div>\r\n    <div className=\"makeitwork4\" style={{ marginTop: \"40px\" }}>\r\n        {this.state.realtimestudent ? (\r\n\r\n            <div >\r\n                <div className=\"noted\">\r\n                    <div style={{ width: \"250px\", height: \"35px\", border: \"2px solid gray\", display: \"flex\", flexDirection: \"row\", justifyContent: this.state.alignself }} class=\"progress-bar2 huv\" onClick={this.changestyle}>\r\n                        <div style={{ width: \"250px\", height: \"35px\", zIndex: \"50\", position: \"absolute\", background: \"none\", display: \"flex\", color: \"#F0F2EF\", flexDirection:\"row\", justifyContent:\"space-around\", marginTop:\"3px\"}}>\r\n                        <p>{this.state.alignself===\"flex-start\"?(<span>Achievements&#62;&#62;&#62;</span>):(<span>Achievements</span>)}</p><p>{this.state.alignself===\"flex-start\"?(<span>Notes </span>):(<span>&#60;&#60;&#60;Notes</span>)}</p></div>\r\n       \r\n                        <div style={{ width: this.state.width, height: \"37px\", border: \"3px solid gray\", alignSelf: \"center\", zIndex: \"2\" }} ></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.notes ? (\r\n                    <Notes notes={this.state.realtimestudent.notes} changenotes={this.notes} student={this.props.location.state.detail._id} keep={ this.keep}/>\r\n                    ) : (\r\n                        <Archive archived={this.state.realtimestudent.archive} changenotes={this.notes}/>\r\n                    )}\r\n\r\n            </div>\r\n\r\n\r\n        ) : (<div></div>)}\r\n    </div>\r\n</div>\r\n</div></div>):(<div></div>)}\r\n                                            \r\n                                            <p style={{opacity:\"0\"}}>This is the footer to it all I need to make it invisable</p>\r\n                                        </div>\r\n                                        {this.state.showProfile?(<div></div>):(\r\n\r\n                                        <div className=\"forthegoals \" style={{height:this.state.height1}}>\r\n                                            {this.state.tooSmall?(<div className=\"fill2\" style={{marginTop:\"20px\", }}>\r\n                                                <div className=\" columbized card-container4ab5tooSmall\" >\r\n                                                {this.state.realtimestudent ?\r\n                                                    (<div className=\"fill1\">\r\n                                                        {this.state.realtimestudent ? (<Goals totalDaysPracticed={this.state.realtimestudent.totalDaysPracticed} main={this.state.realtimestudent.mainGoals} goals={this.state.realtimestudent.goals} student={this.props.location.state.detail._id} daysPracticed={this.state.realtimestudent.daysPracticed} \r\n                                                        totalDays={this.state.realtimestudent.totalDays} totalTime={this.state.realtimestudent.wmin} timePracticed={this.state.realtimestudent.timeTotal} starpoints={this.state.realtimestudent.starpoints} \r\n                                                        spGoal= {this.state.realtimestudent.starpointsGoal} level={this.state.realtimestudent.level} daystreak={this.state.realtimestudent.daystreak} timebool={this.state.realtimestudent.timebool}\r\n                                                        iwantgoals={true} daysbool={this.state.realtimestudent.daysbool} thousand={this.state.thousand} finalTotalTime={this.state.realtimestudent.finalTotalTime} starPoints={this.state.realtimestudent.starPoints} tooSmall={this.state.tooSmall} \r\n                                                        splashscreen={this.Splashscreen} MainGoals={this.state.realtimestudent.mainGoals}/>\r\n                                                        ) : (<div> </div>\r\n                                                            )}\r\n                                                        {this.state.realtimestudent.goals[100] ? (<Goals goals={this.state.realtimestudent.goals} student={this.props.location.state.detail._id} />\r\n                                                        ) : (<div> </div>\r\n                                                            )}</div>\r\n                                                    ) : (<div></div>)}\r\n\r\n                                            </div>\r\n                                            <div className=\" columbized card-container4ab5tooSmall\" style={{marginTop:\"60px\"}}>\r\n                                                {this.state.realtimestudent ?\r\n                                                    (<div className=\"fill1\">\r\n                                                        {this.state.realtimestudent ? (<Goals totalDaysPracticed={this.state.realtimestudent.totalDaysPracticed} main={this.state.realtimestudent.mainGoals} goals={this.state.realtimestudent.goals} student={this.props.location.state.detail._id} daysPracticed={this.state.realtimestudent.daysPracticed} \r\n                                                        totalDays={this.state.realtimestudent.totalDays} totalTime={this.state.realtimestudent.wmin} timePracticed={this.state.realtimestudent.timeTotal} starpoints={this.state.realtimestudent.starpoints} \r\n                                                        spGoal= {this.state.realtimestudent.starpointsGoal} level={this.state.realtimestudent.level} daystreak={this.state.realtimestudent.daystreak} timebool={this.state.realtimestudent.timebool}\r\n                                                        iwantgoals={false} daysbool={this.state.realtimestudent.daysbool} thousand={this.state.thousand} finalTotalTime={this.state.realtimestudent.finalTotalTime} starPoints={this.state.realtimestudent.starPoints} tooSmall={this.state.tooSmall} \r\n                                                        splashscreen={this.Splashscreen} MainGoals={this.state.realtimestudent.mainGoals}/>\r\n                                                        ) : (<div> </div>\r\n                                                            )}\r\n                                                        {this.state.realtimestudent.goals[100] ? (<Goals goals={this.state.realtimestudent.goals} student={this.props.location.state.detail._id} />\r\n                                                        ) : (<div> </div>\r\n                                                            )}</div>\r\n                                                    ) : (<div></div>)}\r\n\r\n                                            </div>\r\n\r\n\r\n                                            </div>\r\n\r\n\r\n                                            ):(\r\n\r\n                                                <div className=\" columbized card-container4ab5\">\r\n                                                {this.state.realtimestudent ?\r\n                                                    (<div className=\"fill1\">\r\n                                                        {this.state.realtimestudent ? (<Goals totalDaysPracticed={this.state.realtimestudent.totalDaysPracticed} main={this.state.realtimestudent.mainGoals} goals={this.state.realtimestudent.goals} student={this.props.location.state.detail._id} daysPracticed={this.state.realtimestudent.daysPracticed} \r\n                                                        totalDays={this.state.realtimestudent.totalDays} totalTime={this.state.realtimestudent.wmin} timePracticed={this.state.realtimestudent.timeTotal} starpoints={this.state.realtimestudent.starpoints} \r\n                                                        spGoal= {this.state.realtimestudent.starpointsGoal} level={this.state.realtimestudent.level} daystreak={this.state.realtimestudent.daystreak} timebool={this.state.realtimestudent.timebool}\r\n                                                        daysbool={this.state.realtimestudent.daysbool} thousand={this.state.thousand} finalTotalTime={this.state.realtimestudent.finalTotalTime} starPoints={this.state.realtimestudent.starPoints} tooSmall={this.state.tooSmall} \r\n                                                        splashscreen={this.Splashscreen} MainGoals={this.state.realtimestudent.mainGoals}/>\r\n                                                        ) : (<div> </div>\r\n                                                            )}\r\n                                                        {this.state.realtimestudent.goals[100] ? (<Goals goals={this.state.realtimestudent.goals} student={this.props.location.state.detail._id} />\r\n                                                        ) : (<div> </div>\r\n                                                            )}</div>\r\n                                                    ) : (<div></div>)}\r\n\r\n                                            </div>\r\n                                            )}\r\n                                            \r\n                                            \r\n\r\n                                            <div className=\"card-container6abc\" style={{ marginTop: this.state.hwtop }}>\r\n                                                <div className=\"fill1\" >\r\n                                                    <div className=\"fill2 checkboxstuff1a\" style={{ marginBottom: \"10px\" }}>\r\n                                                        <div className=\"centerized\"><h2>Homework</h2>\r\n                                                        </div>\r\n                                                       \r\n                                                    </div>\r\n                                                    <img\r\n                                                        src={edit}\r\n                                                        alt=\"edit\"\r\n                                                        className=\"edit2 huv\"\r\n                                                        onClick={this.editAlltheHomeworkdiaOpen}\r\n                                                        style={{ position: \"absolute\", marginLeft:this.state.marginLeftedit, marginTop: \"-60px\" }}\r\n\r\n                                                    />\r\n                                                        <div className=\"centerized \">\r\n                                                       \r\n                                                        <div>{this.state.realtimestudent ? (\r\n                                                            <div className=\"checkboxstuff1\" style={{ marginBottom: \"10px\", flexDirection: \"column\" }}>\r\n\r\n                                                                {this.state.realtimestudent.timeday ? (\r\n                                                                <div>\r\n                                                                        {!this.state.c ? (\r\n                                                                                <div>\r\n                                                                                    <div className=\"checkboxstuff1 centerized\">\r\n                                                                                        <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                            <div className=\" centerized\">Mon</div>\r\n                                                                                        <div className=\" centerized\">{this.state.realtimestudent.hwtime.mon } M</div>\r\n                                                                                        </div>\r\n                                                                                        <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                            <div className=\" centerized\">Tues</div>\r\n                                                                                        <div className=\" centerized\">{this.state.realtimestudent.hwtime.tues} M</div>\r\n                                                                                        </div>\r\n                                                                                        <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                            <div className=\" centerized\">Wed</div>\r\n                                                                                        <div className=\" centerized\">{this.state.realtimestudent.hwtime.wed} M</div>\r\n                                                                                        </div>\r\n                                                                                        <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                            <div className=\" centerized\">Thurs</div>\r\n                                                                                        <div className=\" centerized\">{this.state.realtimestudent.hwtime.thur} M</div>\r\n                                                                                        </div>\r\n                                                                                        <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                            <div className=\" centerized\">Fri</div>\r\n                                                                                        <div className=\" centerized\">{this.state.realtimestudent.hwtime.fri} M</div>\r\n                                                                                        </div>\r\n                                                                                        <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                            <div className=\" centerized\">Sat</div>\r\n                                                                                        <div className=\" centerized\">{this.state.realtimestudent.hwtime.sat} M</div>\r\n                                                                                        </div>\r\n                                                                                        <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                            <div className=\" centerized\">Sun</div>\r\n                                                                                        <div className=\" centerized\">{this.state.realtimestudent.hwtime.sun} M</div>\r\n                                                                                        </div>\r\n                                                                                        <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                            <div className=\" centerized\">Total</div>\r\n                                                                                        <div className=\" centerized\"> {parseInt(this.state.realtimestudent.hwtime.mon) + parseInt(this.state.realtimestudent.hwtime.tues) + parseInt(this.state.realtimestudent.hwtime.wed) + parseInt(this.state.realtimestudent.hwtime.thur) + parseInt(this.state.realtimestudent.hwtime.fri) + parseInt(this.state.realtimestudent.hwtime.sat) + parseInt(this.state.realtimestudent.hwtime.sun) } M</div>\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n\r\n                                                                            \r\n\r\n                                                                        ) : (<div>\r\n\r\n                                                                               \r\n                                                                        </div>)}\r\n                                                                        \r\n                                                                        </div>\r\n                                                                   \r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            {this.state.realtimestudent.edityesnoWeek ? (<div style={{display:\"flex\", flexDirection:\"row\"}}>\r\n                                                                                {!this.state.c ? (<h6><b>Weekly Time Total:</b>  {this.state.realtimestudent.totalWeekTime.total===\"\"?(<span>0</span>):(<span>{this.state.realtimestudent.totalWeekTime.total}</span>)}/{this.state.realtimestudent.min} Minutes  </h6>) : (\r\n                                                                                        <div>\r\n                                                                                            </div>\r\n\r\n                                                                                            )\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                                    \r\n\r\n\r\n                                                                                ) : (<div>\r\n\r\n\r\n                                                                                </div>)}\r\n                                                                            \r\n                                                                           \r\n                                                                        \r\n\r\n                                                                        </div>)}\r\n\r\n                                                                <div className=\"checkboxstuff1b\" style={{ marginLeft:\"\", }}>\r\n\r\n                                                                    {this.state.realtimestudent.syncedCheckbox ? (<Checkboxnum2 checkboxes={7} prac={this.state.realtimestudent.checked} synced={true} role={\"teacher\"} sync={this.state.realtimestudent.syncedCheckboxes} times={this.state.realtimestudent.hwtime} synctimes={this.state.realtimestudent.timeday }/>\r\n                                                                    ) : (\r\n\r\n                                                                            <Checkboxnum checkboxes={this.state.realtimestudent.checkboxes} prac={this.state.realtimestudent.checked} role={\"teacher\"} times={this.state.realtimestudent.hwtime} synctimes={this.state.realtimestudent.timeday}/>\r\n                                                                )}\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                        ) : (<div></div>)}\r\n\r\n\r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n                                                    <div className=\"centerized checkboxstuff1\" style={{ width: \"100%\", marginTop: \"2px\", marginBottom:\"10px\" }}>\r\n                                                        {this.state.realtimestudent === false ? (<div className= \"centerized \" style={{ width: \"300px\" }} ><div></div></div>\r\n                                                        ) : (\r\n\r\n\r\n\r\n\r\n\r\n                                                                <div  >\r\n                                                                    {this.state.c ? (<div >\r\n\r\n                                                                        {this.state.t ? (<div className=\" checkboxstuff1a  \" style={{ width: \"265px\", marginLeft: \"7px\" }}>\r\n                                                                            <button className=\"btn  btn-block\"  style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.clearChecks}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Checks</p></span></button>\r\n                                                                            <button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.clearTime}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Time</p></span></button>\r\n\r\n                                                                        </div>\r\n\r\n                                                                        ) : (<div className=\" centerized \">\r\n                                                                                <button className=\"btn  btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.clearChecks}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Checks</p></span></button>\r\n\r\n                                                                            </div>)}\r\n\r\n                                                                        </div>\r\n                                                                    ) : (<div className=\" centerized \" style={{ width: \"265px\" }}>\r\n                                                                            {this.state.t ? (<button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.clearTime}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Time</p></span></button>):(<div></div>)}\r\n                                                             \r\n                                                            </div>)}\r\n\r\n                                                           \r\n                                                                </div>\r\n\r\n\r\n                                                            )}\r\n\r\n                                                    </div>\r\n                                                    <div className=\" fill2\" style={{ height: \"50%\", marginTop: \"7px\" }}>\r\n                                                        <div className=\" fill2  centerized\" style={{ height: \"100%\", }}>\r\n                                                            <div className=\" fill2\" style={{ height: \"100%\", width: \"75%\", }}>\r\n                                                                <table className=\"fill1\" >\r\n                                                                    <tr className=\"fill1\">\r\n                                                                        <td style={{ width: \"100%\", height: \"100%\", border: \"1px solid green\"  }}>\r\n                                                                            <div className=\"homeworkScroll\" style={{ width: \"100%\", height:\"100%\" }}>\r\n                                                                                {this.state.homeworks[0] ? (<div className=\"homeworkScroll1\" style={{ width: \"100%\" }}>\r\n                                                                                {\r\n                                                                                    this.state.homeworks.map((homework, index) =>\r\n\r\n                                                                                        <div className=\" centerized\"  key={index} style={{  width: \"97%\", display:\"flex\", justifyContent:\"space-between\" }}>\r\n                                                                                            <div style={{marginLeft:\"10px\" }} className=\"huv centerized rowss\" onClick={this.showHomework.bind(this, homework)}><div>{homework.title.length > 35 ? (<div><Short word={homework.title} wordtype=\"sHomework\" /></div>) : (<div>{homework.title}</div>)}</div></div>\r\n\r\n                                                                                            <div className=\"huv edit2 \" style={{ justifyContent: \"flexEnd\" }}>\r\n                                                                                                <img\r\n                                                                                                    src={trash}\r\n                                                                                                    alt=\"delete\"\r\n                                                                                                    onClick={this.deleteHomework.bind(this, homework)}\r\n                                                                                                    style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n                                                                                                />\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n\r\n                                                                                    )\r\n                                                                                    }\r\n                                                                                    \r\n                                                                                    <div className=\"centerized\"style={{ width: \"100%\" }}>\r\n                                                                                        <div className=\"btn centerized btn-block\" value=\"submit\" onClick={this.AddHomework}><span className=\"checkboxstuff1\" style={{ width: \"150\" }}>\r\n                                                                                        <img\r\n                                                                                                src={leaf}\r\n                                                                                                className=\"edita\"\r\n                                                                                                style={{width:\"20px\", height:\"20px\"}}\r\n\r\n                                                                                        />\r\n                                                                                        <p>+</p><p className=\"rowss huv\">Homework</p>\r\n                                                                                    </span></div>\r\n\r\n                                                                                </div>\r\n                                                                            </div>) : (\r\n                                                                                    <div>\r\n                                                                                        <div className=\"btn  btn-block\" value=\"submit\" onClick={this.AddHomework}><span className=\"checkboxstuff1\" style={{ width: \"150\" }}>\r\n                                                                                            <img\r\n                                                                                                src={leaf}\r\n                                                                                                    className=\"edita\"\r\n                                                                                                    style={{ width: \"20px\", height: \"20px\" }}\r\n\r\n\r\n                                                                                            />\r\n                                                                                            <p>+</p><p className=\"rowss huv\">Homework</p>\r\n                                                                                        </span></div>\r\n                                                                                        </div>)}\r\n                                                                            </div>\r\n\r\n                                                                        </td>\r\n                                                                        \r\n                                                                    </tr>\r\n                                                                </table>\r\n                                                                \r\n                                                                \r\n                                                            </div>\r\n                                                            \r\n                                                                \r\n                                                        </div>\r\n                                                        \r\n                                                        \r\n\r\n                                                        <div className=\"checkboxstuff1a fill2\" style={{marginTop:\"15px\"}}>\r\n                                                            \r\n                                                            <div style={{ flexDirection: \"column\", marginRight: \"30px\" }}>\r\n                                                                {this.state.realtimestudent.checkboxes ? (<div>{this.state.realtimestudent.checkboxes !== \"0\" ? (<div style={{display:\"flex\", flexDirection:\"row\"}}> <b style={{marginRight:\"5px\"}}>Practice Goal: </b> {!this.state.realtimestudent.checked ?(<div>0</div>):(<div>{this.state.realtimestudent.checked}</div>)}/{this.state.realtimestudent.checkboxes}</div>\r\n                                                                ) : (<div></div>)}</div>\r\n                                                                ) : (<div>\r\n                                                                        {this.state.realtimestudent.syncedCheckbox ? (<div style={{ width: \"125px\" }} >\r\n                                                                            {this.state.realtimestudent.checkboxes ? (<div style={{display:\"flex\", flexDirection:\"row\"}}> <b style={{marginRight:\"5px\"}}>Practice Goal: </b> {!this.state.realtimestudent.checked ?(<div>0</div>):(<div>{this.state.realtimestudent.checked}</div>)}/{this.state.realtimestudent.checkboxes}</div>\r\n                                                                            ) : (<div></div>)}\r\n                                                                        </div>\r\n                                                                        ) : (<div></div>)}\r\n                                                                    </div>)}\r\n                                                                \r\n                                                                {this.state.realtimestudent.dayStreak ? (<div><b> Streak: </b> {this.state.realtimestudent.daystreak}</div>): (<div></div>)}\r\n                                                                <div>{this.state.c ? (<div style={{display:\"flex\", flexDirection:\"row\"}}>\r\n                                                                    {parseInt(this.state.realtimestudent.min) > 0 ? (<p style={{display:\"flex\", flexDirection:\"row\"}}> <b> Weekly Time: </b> {this.state.realtimestudent.totalWeekTime.total===\"\"?(<div style={{marginLeft:\"5px\", }}>0</div>):(<div style={{marginLeft:\"5px\",}}>{this.state.realtimestudent.totalWeekTime.total}</div>)}/{this.state.realtimestudent.min} Minutes  </p>) : (<div></div>)}\r\n                                                                   \r\n                                                                            \r\n                                                                      \r\n\r\n                                                                </div>) : (<div style={{display:\"flex\", flexDirection:\"row\"}}>\r\n                                                                        {this.state.realtimestudent.timeday ? (\r\n                                                                            <div style={{display:\"flex\", flexDirection:\"row\"}}>\r\n                                                                                { parseInt(this.state.realtimestudent.min) > 0  ? (<p style={{display:\"flex\", flexDirection: \"row\"}}><b>Weekly Time:</b> {this.state.realtimestudent.totalWeekTime.total===\"\"?(<div style={{marginLeft:\"5px\", }}>0</div>):(<div style={{marginLeft:\"5px\", }}>{this.state.realtimestudent.totalWeekTime.total}</div>)}/{this.state.realtimestudent.min} Minutes  </p>) : (<div></div>)}</div>\r\n                                                                        ) : (<div></div>)}\r\n                                                                            </div>)}\r\n                                                                </div>\r\n                                                                </div>\r\n                                                        </div>\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ opacity: \"0\" }}>\r\n                                                <table style={{ width: \"100%\" }}>\r\n                                                    <tr>\r\n                                                        <td style={{ width: \"40%\" }}>\r\n                                                            <div style={{ flexDirection: \"column\" }}>\r\n                                                                <div> <p>Mon: 0 Minutes </p></div>\r\n                                                                <div>  <p>Tues: 0 Minutes</p></div>\r\n                                                                <div> <p>Wed: 0 Minutes</p></div>\r\n                                                                <div> <p>Thurs: 0 Minutes</p></div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td style={{ width: \"50%\" }}>\r\n                                                            <div style={{ flexDirection: \"column\" }}>\r\n                                                                <div> <p>Fri: 0 Minutes</p></div>\r\n                                                                <div>  <p>Sat: 0 Minutes</p></div>\r\n                                                                <div> <p>Sun: 0 Minutes</p></div>\r\n                                                                <div><p> Total: </p></div>\r\n                                                            </div>\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </table>\r\n\r\n                                            </div> */}\r\n                                            \r\n\r\n                                        </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n\r\n                                        \r\n\r\n                                )\r\n                        }\r\n                    </div>\r\n                ) : (<div></div>)\r\n       \r\n    }</div>\r\n    );\r\n    }\r\n};\r\n/*\r\n * \r\n * \r\n * */","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/home.js",["507"],"import AuthService from \"../services/auth.service\";\r\n\r\nimport React, { Component } from \"react\";\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass Homesarecool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n\r\n    };\r\n    componentDidMount() {\r\n        let usr = AuthService.getCurrentUser();\r\n        console.log(usr);\r\n        if (usr) {\r\n            if (usr.role === \"admin\") {\r\n                //window.location.reload();\r\n            }\r\n            else {\r\n                if (usr.role === \"teacher\") {\r\n                    this.props.history.push(\"/profile\");\r\n\r\n                }\r\n                else {\r\n                    this.props.history.push({\r\n                        pathname: \"/student_routes\",\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.props.history.push({\r\n                pathname: \"/login\",\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"title is-1\">This is the Home Page</h1>\r\n                <p>\r\n                    I'll need to add content to this page for marketing.\r\n    </p>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Homesarecool;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/profile.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/usersignup.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/student_routes.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/adminedit.js",["508"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { isEmail } from \"validator\";\r\nimport authService from \"../services/auth.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Pic from \"../components/diapicture\";\r\nimport EditBack from \"../components/editBackground\";\r\n\r\n//this component details my dialog help component\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst required = value => {\r\n    if (value === \"\") {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\nclass Adminedit extends Component {\r\n    //using the functions sent from the profile page allows me to send back student information typed in to profile and then to the backend. \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cleargoals = this.cleargoals.bind(this);\r\n        this.clearhw = this.clearhw.bind(this);\r\n        this.cleararchive = this.cleararchive.bind(this);\r\n        this.clearchecks = this.clearchecks.bind(this);\r\n        this.changepics = this.changepics.bind(this);\r\n        this.changeback = this.changeback.bind(this);\r\n        this.handleSub = this.handleSub.bind(this);\r\n        this.closepic = this.closepic.bind(this);\r\n        this.closeback = this.closeback.bind(this);\r\n\r\n\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",           \r\n            pic: false,\r\n            background: false,\r\n            last: \"\",\r\n            first: \"\",\r\n            checkbox:\"\",\r\n        }\r\n\r\n    };\r\n\r\n    cleargoals() {\r\n        authService.cleargoals(this.props.current._id);\r\n\r\n    }\r\n    clearhw() {\r\n        authService.clearhw(this.props.current._id);\r\n\r\n    }\r\n    cleararchive() {\r\n        authService.cleararchive(this.props.current._id);\r\n\r\n    }\r\n    clearchecks() {\r\n        authService.clearChecks(this.props.current._id);\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    changepics() {\r\n        this.setState({\r\n            pic: true,\r\n\r\n        })\r\n    }\r\n    changeback() {\r\n        this.setState({\r\n            background: true,\r\n\r\n        })\r\n    }\r\n    closepic() {\r\n        this.setState({\r\n            pic: false,\r\n\r\n        })\r\n    }\r\n    closeback() {\r\n        this.setState({\r\n            background: false,\r\n\r\n        })\r\n    }\r\n\r\n    handleSub(account, teacher, student) {\r\n        if (account) {\r\n            authService.changeAccountInfo(this.props.current._id, this.state.email, this.state.password,);\r\n        }\r\n        else if (teacher) {\r\n\r\n            authService.changeuserinfoA(this.props.current._id, this.state.first, this.state.last, this.state.email, this.state.password,);\r\n\r\n        } \r\n\r\n        else if (student) {\r\n            authService.changeStudentinfoA(this.props.current._id, this.state.first, this.state.last, this.state.email, this.state.checkbox, this.state.password);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"popup-box \" style={{ zIndex: \"2000\" }}>\r\n                {this.state.pic && (<Pic handleClose={this.closepic} realusr={this.props.current} />)}\r\n\r\n                {this.state.background && (<EditBack handleBackClose={this.closeback} realusr={this.props.current} />)}\r\n                <div className=\"box z2\">\r\n                    <span className=\"close-icon-2 \" onClick={this.props.handleClose}>x</span>\r\n                    \r\n\r\n\r\n                    {this.props.account ? (<div>\r\n                        <Form\r\n                            onSubmit={this.handleSub.bind(this, true, false, false)}\r\n                            ref={c => {\r\n                                this.form = c;\r\n                            }}\r\n                        >\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Change Email?</label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"email\"\r\n                                    validations={[email]}\r\n                                    onChange={this.handleChange}\r\n                                    name=\"email\"\r\n                                    placeholder={this.props.current.email}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\">Change Password?</label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"password\"\r\n                                    validations={[]}\r\n\r\n                                    onChange={this.handleChange}\r\n                                    name=\"password\"\r\n                                    placeholder={this.props.current.password}\r\n\r\n                                />\r\n                            </div>\r\n                            <div style={{ marginTop: \"35px\" }}>\r\n                                <button className=\"btn btn-primary\" value=\"submit\" >Change Account Info</button>\r\n                            </div>\r\n                        </Form>\r\n\r\n\r\n                    </div>) : (<div></div>)}\r\n\r\n                    {!this.props.account ? (<div>\r\n\r\n\r\n                        {this.props.current.role === \"teacher\" ? (<div>\r\n                            <Form\r\n                                onSubmit={this.handleSub.bind(this, false, true, false)}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">Change Email?</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"email\"\r\n                                        validations={[email]}\r\n                                        onChange={this.handleChange}\r\n                                        name=\"email\"\r\n                                        placeholder={this.props.current.email}\r\n\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">Change Password?</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"password\"\r\n                                        validations={[]}\r\n                                        placeholder={this.props.current.password}\r\n\r\n                                        onChange={this.handleChange}\r\n                                        name=\"password\"\r\n                                    />\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"firstName\">First Name</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"first\"\r\n                                            validations={[required]}\r\n                                            placeholder={this.props.current.firstname}\r\n\r\n                                            onChange={this.handleChange}\r\n                                            name=\"first\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"lastName\">Last Name</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"last\"\r\n                                            validations={[required]}\r\n                                            placeholder={this.props.current.lastname}\r\n\r\n                                            onChange={this.handleChange}\r\n                                            name=\"last\"\r\n                                        />\r\n                                    </div>\r\n                                    <h5 onClick={this.changepics} className=\"huv rowss\">Pics?</h5>\r\n                                    <h5 onClick={this.changeback} className=\"huv rowss\">Background?</h5>\r\n                                    \r\n                                        \r\n                                    \r\n\r\n                                </div>\r\n                                <div style={{ marginTop: \"35px\" }}>\r\n                                    <button className=\"btn btn-primary\" value=\"submit\" >Change User info</button>\r\n                                </div>\r\n                            </Form>\r\n\r\n                        </div>) : (<div></div>)}\r\n\r\n\r\n                        {this.props.current.role === \"student\" ? (<div>\r\n                            <Form\r\n                                onSubmit={this.handleSub.bind(this, false, false, true)}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">Change Email?</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"email\"\r\n                                        validations={[email]}\r\n                                        onChange={this.handleChange}\r\n                                        name=\"email\"\r\n                                        placeholder={this.props.current.email}\r\n\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">Change Password?</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"password\"\r\n                                        validations={[]}\r\n                                        placeholder={this.props.current.password}\r\n                                        onChange={this.handleChange}\r\n                                        name=\"password\"\r\n                                    />\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"firstName\">Student First Name*</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"first\"\r\n                                            validations={[required]}\r\n                                            placeholder={this.props.current.firstName}\r\n\r\n                                            onChange={this.handleChange}\r\n                                            name=\"first\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"lastName\">Student Last Name*</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"last\"\r\n                                            validations={[required]}\r\n                                            placeholder={this.props.current.lastName}\r\n\r\n                                            onChange={this.handleChange}\r\n                                            name=\"last\"\r\n                                        />\r\n                                    </div>\r\n                                    <h5>Checkboxes?</h5>\r\n                                    <select htmlFor=\"checkbox\" onChange={this.handleChange} name=\"checkbox\" id=\"checkbox\">\r\n                                        <option value=\"\">{this.props.current.checkboxes}</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                        <option value=\"6\">6</option>\r\n                                        <option value=\"7\">7</option>\r\n                                        <option value=\"0\">0</option>\r\n                                    </select>\r\n                                    <h5 onClick={this.clearhw} className=\"huv rowss\">Clear Homework</h5>\r\n                                    <h5 onClick={this.cleargoals} className=\"huv rowss\">Clear Goals</h5>\r\n                                    <h5 onClick={this.cleararchive} className=\"huv rowss\">Clear Archive</h5>\r\n                                    <h5 onClick={this.clearchecks} className=\"huv rowss\">Clear checks</h5>\r\n\r\n\r\n                                    <h5 onClick={this.changepics} className=\"huv rowss\">Pics?</h5>\r\n                                    <h5 onClick={this.changeback} className=\"huv rowss\">Background?</h5>\r\n\r\n                                    \r\n\r\n                                </div>\r\n                                <div style={{ marginTop: \"35px\" }}>\r\n                                    <button className=\"btn btn-primary\" value=\"submit\" >Change Student Info</button>\r\n                                </div>\r\n                            </Form>\r\n\r\n\r\n                        </div>) : (<div></div>)}\r\n\r\n\r\n                    </div>): (<div></div>)}\r\n                            \r\n                    \r\n\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Adminedit;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/prostudentList1.js",["509","510"],"import React, { Component } from \"react\"\r\nimport \"./components.css\";\r\nimport edit from \"./edit.png\";\r\nimport trash from \"./Trash1.png\";\r\nimport Percent from \"./percent.js\";\r\n//import { Dropdown } from \"bootstrap\";\r\nimport Short from \"./short.js\";\r\nimport Dropdown from \"./dropdown.js\";\r\nimport Progress from \"./progress.js\";\r\nimport Splashscreen  from \"../components/splashscreen.js\";\r\n\r\n//import AuthService from \"../services/auth.service\";\r\n\r\n//simply sets state and maps every student found in the current list of students to a button that is clickable.\r\nexport default class proStudent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dropdown = this.dropdown.bind(this);\r\n        this.backup = this.backup.bind(this);\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            dropdown: false,\r\n            picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            splashscreen: false,\r\n            \r\n        }\r\n\r\n    };\r\n    dropdown() {\r\n        this.setState({\r\n            dropdown: true,\r\n        })\r\n    }\r\n    backup() {\r\n        this.setState({\r\n            dropdown: false,\r\n        })\r\n    }\r\n    Splashscreen(){\r\n        this.setState({splashscreen:false})\r\n    }\r\n   async profile(student) {\r\n        await this.setState({splashscreen:true})\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(500)\r\n        this.props.history.push({\r\n            pathname: \"/student\",\r\n            state: { detail: student }\r\n        });\r\n    \r\n    }\r\n    \r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div style={{ height: \"100%\", width: \"100%\" }} >\r\n                {this.state.splashscreen && (<Splashscreen closesplash={this.Splashscreen}/>)}\r\n                <h1 className=\"centerized\"> My Students:</h1>\r\n           \r\n                <div style={{ height: \"90%\", width: \"100%\" }} className=\"homeworkScroll\">\r\n\r\n                                <div  style={{ width: \"100%\" }} >\r\n        {\r\n            this.props.students.map((student, index) =>\r\n\r\n                <div className =\"prorow1 \" key={index} >\r\n                    <div style={{ display:\"flex\", flexDirection:\"row\"}}>\r\n                    <div style={{ width:\"90px\"}}>\r\n                        <div className=\"proStudpic1\" style={{ width: \"70px\", marginTop:\"8px\"}}>\r\n\r\n                        <div className=\"centerized\">\r\n                            {student.profilepic ? (\r\n                                 <div>\r\n                                 <Progress pic={student.profilepic} profile={true} goals={student.goals} main={student.mainGoal} userProfile={true}/>\r\n\r\n                             </div>\r\n                     ) : (<div>\r\n                             <Progress pic={this.state.picture} profile={true} goals={student.goals} main={student.mainGoal} userProfile={true} />\r\n                             </div>\r\n                                \r\n                            \r\n                                   \r\n                                    )}\r\n\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    <div style={{ width: \"190px\", height: \"35px\",  }}>\r\n                        <div style={{ width: \"100%\", marginTop: \"20px\", display:\"flex\", flexDirection:\"column\" }}>\r\n\r\n                            {(student.firstName.length + student.lastName.length) > 17 ? (<div style={{color:\"#696eb5\"}} className=\"huv rowss1\" onClick={this.profile.bind(this, student)}><Short word1={student.firstName} word2={student.lastName} wordtype=\"pro\" /></div>) :\r\n                                (<div className=\"huv \" onClick={this.profile.bind(this, student)} style={{color:\"#696eb5\"}}>{student.firstName} {student.lastName} </div>)}\r\n                                {student.daysPracticed?(<div>{student.daysPracticed} Days Practiced</div>):(<div>0 Days Practiced</div>)}\r\n                                {student.mainGoal ? (<div><Percent goals={student.goals} main={student.mainGoal} one={true}/> </div>) : (<div>0% Goals Completed</div>)}\r\n\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n                    <div style={{ height: \"35px\", width:\"18px\" }}>\r\n                        <div>\r\n                            <img\r\n                                src={trash}\r\n                                alt=\"profile-img\"\r\n                                onClick={this.props.del.bind(this, student)}\r\n                                style={{ marginTop: \"45px\", float: \"right\", marginRight: \"20px\", width: \"18px\", height: \"18px\" , opacity:\".5\"}}\r\n                                className= \"huv\"\r\n\r\n                            />\r\n                           \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                )\r\n                    }\r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n                   \r\n\r\n    }\r\n}\r\n//hubz","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/prostudentList.js",["511","512"],"import React, { Component } from \"react\"\r\nimport \"./components.css\";\r\nimport edit from \"./edit.png\";\r\nimport trash from \"./Trash1.png\";\r\nimport Percent from \"./percent.js\";\r\n//import { Dropdown } from \"bootstrap\";\r\nimport Short from \"./short.js\";\r\nimport Dropdown from \"./dropdown.js\";\r\nimport Splashscreen  from \"../components/splashscreen.js\";\r\n\r\n//import AuthService from \"../services/auth.service\";\r\n\r\n//simply sets state and maps every student found in the current list of students to a button that is clickable.\r\nexport default class proStudent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dropdown = this.dropdown.bind(this);\r\n        this.backup = this.backup.bind(this);\r\n\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n\r\n        this.state = {\r\n            dropdown: false,\r\n            picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            splashscreen: false,\r\n            \r\n            \r\n        }\r\n\r\n    };\r\n    dropdown() {\r\n        this.setState({\r\n            dropdown: true,\r\n        })\r\n    }\r\n    backup() {\r\n        this.setState({\r\n            dropdown: false,\r\n        })\r\n    }\r\n    Splashscreen(){\r\n        this.setState({splashscreen:false})\r\n    }\r\n \r\n    async profile(student) {\r\n        await this.setState({splashscreen:true})\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(500)\r\n        this.props.history.push({\r\n            pathname: \"/student\",\r\n            state: { detail: student }\r\n        });\r\n    \r\n    }\r\n    \r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div style={{ height: \"100%\", width: \"100%\" }} >\r\n                {this.state.splashscreen && (<Splashscreen closesplash={this.Splashscreen}/>)}\r\n                <h3 style={{margin:\"15px\"}}> My Students:</h3>\r\n            <table  style={{ width: \"100%\" }} >\r\n            <tr  style={{height:\"50px\"}}>\r\n                <th style={{ height: \"50px\", width:\"100px\" }}>\r\n                            <div style={{ opacity: \"0\", width: \"60px\"}} >\r\n                        <img\r\n                            src={this.state.picture}\r\n                            alt=\"profile-img\"\r\n                            className=\"proStudpicture\"\r\n\r\n                        />\r\n                    </div>\r\n\r\n                    \r\n                </th>\r\n                <th style={{ height: \"50px\" }}>\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                        <p> Name: </p>\r\n\r\n                        </div>\r\n                    </th>\r\n                <th style={{ width: \"195px\", height: \"50px\" }}>\r\n                    <div style={{  marginTop: \"10px\", width:\"100%\" }}>\r\n                    <p> Days Practiced:</p>\r\n                        </div>\r\n                    </th>\r\n                    <th>\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                    <p> Goal Progress: </p>\r\n                        </div>\r\n                        </th>\r\n                <th style={{ height: \"50px\" }}>\r\n                    <div style= {{ opacity:\"0\" }} >\r\n                        <img\r\n                            src={this.state.picture}\r\n                            alt=\"profile-img\"\r\n                            className=\"proStudpicture\"\r\n\r\n                        />\r\n                        </div>\r\n                        </th>\r\n                    </tr>\r\n                </table>\r\n                <div style={{ height: \"73%\", width: \"100%\" }} className=\"homeworkScroll\">\r\n\r\n                                <table  style={{ width: \"100%\" }} >\r\n        {\r\n            this.props.students.map((student, index) =>\r\n\r\n                <tr className =\"prorow \" key={index} >\r\n                    <td style={{ height: \"35px\", }}>\r\n                        <div className=\"proStudpic\" style={{ width: \"100%\", marginTop:\"8px\"}}>\r\n\r\n                        <div className=\"centerized\">\r\n                            {student.profilepic ? (\r\n                                <img\r\n                                        src={ student.profilepic}\r\n                                    alt=\"profile-img\"\r\n                                        className=\"proStudpicture cropped1\"\r\n\r\n                                />\r\n                            ) : (\r\n                                    <img\r\n                                        src={this.state.picture}\r\n                                        alt=\"profile-img\"\r\n                                            className=\"proStudpicture cropped1\"\r\n\r\n                                    />\r\n                                    )}\r\n\r\n                            </div>\r\n                        </div>\r\n                        </td>\r\n                    <td style={{ width: \"150px\", height: \"35px\",  }}>\r\n                        <div className=\"proStud2\" style={{ width: \"100%\", marginTop: \"25px\" }}>\r\n\r\n                            {(student.firstName.length + student.lastName.length) > 17 ? (<p className=\"huv rowss1\" onClick={this.profile.bind(this, student)}><Short word1={student.firstName} word2={student.lastName} wordtype=\"pro\" /></p>) :\r\n                                (<p className=\"huv rowss1\" onClick={this.profile.bind(this, student)}>{student.firstName} {student.lastName} </p>)}\r\n\r\n                        </div>\r\n                        \r\n                    </td>\r\n                    <td style={{ width: \"150px\", height: \"35px\",  }}>\r\n                        <div style={{marginLeft:\"70px\", marginTop:\"25px\"}}>\r\n                        <p> 0</p>\r\n                        </div>\r\n                    </td>\r\n                    <td >\r\n                        <div style={{ marginLeft: \"100px\", marginTop: \"25px\", height: \"35px\" }}>\r\n \r\n                            {student.mainGoal ? (<Percent goals={student.goals} main={student.mainGoal} />) : (<div>0%</div>)}\r\n                        </div>\r\n                    </td>\r\n                    <td style={{ height: \"35px\", }}>\r\n                        <div>\r\n                            <img\r\n                                src={trash}\r\n                                alt=\"profile-img\"\r\n                                onClick={this.props.del.bind(this, student)}\r\n                                style={{ marginTop: \"25px\", float: \"right\", marginRight: \"20px\", width: \"18px\", height: \"18px\" , opacity:\".5\"}}\r\n                                className= \"huv\"\r\n\r\n                            />\r\n                           \r\n                        </div>\r\n                    </td>\r\n                   </tr>\r\n\r\n                )\r\n                    }\r\n\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n        )\r\n                   \r\n\r\n    }\r\n}\r\n//hubz","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/short.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/deletestudent.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/button.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/splashscreen.js",["513"],"import React, { Component } from 'react';\r\nimport Logo from \"../legato.png\";\r\nimport Rendering from \"./rendering.js\"\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nclass Splashscreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n\r\n        \r\n\r\n      \r\n        \r\n\r\n        this.state = {\r\n            width:\"30%\", alignSelf:\"center\", marginTop:\"5%\"\r\n           \r\n\r\n        }\r\n       \r\n\r\n    }\r\n    componentDidMount() {\r\n        if(parseInt(window.innerWidth) <= 550){\r\n            this.setState({ tooSmall: true, \r\n                width:\"85%\",\r\n                marginTop:\"35%\"\r\n               \r\n                \r\n            });\r\n        }\r\n        this.wait();\r\n\r\n        \r\n\r\n    }\r\n    async wait(){\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(500)\r\n        \r\n            await this.props.closesplash()\r\n        \r\n        \r\n    }\r\n   \r\n\r\n   \r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"popup-boxa1splash  to-front\" style={{zIndex: \"3000\"}}>\r\n                <div className=\"splashscreen\">\r\n                   \r\n\r\n                   \r\n                    <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", }}>\r\n                      \r\n\r\n                       \r\n                        <img src={Logo} alt=\"logo\" style={{width: this.state.width, alignSelf:\"center\", marginTop: this.state.marginTop}}/>\r\n                              \r\n\r\n\r\n                                   \r\n                    </div>\r\n                    \r\n                   \r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Splashscreen;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/slider.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/studentEdit.js",["514"],"import React, { Component } from 'react';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { isEmail } from \"validator\";\r\nimport Dropdown from \"./dropdown.js\";\r\nimport Down from \"./downarrow.png\";\r\nimport clock from \"./clock.png\";\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst phone = value => {\r\n    if (value.length !== 10) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Input 10 digits without any symbols\r\n            </div>\r\n        );\r\n    }\r\n};\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nclass Studentedit extends Component {\r\n    constructor(props) {\r\n\r\n            super(props);\r\n            this.wrapperRef = React.createRef();\r\n            this.handleClickOutside = this.handleClickOutside.bind(this);\r\n            this.setWrapperRef = this.setWrapperRef;\r\n            this.selectDay = this.selectDay.bind(this);\r\n        this.selectDays = this.selectDays.bind(this);\r\n        this.selectTime = this.selectTime.bind(this);\r\n        this.closedrop = this.closedrop.bind(this);\r\n        this.changeTime = this.changeTime.bind(this);\r\n\r\n            this.state = {\r\n                selectDay: false,\r\n            selectTime: false,\r\n            day: \"\",\r\n            time: \"\",\r\n            tooSmall: false\r\n            }\r\n\r\n        }\r\n\r\n        componentDidMount() {\r\n            if(parseInt(window.innerWidth) <= 500){\r\n                this.setState({ tooSmall: true, \r\n                   \r\n                    \r\n                });\r\n            }\r\n            document.addEventListener('mousedown', this.handleClickOutside);\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            document.removeEventListener('mousedown', this.handleClickOutside);\r\n        }\r\n        handleClickOutside(event) {\r\n            if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n                this.props.handleEditClose();\r\n            }\r\n        }\r\n        selectDays(day) {\r\n            this.props.selectDay(day);\r\n    \r\n            this.setState({\r\n                day: day\r\n            })\r\n            console.log(day);\r\n            this.selectDay();\r\n            \r\n        }\r\n        selectDay() {\r\n            this.setState({\r\n                selectDay: !this.state.selectDay,\r\n            })\r\n            \r\n        }\r\n        closedrop() {\r\n            this.setState({\r\n                selectDay: false,\r\n                selectTime: false,\r\n    \r\n            })\r\n        }\r\n        changeTime(time, showtime) {\r\n            this.setState({\r\n                time: showtime\r\n            })\r\n            this.props.changeTime(time);\r\n        }\r\n        selectTime() {\r\n            this.setState({\r\n                selectTime: !this.state.selectTime,\r\n                \r\n            })\r\n        }\r\n    render() {\r\n        return (\r\n            <div className=\"popup-boxa to-fronta1\" style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\"}}>\r\n                <div className=\"card-container6abc1shedit\" ref={this.wrapperRef} >\r\n                    <div className=\"homeworkScroll1\">\r\n                        <div style={{width: \"96%\"}}>\r\n                    <h1>Student Information: </h1>\r\n                    <span className=\"close-icon-2\" onClick={this.props.handleEditClose}>x</span>\r\n\r\n                    <Form\r\n                        onSubmit={this.props.handleSub}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstName\"><b>First Name:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"first\"\r\n                                placeholder={this.props.state.first}\r\n                                onChange={this.props.handleChange}\r\n                                name=\"first\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\"><b>Last Name:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"last\"\r\n                                placeholder={this.props.state.last}\r\n                                onChange={this.props.handleChange}\r\n                                name=\"last\"\r\n                            />\r\n                        </div>\r\n                        {this.state.tooSmall?(<div className=\"form-group forfiles\" style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n                                \r\n                                <div>\r\n                                    <label htmlfor=\"time\"><b>Scheduled Time:</b></label>\r\n                                    <div\r\n\r\n                                        className=\"form-control\"\r\n                                        id=\"time\"\r\n                                        onClick={this.selectTime}\r\n                                        style={{ width: \"120px\", height: \"30px\", flexDirection: \"row\", display: \"flex\" }}\r\n\r\n\r\n                                    >\r\n                                        <div style={{ width: \"90px\", alignSelf: \"center\" }}>{this.state.time}</div>\r\n                                        <img src={clock} alt=\"clock\" style={{ width: \"15px\", height: \"15px\", }} />\r\n\r\n                                    </div>\r\n                                    {this.state.selectTime ? (<Dropdown selectDay={this.selectDays} clock={true} closedrop={this.closedrop} changeTime={this.changeTime}/>) : (<div></div>)}\r\n\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlfor=\"day\"><b>Day: </b></label>\r\n                                    <div\r\n\r\n                                        className=\"form-control\"\r\n                                        id=\"day\"\r\n                                        onClick={this.selectDay}\r\n                                        style={{ width: \"110px\", height: \"30px\", flexDirection: \"row\", display:\"flex\" }}\r\n\r\n\r\n                                    >\r\n                                        <div style={{width:\"90px\", alignSelf:\"center\"}}>{this.state.day}</div>\r\n                                        <img src={Down} alt=\"arrowdow\" style={{ width: \"17px\", height: \"17px\",  }} />\r\n\r\n                                    </div>\r\n                                    {this.state.selectDay ? (<Dropdown selectDay={this.selectDays} clock={false} closedrop={this.closedrop} />) : (<div></div>)}\r\n                                </div>\r\n                                \r\n                        \r\n                        </div>\r\n\r\n                        ):(\r\n                            <div></div>\r\n                            \r\n\r\n                        )}\r\n                        \r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\"><b>Email:</b></label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"email\"\r\n                                    validations={[email]}\r\n                                    placeholder={this.props.state.email}\r\n                                onChange={this.props.handleChange}\r\n                                name=\"email\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone\"><b>Phone Number:</b></label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"phone\"\r\n                                    validations={[phone]}\r\n                                    placeholder={this.props.state.phone}\r\n                                onChange={this.props.handleChange}\r\n                                name=\"phone\"\r\n                            />\r\n                        </div>\r\n                        {/*  */}\r\n                        {this.state.tooSmall?(<div>\r\n\r\n                            <div style={{ marginTop: \"20px\" }}>\r\n                                <button className=\"btn \" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"75px\", }} value=\"submit\" >Save</button>\r\n                        </div>\r\n                        </div>):(\r\n                            <div><h3 style={{marginTop:\"10px\"}}>Scheduled Teaching Block:</h3>\r\n                            <div className=\"form-group forfiles\" style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n                                    \r\n                                    <div>\r\n                                        <label htmlfor=\"time\"><b>Scheduled Time:</b></label>\r\n                                        <div\r\n    \r\n                                            className=\"form-control\"\r\n                                            id=\"time\"\r\n                                            onClick={this.selectTime}\r\n                                            style={{ width: \"120px\", height: \"30px\", flexDirection: \"row\", display: \"flex\" }}\r\n    \r\n    \r\n                                        >\r\n                                            <div style={{ width: \"90px\", alignSelf: \"center\" }}>{this.state.time}</div>\r\n                                            <img src={clock} alt=\"clock\" style={{ width: \"15px\", height: \"15px\", }} />\r\n    \r\n                                        </div>\r\n                                        {this.state.selectTime ? (<Dropdown selectDay={this.selectDays} clock={true} closedrop={this.closedrop} changeTime={this.changeTime}/>) : (<div></div>)}\r\n    \r\n    \r\n                                    </div>\r\n                                    <div>\r\n                                        <label htmlfor=\"day\"><b>Day: </b></label>\r\n                                        <div\r\n    \r\n                                            className=\"form-control\"\r\n                                            id=\"day\"\r\n                                            onClick={this.selectDay}\r\n                                            style={{ width: \"110px\", height: \"30px\", flexDirection: \"row\", display:\"flex\" }}\r\n    \r\n    \r\n                                        >\r\n                                            <div style={{width:\"90px\", alignSelf:\"center\"}}>{this.state.day}</div>\r\n                                            <img src={Down} alt=\"arrowdow\" style={{ width: \"17px\", height: \"17px\",  }} />\r\n    \r\n                                        </div>\r\n                                        {this.state.selectDay ? (<Dropdown selectDay={this.selectDays} clock={false} closedrop={this.closedrop} />) : (<div></div>)}\r\n                                    </div>\r\n                                    \r\n                                <div style={{opacity:\"0\"}}>\r\n                                    thanks!\r\n                                    </div>\r\n                            </div>\r\n                            <div style={{ marginTop: \"105px\" }}>\r\n                                <button className=\"btn \" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"75px\", }} value=\"submit\" >Save</button>\r\n                        </div>\r\n                            </div>\r\n\r\n\r\n                        )}\r\n                        \r\n                        \r\n                       \r\n                        \r\n                        </div>\r\n                        </Form>\r\n                        </div>\r\n                </div></div>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Studentedit;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/practice.js",["515"],"import React from \"react\";\r\nimport Checkd from \"./checkbox\";\r\n\r\n\r\n\r\nvar Checkboxnum = function (props) {\r\n\r\n    console.log(props);\r\n    var rows = [];\r\n    var prac = props.prac;\r\n    var moreprac = false;\r\n    for (let i = 0; i < props.checkboxes; i++) {\r\n        if (prac > 0) {\r\n            moreprac = true;\r\n        }\r\n        else {\r\n            moreprac = false;\r\n        }\r\n        let goal = { complete: false}\r\n\r\n        var day = {\r\n            0: \"mon\",\r\n            1: \"tues\",\r\n            2: \"wed\",\r\n            3: \"thur\",\r\n            4: \"fri\",\r\n            5: \"sat\",\r\n            6: \"sun\",\r\n        }\r\n        \r\n       \r\n      \r\n        rows.push(<Checkd props={props} flag={moreprac} checkboxes={true} time={props.times[day[i]]} />);\r\n        \r\n        \r\n        prac--;\r\n    }\r\n    \r\n    return (\r\n        rows.map((checkboxx, index) => \r\n\r\n            <div key={index} >\r\n                {checkboxx}\r\n            </div>\r\n        \r\n        )\r\n        )\r\n    \r\n};\r\n\r\nexport default Checkboxnum;\r\n","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/archive.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/practice2.js",["516"],"import React from \"react\";\r\nimport Checkd from \"./checkbox\";\r\n\r\n\r\n\r\nvar Checkboxnum2 = function (props) {\r\n    console.log(props);\r\n    var rows = [];\r\n    var prac = props.prac;\r\n    var moreprac = false;\r\n    var day = \"\";\r\n    var time = \"\";\r\n    for (let i = 0; i < props.checkboxes; i++) {\r\n        \r\n        if (i === 0) {\r\n            \r\n            day = \"M\";\r\n            moreprac = props.sync.mon;\r\n            if (props.times) {\r\n                time = props.times.mon;\r\n\r\n            }\r\n        }\r\n        if (i === 1) {\r\n            day = \"T\";\r\n            moreprac = props.sync.tues;\r\n            if (props.times) {\r\n                time = props.times.tues;\r\n\r\n            }\r\n\r\n        }\r\n        if (i === 2) {\r\n            day = \"W\";\r\n            moreprac = props.sync.wed;\r\n            if (props.times) {\r\n                time = props.times.wed;\r\n\r\n            }\r\n\r\n        }\r\n        if (i === 3) {\r\n            day = \"R\";\r\n            moreprac = props.sync.thur;\r\n            if (props.times) {\r\n                time = props.times.thur;\r\n\r\n            }\r\n\r\n        }\r\n        if (i === 4) {\r\n            day = \"F\";\r\n            moreprac = props.sync.fri;\r\n            if (props.times) {\r\n                time = props.times.fri;\r\n\r\n            }\r\n\r\n        }\r\n        if (i === 5) {\r\n            day = \"S\";\r\n            moreprac = props.sync.sat;\r\n            if (props.times) {\r\n                time = props.times.sat;\r\n\r\n            }\r\n        }\r\n        if (i === 6) {\r\n            day = \"s\";\r\n            moreprac = props.sync.sun;\r\n            if (props.times) {\r\n                time = props.times.sun;\r\n\r\n            }\r\n        }\r\n      \r\n        rows.push(<Checkd props={props} flag={moreprac} day={day} time={time}/>);\r\n        \r\n        \r\n        prac--;\r\n    }\r\n    \r\n    return (\r\n        rows.map((checkboxx, index) => \r\n\r\n            <div key={index} >\r\n                {checkboxx}\r\n            </div>\r\n        \r\n        )\r\n        )\r\n    \r\n};\r\n\r\nexport default Checkboxnum2;\r\n","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/notes.js",["517","518"],"import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport moment from 'moment';\r\nimport edit from \"./edit.png\";\r\nimport leaf from \"./leaf.png\";\r\n\r\n\r\nimport trash from \"./Trash1.png\";\r\n\r\n\r\n//not much here but functionality will be added for the goals.\r\nexport default class Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleted = this.deleted.bind(this);\r\n        this.AddNote = this.AddNote.bind(this);\r\n        this.sub = this.sub.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.editnotes = this.editnotes.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.saveEdit = this.saveEdit.bind(this);\r\n\r\n        \r\n        \r\n        \r\n        this.state = {\r\n            addnote: false,\r\n            description: \"\",\r\n            notes: this.props.notes,\r\n            id: 1,\r\n            descriptionHold: \"\",\r\n            edit: false,\r\n            noteId: \"\"\r\n        };\r\n    }\r\n\r\n    addnote(note) {\r\n        \r\n        \r\n    }\r\n    close() {\r\n        this.setState({\r\n            edit: false,\r\n            noteId: \"\",\r\n        })\r\n    }\r\n    saveEdit(note) {\r\n        let moments = moment().format('lll');\r\n        let notes = {};\r\n        if (note.tempId) {\r\n            let ar = [];\r\n            for (let i = 0; i < this.state.notes.length; i++) {\r\n\r\n\r\n                if (this.state.notes[i].tempId === note.tempId) {\r\n                    notes = {\r\n                        tempId: note.tempId,\r\n                        description: this.state.description,\r\n                        date: moments,\r\n\r\n                    }\r\n                    ar.push(notes);\r\n\r\n                }\r\n                else {\r\n                    ar.push(this.state.notes[i]);\r\n                }\r\n            }\r\n            this.setState({\r\n                notes: ar,\r\n            })\r\n            AuthService.changeNotes(this.props.student, note, notes );\r\n        }\r\n        else {\r\n            let ar = [];\r\n            for (let i = 0; i < this.state.notes.length; i++) {\r\n\r\n\r\n                if (this.state.notes[i]._id === note._id) {\r\n                    notes = {\r\n                        _id: note._id,\r\n                        description: this.state.description,\r\n                        date: moments,\r\n\r\n                    }\r\n                    ar.push(notes);\r\n\r\n                }\r\n                else {\r\n                    ar.push(this.state.notes[i]);\r\n                }\r\n            }\r\n            this.setState({\r\n                notes: ar,\r\n                \r\n\r\n            })\r\n            AuthService.changenote(this.props.student, notes);\r\n\r\n        }\r\n        this.close();\r\n    }\r\n\r\n    editnotes(note) {\r\n\r\n        if (note.tempId) {\r\n            this.setState({\r\n                edit: true,\r\n                noteId: note.tempId,\r\n                descriptionHold:note.description,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                edit: true,\r\n                noteId: note._id,\r\n                descriptionHold: note.description,\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    deleted(note) {\r\n        let id;\r\n        if (note.tempId) {\r\n            id = note.tempId;\r\n        }\r\n        else {\r\n            id = note._id;\r\n        }\r\n        if (note.tempId) {\r\n            let ar = [];\r\n\r\n            for (let i = 0; i < this.state.notes.length; i++) {\r\n                \r\n\r\n                if (this.state.notes[i].tempId === id) {\r\n\r\n                    \r\n                }\r\n                else {\r\n                    ar.push(this.state.notes[i]);\r\n                }\r\n            }\r\n            this.setState({\r\n                notes:ar,\r\n            })\r\n            AuthService.deleteNotes(this.props.student, note );\r\n        }\r\n\r\n        else {\r\n            let arr = [];\r\n            for (let i = 0; i < this.state.notes.length; i++) {\r\n                \r\n\r\n                if (this.state.notes[i]._id !== id) {\r\n                    arr.push(this.state.notes[i]);\r\n\r\n                }\r\n\r\n               \r\n            }\r\n            console.log(arr);\r\n\r\n            this.setState({\r\n                notes: arr,\r\n            })\r\n\r\n            AuthService.deletenote(this.props.student, id);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    AddNote() {\r\n        this.setState({\r\n            addnote:!this.state.addnote,\r\n        })\r\n    }\r\n\r\n    sub() {\r\n        let moments = moment().format('lll');\r\n\r\n        AuthService.addNote(this.props.student, this.state.description, moments);\r\n       \r\n        let ar = this.state.notes;\r\n\r\n        let noted = {\r\n            tempId: this.state.id,\r\n            date: moments,\r\n            description: this.state.description\r\n        }\r\n       \r\n        let id = this.state.id + 1\r\n\r\n        ar.push(noted);\r\n\r\n        this.setState({\r\n            notes: ar,\r\n            addnote: false,\r\n            description: \"\",\r\n            id: id\r\n        })\r\n\r\n        this.props.keep();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div >\r\n                \r\n\r\n                <div >\r\n                    \r\n                    \r\n              \r\n                    <div className=\"fill2\" style={{ height: \"275px\",  marginTop:\"15px\"}} >\r\n                        <div className=\"homeworkScroll fill2\">\r\n                            {this.props.notes ? (<div className=\"fill2\">\r\n                                {\r\n                                    this.state.notes.map((note, index) =>\r\n\r\n                                        <div className=\"checkboxstuff1a fill2\" key={index} style={{ marginLeft: \"8px\", marginBottom: \"4px\" }}>\r\n                                            {this.state.edit ? (<div className=\"checkboxstuff1a fill2\">\r\n\r\n                                                {this.state.noteId === note._id ? (<div className=\"columbized\" style={{ width: \"95%\" }}>\r\n                                                    <div className=\" fill2\">\r\n                                                        <p style={{ float: \"right\", marginTop: \"7px\"}} className=\"huv\" onClick={this.close}>X</p>\r\n                                                        </div>\r\n                                                    <div className=\"form-group\" >\r\n                                                    <textarea\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        rows=\"3\"\r\n                                                        id=\"description\"\r\n                                                        onChange={this.handleChange}\r\n                                                        placeholder={note.description}\r\n                                                        name=\"description\"\r\n                                                    ></textarea>\r\n                                                    </div>\r\n                                                    <div >\r\n                                                       \r\n                                                        \r\n                                                        <button style={{ height: \"45px\",  width: \"125px\", float:\"right\" }} className=\"btn  btn-block\" onClick={this.saveEdit.bind(this, note)}>Submit</button>\r\n\r\n                                                           \r\n                                                        \r\n                                                    </div>\r\n                                                </div>) : (\r\n\r\n                                                        <div className=\"fill2\">{this.state.noteId === note.tempId ?\r\n\r\n                                                            (<div className=\"columbized\" style={{ width: \"95%\" }}>\r\n                                                                <div className=\" fill2\">\r\n                                                                    <p style={{ float: \"right\", marginTop: \"7px\" }} className=\"huv\" onClick={this.close}>X</p>\r\n                                                                </div>\r\n                                                                <div className=\"form-group\" >\r\n                                                                    <textarea\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control\"\r\n                                                                        rows=\"3\"\r\n                                                                        id=\"description\"\r\n                                                                        onChange={this.handleChange}\r\n                                                                        placeholder={note.description}\r\n                                                                        name=\"description\"\r\n                                                                    ></textarea>\r\n                                                                </div>\r\n                                                                <div >\r\n\r\n\r\n                                                                    <button style={{  height: \"45px\",  width: \"125px\", float:\"right\" }} className=\"btn  btn-block\" onClick={this.saveEdit.bind(this, note)}>Submit</button>\r\n\r\n\r\n\r\n                                                                </div>\r\n                                                            </div>)\r\n                                                            :\r\n                                                            (<div className=\"checkboxstuff1a\">\r\n                                                                <div style={{width:\"80%\"}}>\r\n                                                                    <strong>{note.date}</strong>\r\n                                                                    <p className=\" \" style={{ marginRight: \"10px\" }}>{note.description}</p>\r\n                                                                </div>\r\n                                                                <div className=\"checkboxstuff3\" style={{marginRight:\"7px\"}}>\r\n                                                                    <div className=\"checkboxstuff3\">\r\n                                                                        <img\r\n                                                                            src={edit}\r\n                                                                            alt=\"edit\"\r\n                                                                            onClick={this.editnotes.bind(this, note)}\r\n                                                                            className=\"huv edit3\"\r\n                                                                            style={{ width: \"20px\", height: \"20px\", opacity: \".5\" }}\r\n\r\n\r\n                                                                        />\r\n                                                                        <img\r\n                                                                            src={trash}\r\n                                                                            alt=\"delete\"\r\n                                                                            onClick={this.deleted.bind(this, note)}\r\n                                                                            className=\"huv edit3\"\r\n                                                                            style={{ width: \"20px\", height: \"20px\", opacity: \".5\" }}\r\n\r\n\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                                \r\n                                                                )}\r\n\r\n\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                    )}\r\n                                            </div>) : (\r\n                                                    <div className=\"checkboxstuff1a\" >\r\n                                                        <div style={{ width: \"80%\" }}>\r\n                                            <strong>{note.date}</strong>\r\n                                                <p className=\" \" style={{ marginRight: \"10px\" }}>{note.description}</p>\r\n                                                        </div>\r\n                                                        <div className=\"checkboxstuff3\">\r\n                                                            <div className=\"checkboxstuff3forarchive\" style={{ marginRight: \"7px\" }}>\r\n                                                                <img\r\n                                                                    src={edit}\r\n                                                                    alt=\"edit\"\r\n                                                                    onClick={this.editnotes.bind(this, note)}\r\n                                                                    className=\"huv edit3\" \r\n                                                                    style={{ width: \"23px\", height: \"23px\", opacity: \".5\" }}\r\n\r\n\r\n                                                                />\r\n                                                                <img\r\n                                                                    src={trash}\r\n                                                                    alt=\"delete\"\r\n                                                                    onClick={this.deleted.bind(this, note)}\r\n                                                                className=\"huv edit3\" \r\n                                                                style={{ width: \"23px\", height: \"23px\", opacity: \".5\" }}\r\n\r\n\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                                }\r\n                                            \r\n\r\n                                            \r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>) : (\r\n                                    <div></div>)}\r\n                            <div>\r\n                                {this.state.addnote ? (<div>\r\n                                    <div>\r\n                                        <div className=\"form-group\" >\r\n                                            <div className=\" fill2 checkboxstuff1a\">\r\n                                                \r\n                                            \r\n                                                <label htmlFor=\"description\">note:</label>\r\n                                                <p style={{ float: \"right\", }} className=\"huv\" onClick={this.AddNote}>X</p>\r\n                                            </div>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                rows=\"3\"\r\n                                                id=\"description\"\r\n                                                onChange={this.handleChange}\r\n\r\n                                                name=\"description\"\r\n                                            ></textarea>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <button style={{ height: \"45px\",  width: \"125px\", float:\"right\" }} className=\"btn btn-block\" onClick={this.sub}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n                                        <img\r\n                                            src={leaf}\r\n                                            className=\"edita\"\r\n                                            style={{ width: \"25px\", height: \"25px\", opacity: \"1\" }}\r\n\r\n\r\n                                        />\r\n                                        <p className=\"rowss huv\">Submit</p>\r\n                                    </span></button>\r\n                                </div>\r\n                                ) : (\r\n                                        <div className=\"fill2\">\r\n                                            <button className=\"btn btn-block  centerized\" style={{ width: \"150px\" }} onClick={this.AddNote}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n                                                <img\r\n                                                    src={leaf}\r\n                                                    className=\"edita\"\r\n                                                    style={{ width: \"20px\", height: \"20px\", opacity: \".75\" }}\r\n\r\n\r\n                                                />\r\n                                                <h6>+</h6><h6 className=\"rowss huv\"> New Note</h6>\r\n                                            </span></button>\r\n                                        </div>\r\n                                    )}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        \r\n\r\n                    </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                        \r\n\r\n                    \r\n\r\n\r\n\r\n                </div>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n/*\r\n * \r\n * <div className=\"checkboxstuff \" style={{ marginBottom: \"10px\" }} >\r\n                        <div style={{ width: \"150px\", height: \"40px\" }}><button className=\"btn btn-block\" onClick={this.props.changenotes.bind(this, false)} style={{ marginRight: \"10px\", background: \"#C8CAE4\", color: \"#F0F2EF\", width: \"150px\", height: \"40px\" }}>Completed Goals</button></div>\r\n                        <div style={{ width: \"100px\", height: \"40px\" }}><button className=\"btn btn-block\" style={{ marginLeft: \"10px\", background: \"#696eb5\",  color: \"#F0F2EF\" }}  onClick={this.props.changenotes.bind(this, true)} >Notes</button></div>\r\n\r\n\r\n                    </div>*/","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/editAlltheHomework.js",["519"],"import React, { Component } from \"react\";\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass EditAlltheHomework extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.wrapperRef = React.createRef();\r\n            this.handleClickOutside = this.handleClickOutside.bind(this);\r\n            this.setWrapperRef = this.setWrapperRef;\r\n            this.handleChange = this.handleChange.bind(this);\r\n\r\n            this.state = {\r\n                yesnoWeektext: this.props.yesnoWeektext,\r\n                yesnoWeek: this.props.yesnoWeek,\r\n                yesnoDay: this.props.yesnoDay,\r\n                yesnoDaytext: this.props.yesnoDaytext,\r\n                justifyContent:\"\"\r\n            }\r\n\r\n        }\r\nhandleChange(event){\r\n    \r\n    const { name, value } = event.target\r\n    if(name===\"yesnoDaytext\"){\r\n        if(value!==\"\"){\r\n            this.setState({\r\n                yesnoDay: true\r\n            })\r\n            this.props.handleChange(event)\r\n        }\r\n    }\r\n    if(name===\"yesnoWeektext\"){\r\n        if(value!==\"\"){\r\n            this.setState({\r\n                yesnoWeek: true\r\n            })\r\n            this.props.handleChange(event)\r\n        }\r\n    }\r\n\r\n\r\n    this.setState({\r\n        [name]: value,\r\n    })\r\n\r\n    if (value === \"true\") {\r\n        this.setState({\r\n            [name]: true,\r\n        })\r\n    }\r\n    else if (value === \"false\") {\r\n        this.setState({\r\n            [name]: false,\r\n        })\r\n    }\r\n    this.props.handleChange(event);\r\n}\r\n        componentDidMount() {\r\n            if(parseInt(window.innerWidth) <= 550){\r\n                this.setState({ \r\n                    justifyContent: \"center\"\r\n                    \r\n                });\r\n            }\r\n            document.addEventListener('mousedown', this.handleClickOutside);\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            document.removeEventListener('mousedown', this.handleClickOutside);\r\n        }\r\n        handleClickOutside(event) {\r\n            if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n                this.props.handleClose();\r\n            }\r\n        }\r\n    \r\n \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup-box\" style={{ zIndex: \"1010\" }}>\r\n                <div className=\"card-container6abc1shedit \" style={{ zIndex: \"1010\", }} ref={this.wrapperRef} >\r\n                    <div className=\"homeworkScroll1\">\r\n                    <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                    <h3 style={{display:\"flex\", flexDirection:\"row\", justifyContent:this.state.justifyContent}}>Homework Tracking Options</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Display practice checkboxes with days of the week? </label>\r\n                        <select htmlfor=\"yesnoCheckboxsync\" onChange={this.props.handleChange} name=\"yesnoCheckboxsync\" id=\"yesnoCheckboxsync\">\r\n                        {this.props.yesnoCheckboxsync?(<option value={true}>Current: yes</option>):( <option value={false}>Current: no</option>)}\r\n                            <option value={true}>yes</option>\r\n                            <option value={false}>no</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Track streak of consecutive days practiced?</label>\r\n                        <select htmlfor=\"yesnoStreak\" onChange={this.props.handleChange}  name=\"yesnoStreak\" id=\"yesnoStreak\">\r\n                        {this.props.yesnoStreak?(<option value={true}>Current: yes</option>):( <option value={false}>Current: no</option>)}\r\n                            <option value={true}>yes</option>\r\n                            <option value={false}>no</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>How many days should the student practice?</label>\r\n                        <select htmlfor=\"yesnocheckboxes\" onChange={this.props.handleChange} name=\"yesnocheckboxes\" id=\"yesnocheckboxes\">\r\n                            <option value={this.props.yesnocheckboxes}>Current: {this.props.yesnocheckboxes}</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"6\">6</option>\r\n                            <option value=\"7\">7</option>\r\n                            <option value=\"0\">I Don't Want Checkboxes</option>\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    \r\n                         <div className=\"form-group\" >\r\n                         <label htmlFor=\"yesnoWeektext\">How much time should this student practice every week?</label>\r\n                         <input\r\n \r\n                             type=\"text\"\r\n                             className=\"form-control\"\r\n                             id=\"yesnoWeektext\"\r\n                             style={{ width: \"60px\" }}\r\n                             onChange={this.handleChange}\r\n                             name=\"yesnoWeektext\"\r\n                             value={this.state.yesnoWeektext}\r\n                         /><p>Minutes</p>\r\n \r\n \r\n                     </div>\r\n \r\n                    \r\n                   \r\n                    {/*<div className=\"form-group\">\r\n                        <label>Daily Time track</label>\r\n                        <select htmlfor=\"yesnoDay\" onChange={this.handleChange} name=\"yesnoDay\" id=\"yesnoDay\">\r\n                        {this.props.yesnoDay?(<option value={true}>Current: yes</option>):( <option value={false}>Current: no</option>)}\r\n                            <option value={true}>yes</option>\r\n                            <option value={false}>no</option>\r\n\r\n                        </select>\r\n                    </div>*/}\r\n                    \r\n                        <div className=\"form-group\" >\r\n                        <label htmlFor=\"yesnoDaytext\">How much time should this student practice every day?</label>\r\n                        <input\r\n\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"yesnoDaytext\"\r\n                            style={{ width: \"60px\" }}\r\n                            onChange={this.handleChange}\r\n                            name=\"yesnoDaytext\"\r\n                            value={this.state.yesnoDaytext}\r\n                        /><p>Minutes</p>\r\n\r\n\r\n                    </div>\r\n\r\n                    \r\n                    \r\n                    \r\n\r\n                    <div>\r\n                        \r\n                        <button style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} className=\"btn btn-block\" value=\"submit\" onClick={this.props.editAlltheHomework}>Save</button>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default EditAlltheHomework;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/goals.js",["520","521","522","523","524","525","526"],"import React, { Component } from \"react\";\r\nimport Progress from \"../components/progress.js\";\r\nimport Day from \"../components/moreProgress.js\";\r\nimport Points from \"../components/moreProgress.js\";\r\nimport GoalEdit from \"../components/diagoal.js\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Goal from \"../components/showgoal.js\";\r\nimport Checkedd2 from \"../components/checkbox2.js\";\r\nimport save from \"../components/save.png\";\r\nimport trash from \"./Trash1.png\";\r\nimport SetDay from \"../components/setday.js\";\r\nimport Short from \"../components/short.js\";\r\nimport moment from 'moment';\r\nimport leaf from \"./leaf.png\";\r\nimport edit from \"./edit.png\";\r\nimport EditProgress from \"../components/editProgress.js\";\r\nimport Starpointz from \"../components/starpointz.js\";\r\nimport Archiving from \"../components/archiving.js\";\r\n\r\n//not much here but functionality will be added for the goals.\r\nexport default class Goals extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.AddGoal = this.AddGoal.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.goalClose = this.goalClose.bind(this);\r\n        this.showGoal = this.showGoal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlegoal = this.handlegoal.bind(this);\r\n        this.completeGoal = this.completeGoal.bind(this);\r\n        this.cleartimepracticed = this.cleartimepracticed.bind(this);\r\n        this.cleartotaldays = this.cleartotaldays.bind(this);\r\n\r\n        \r\n        this.showMainGoal = this.showMainGoal.bind(this);\r\n        this.editalltheProgress = this.editalltheProgress.bind(this);\r\n\r\n        this.AddmainGoal = this.AddmainGoal.bind(this);\r\n        this.saveGoal = this.saveGoal.bind(this);\r\n        this.deleteGoal = this.deleteGoal.bind(this);\r\n        this.setday = this.setday.bind(this);\r\n        this.setDays = this.setDays.bind(this);\r\n        this.handlesetdayclose = this.handlesetdayclose.bind(this);\r\n        \r\n        this.handlegoalsClose = this.handlegoalsClose.bind(this);\r\n        this.editProgress = this.editProgress.bind(this);\r\n        this.handleProgressChange = this.handleProgressChange.bind(this);\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\r\n        \r\n        \r\n        \r\n        this.state = {\r\n            archiving:false,\r\n            progress: 5,\r\n            style: \"rotate(180deg)\",\r\n            Goal: false,\r\n            showGoal: false,\r\n            goals: [],\r\n            description: \"\",\r\n            goal: \"\",\r\n            date: \"\",\r\n            currentgoal: undefined,\r\n            mainGoal: \"\",\r\n            main:false,\r\n            setdays: false,\r\n            currentgoalforarchive: undefined,\r\n            currentmainforarchive: false,\r\n            \r\n\r\n\r\n            totalTime: this.props.totalTime,\r\n            totalDays: this.props.totalDays,\r\n            editProgress: false,\r\n            starPoints: this.props.starPoints,\r\n            timebool: this.props.timebool,\r\n            daysbool: this.props.daysbool,\r\n            temptimegoal: false,\r\n            temppracticegoal: false,\r\n            tempsmonths: \"\",\r\n            tempemonths: \"\",\r\n            temptsmonths: \"\",\r\n            temptemonths: \"\",\r\n            borderRight: \"1px solid gray\",\r\n            borderBottom: \"none\",\r\n            height:\"100%\",\r\n            width: \"70%\",\r\n            marginLeft: \"50px\",\r\n            alignself: \"\",\r\n            marginLeft1: \"23px\",\r\n            marginLeft2: \"35px\",\r\n            marginLeft3: \"75px\",\r\n            widthgoal: \"400px\",\r\n            widthgoals: \"420px\",\r\n            maingoal: {},\r\n\r\n            widthmgoal: \"450px\" \r\n\r\n        };\r\n    }\r\n    archiving(goal, main){\r\n        this.setState({\r\n            currentgoalforarchive: goal,\r\n            currentmainforarchive: main,\r\n            archiving: !this.state.archiving\r\n        })\r\n    }\r\n    updateWindowDimensions() {\r\n        var iOS = \r\n        /iPad|iPhone|iPod/.test(navigator.userAgent) &&\r\n        !window.MSStream;\r\n    \r\n    if(parseInt(window.innerWidth) <= 1200)\r\n    this.setState({ \r\n        widthgoal: \"200px\",\r\n        widthgoals: \"250px\",\r\n        widthmgoal: \"265px\" \r\n        \r\n       \r\n    });\r\n        if(parseInt(window.innerWidth) <= 1200){\r\n        this.setState({ \r\n            borderRight: \"none\",\r\n            borderBottom: \"1px solid gray\",\r\n            height:\"900px\",\r\n            width: \"100%\",\r\n            marginLeft: \"0px\",\r\n            alignself: \"center\",\r\n            marginLeft1: \"3px\",\r\n            marginLeft2: \"0px\",\r\n            marginLeft3: \"15px\"\r\n            \r\n           \r\n        });\r\n        }\r\n        if(parseInt(window.innerWidth) <= 1300){\r\n            if(parseInt(window.innerWidth) > 800){\r\n                this.setState({\r\n                    height:\"100%\",\r\n                })\r\n            }\r\n        if(parseInt(window.innerWidth) > 1200){\r\n        this.setState({ \r\n            borderRight: \"1px solid gray\",\r\n            borderBottom: \"none\",\r\n            height:\"100%\",\r\n            width: \"75%\",\r\n            marginLeft: \"0px\",\r\n            alignself: \"center\",\r\n            marginLeft1: \"0px\",\r\n            marginLeft2: \"5px\",\r\n            marginLeft3: \"35px\"\r\n            \r\n           \r\n        });}\r\n     }\r\n     if (iOS){\r\n        this.setState({ \r\n           \r\n            height:\"500px\",\r\n            \r\n            \r\n           \r\n        });\r\n    }\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n    editProgress() {\r\n        \r\n        this.setState({\r\n            editProgress: !this.state.editProgress,\r\n            \r\n\r\n            \r\n\r\n        })\r\n    }\r\n    cleartimepracticed(){\r\n        AuthService.cleartimepracticed(this.props.student)\r\n    }\r\n    cleartotaldays(){\r\n        AuthService.cleartotaldays(this.props.student)\r\n    }\r\n    editalltheProgress() {\r\n\r\n\r\n\r\n        AuthService.editalltheProgress(this.props.student,\r\n             \r\n\r\n            this.state.temptimegoal,\r\n            this.state.temppracticegoal,\r\n            this.state.totalTime,\r\n            this.state.totalDays,\r\n            this.state.starPoints,\r\n            this.state.tempsmonths,\r\n            this.state.tempemonths,\r\n            this.state.temptsmonths,\r\n            this.state.temptemonths,\r\n            this.state.daysbool,\r\n            this.state.timebool\r\n\r\n        )\r\n       // window.location.reload();\r\n       this.props.splashscreen()\r\n        \r\n        \r\n        \r\n\r\n    }\r\n    \r\n    \r\n     saveGoal(goal, main) {\r\n        \r\n        \r\n        AuthService.savegoal(this.props.student, this.state.currentgoalforarchive, this.state.currentmainforarchive);\r\n        let ar = [];\r\n        \r\n            \r\n            \r\n            \r\n            \r\n            for (let i =0; i<this.props.MainGoals.length; i ++){\r\n                if(this.props.MainGoals[i]._id !== this.state.currentgoalforarchive._id){\r\n                  \r\n                    ar.push(this.props.MainGoals[i])\r\n                }\r\n\r\n            }\r\n            console.log(ar);\r\n            AuthService.newMainGoal(\r\n                this.props.student,\r\n                ar\r\n            )\r\n\r\n           \r\n            \r\n        \r\n\r\n        //window.location.reload();\r\n        this.props.splashscreen()\r\n\r\n    }\r\n\r\n    deleteGoal(goal, main) {\r\n\r\n        console.log(goal);\r\n        let ar = [];\r\n        if (main){\r\n            \r\n            \r\n            \r\n            \r\n            for (let i =0; i<this.props.MainGoals.length; i ++){\r\n                if(this.props.MainGoals[i]._id !== goal._id){\r\n                  \r\n                    ar.push(this.props.MainGoals[i])\r\n                }\r\n\r\n            }\r\n           \r\n            \r\n        }\r\n        else{\r\n           \r\n           \r\n            for (let i =0; i<this.props.MainGoals.length; i++){\r\n                let maingoal = this.props.MainGoals[i];\r\n                let arr = [];\r\n                for (let i =0; i < maingoal.mainGoal.goals.length; i++){\r\n                    console.log(maingoal.mainGoal.goals[i]._id)\r\n                    console.log(goal._id)\r\n                    if( maingoal.mainGoal.goals[i]._id !== goal._id){\r\n                        \r\n                        arr.push(maingoal.mainGoal.goals[i])\r\n                    }\r\n\r\n                }\r\n                maingoal.mainGoal.goals= arr;\r\n                ar.push(maingoal);\r\n               \r\n\r\n            }\r\n           \r\n            \r\n        }\r\n        console.log(ar);\r\n         AuthService.newMainGoal(\r\n         this.props.student,\r\n         ar\r\n     )\r\n    this.props.splashscreen();\r\n        //AuthService.deletegoal(this.props.student, goal, main);\r\n        //window.location.reload();\r\n        //this.props.splashscreen()\r\n    }\r\n    async completeGoal(check, goal,main) {\r\n        let sp = \"\";\r\n        let pass = false;\r\n        let npass= false;\r\n        let daystreak= parseInt(this.props.daystreak)+1;\r\n        let complete = moment().subtract(10, 'days').calendar();\r\n        if(check){\r\n        \r\n            if(main){\r\n                \r\n                sp = (parseInt(this.props.starpoints) + (100* daystreak)).toString();\r\n    \r\n                \r\n                if (parseInt(sp) >= parseInt(this.props.spGoal)){\r\n                    pass= true;\r\n    \r\n                }\r\n            }\r\n            else{\r\n                sp =(parseInt(this.props.starpoints) + (50* daystreak)).toString();\r\n    \r\n                \r\n                if (parseInt(sp) >= parseInt(this.props.spGoal)){\r\n                    pass= true;\r\n    \r\n                }\r\n            }\r\n            let goalcomplete;\r\n        let ar=[]\r\n        if(main){\r\n            \r\n            goalcomplete = {mainGoal:{\r\n                complete: true,\r\n                completed: complete,\r\n                title: goal.mainGoal.title,\r\n                description: goal.mainGoal.description,\r\n                goals: goal.mainGoal.goals\r\n\r\n            },\r\n            _id: goal._id\r\n        }\r\n        \r\n        for(let i =0;i< this.props.MainGoals.length; i++){\r\n            if(this.props.MainGoals[i]._id===goalcomplete._id){\r\n                ar.push(goalcomplete)\r\n            }\r\n            else{\r\n                ar.push(this.props.MainGoals[i])\r\n            }\r\n            \r\n        }\r\n        }\r\n        else{\r\n            goalcomplete={\r\n                complete: true,\r\n                completed: complete,\r\n                title: goal.title,\r\n                description: goal.description,\r\n                _id: goal._id\r\n            }\r\n            for (let i =0; i<this.props.MainGoals.length; i++){\r\n                let maingoal = this.props.MainGoals[i];\r\n                let arr = [];\r\n                for (let i =0; i < maingoal.mainGoal.goals.length; i++){\r\n                    if( maingoal.mainGoal.goals[i]._id === goal._id){\r\n                        arr.push(goalcomplete)\r\n                    }\r\n                    else{\r\n                        arr.push(maingoal.mainGoal.goals[i])\r\n                    }\r\n\r\n                }\r\n                maingoal.mainGoal.goals= arr;\r\n                ar.push(maingoal);\r\n               \r\n\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n\r\n        AuthService.newMainGoal(\r\n            this.props.student,\r\n            ar\r\n        )\r\n        }\r\n        else{\r\n            if(main){\r\n                \r\n                sp = (parseInt(this.props.starpoints) - (100* daystreak)).toString();\r\n    \r\n                \r\n                if (parseInt(sp) <= 0){\r\n                    pass= true;\r\n                    npass=true;\r\n    \r\n                }\r\n            }\r\n            else{\r\n                console.log(this.props.starpoints)\r\n                sp =(parseInt(this.props.starpoints) - (50* daystreak)).toString();\r\n                console.log(sp)\r\n    \r\n                \r\n                if (parseInt(sp) <= 0){\r\n                    pass= true;\r\n                    npass=true;\r\n    \r\n                }\r\n            }\r\n            let goalcomplete;\r\n        let ar=[]\r\n        if(main){\r\n            console.log(goal);\r\n            goalcomplete = {mainGoal:{\r\n                complete: false,\r\n                completed: \"\",\r\n                title: goal.mainGoal.title,\r\n                description: goal.mainGoal.description,\r\n                goals: goal.mainGoal.goals\r\n\r\n            },\r\n            _id: goal._id\r\n        }\r\n        console.log(goalcomplete);\r\n        \r\n        for(let i =0;i< this.props.MainGoals.length; i++){\r\n            if(this.props.MainGoals[i]._id===goalcomplete._id){\r\n                ar.push(goalcomplete)\r\n            }\r\n            else{\r\n                ar.push(this.props.MainGoals[i])\r\n            }\r\n            \r\n        }\r\n        }\r\n        else{\r\n            goalcomplete={\r\n                complete: false,\r\n                completed: \"\",\r\n                title: goal.title,\r\n                description: goal.description,\r\n                _id: goal._id\r\n            }\r\n            for (let i =0; i<this.props.MainGoals.length; i++){\r\n                let maingoal = this.props.MainGoals[i];\r\n                let arr = [];\r\n                for (let i =0; i < maingoal.mainGoal.goals.length; i++){\r\n                    if( maingoal.mainGoal.goals[i]._id === goal._id){\r\n                        arr.push(goalcomplete)\r\n                    }\r\n                    else{\r\n                        arr.push(maingoal.mainGoal.goals[i])\r\n                    }\r\n\r\n                }\r\n                maingoal.mainGoal.goals= arr;\r\n                ar.push(maingoal);\r\n               \r\n\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n        console.log(ar);\r\n\r\n         AuthService.newMainGoal(\r\n            this.props.student,\r\n            ar\r\n        )\r\n        }\r\n\r\n\r\n        \r\n        \r\n        console.log(check, main, complete, sp, this.props.level, this.props.spGoal, pass, npass)\r\n        console.log(goal)\r\n        \r\n\r\n            AuthService.goalStatusChange(\r\n                this.props.student,\r\n                check,\r\n                goal,\r\n                main,\r\n                complete,\r\n                this.props.level, sp, this.props.spGoal, pass, npass\r\n                \r\n\r\n             )\r\n       \r\n        //window.location.reload();\r\n        this.props.splashscreen()\r\n\r\n    }\r\n\r\n    handleProgressChange(event) {\r\n        const { name, value } = event.target\r\n        if (value !== \"no change\") {\r\n\r\n\r\n            if (name === \"tempstartpoints\") {\r\n                this.setState({\r\n                    spisedited: true,\r\n                })\r\n            }\r\n            if (name === \"temppracticegoal\") {\r\n                this.setState({\r\n                    goalisedited: true,\r\n                })\r\n            }\r\n            if (name === \"tempdays\") {\r\n                if (value !== \"\") {\r\n                    this.setState({\r\n                        dayisedited: true,\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        dayisedited: false,\r\n                    })\r\n                }\r\n            }\r\n            if (name === \"tempsmonths\") {\r\n                this.setState({\r\n                    smonthsisedited: true,\r\n                })\r\n            }\r\n            if (name === \"tempemonths\") {\r\n                this.setState({\r\n                    emonthsisedited: true,\r\n                })\r\n            }\r\n            if (name === \"temptimegoal\") {\r\n                this.setState({\r\n                    timegoalisedited: true,\r\n                })\r\n            }\r\n            if (name === \"tempmin\") {\r\n                if (value !== \"\") {\r\n                    this.setState({\r\n                        minisedited: true,\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        minisedited: false,\r\n                    })\r\n                }\r\n            }\r\n            if (name === \"temptsmonths\") {\r\n                this.setState({\r\n                    tsmonthsisedited: true,\r\n                })\r\n            }\r\n            if (name === \"temptemonths\") {\r\n                this.setState({\r\n                    temonthsisedited: true,\r\n                })\r\n            }\r\n            \r\n            this.handleChange(event);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n\r\n        if (value === \"true\") {\r\n            this.setState({\r\n                [name]: true,\r\n            })\r\n        }\r\n        else if (value === \"false\") {\r\n            this.setState({\r\n                [name]: false,\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    AddmainGoal(e) {\r\n        this.setState({\r\n            Goal: true,\r\n            main: true,\r\n        });\r\n\r\n    }\r\n    setday(e) {\r\n        this.setState({\r\n            setdays: true,\r\n        });\r\n\r\n    }\r\n    AddGoal(goal) {\r\n        console.log(goal);\r\n        this.setState({\r\n            Goal: true,\r\n            maingoal: goal\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    showGoal(goal) {\r\n        this.setState({\r\n            showGoal: true,\r\n            currentgoal: goal,\r\n        });\r\n\r\n    }\r\n    showMainGoal(maingoal) {\r\n        console.log(maingoal);\r\n        let main = {\r\n            main: maingoal.mainGoal,\r\n            _id: maingoal._id,\r\n            maingoal: true,\r\n        }\r\n        this.setState({\r\n            showGoal: true,\r\n            currentgoal: main,\r\n            \r\n        });\r\n\r\n    }\r\n    \r\n    goalClose() {\r\n        this.setState({\r\n            Goal: false,\r\n            main: false,\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            showGoal: false,\r\n        });\r\n    }\r\n\r\n  \r\n    handlegoalsClose(id, title, description, main) {\r\n        \r\n        let ar = [];\r\n        if (main){\r\n            \r\n            \r\n            let maingoal = {\r\n                title: title,\r\n                description: description,\r\n                complete: this.state.currentgoal.complete,\r\n                completed: this.state.currentgoal.completed,\r\n                goals: this.state.currentgoal.main.goals\r\n            }\r\n            console.log(maingoal);\r\n            for (let i =0; i<this.props.MainGoals.length; i ++){\r\n                if(this.props.MainGoals[i]._id === this.state.currentgoal._id){\r\n                    let newmain={\r\n                        mainGoal: maingoal,\r\n                        id: this.state.currentgoal._id\r\n                    }\r\n                    ar.push(newmain)\r\n                }\r\n                else{\r\n                    ar.push(this.props.MainGoals[i])\r\n                }\r\n\r\n            }\r\n           \r\n            \r\n        }\r\n        else{\r\n            let goal = {\r\n                title: title,\r\n                description: description,\r\n                complete: this.state.currentgoal.complete,\r\n                completed: this.state.currentgoal.completed,\r\n                _id: this.state.currentgoal._id\r\n            }\r\n            console.log(this.props.MainGoals);\r\n            console.log(goal);\r\n\r\n            for (let i =0; i<this.props.MainGoals.length; i++){\r\n                let maingoal = this.props.MainGoals[i];\r\n                let arr = [];\r\n                for (let i =0; i < maingoal.mainGoal.goals.length; i++){\r\n                    if( maingoal.mainGoal.goals[i]._id === goal._id){\r\n                        arr.push(goal)\r\n                    }\r\n                    else{\r\n                        arr.push(maingoal.mainGoal.goals[i])\r\n                    }\r\n\r\n                }\r\n                maingoal.mainGoal.goals= arr;\r\n                ar.push(maingoal);\r\n               \r\n\r\n            }\r\n           \r\n            \r\n        }\r\n        AuthService.newMainGoal(\r\n        this.props.student,\r\n        ar\r\n    )\r\n    this.props.splashscreen()\r\n\r\n        /*\r\n        let goalz = {\r\n            title: title,\r\n            description: description,\r\n            _id: this.state.currentgoal._id\r\n        }\r\n        if (main) {\r\n            AuthService.AddGoals\r\n                (\r\n                    this.props.student,\r\n                    true,\r\n                    goalz\r\n                );\r\n\r\n        }\r\n        else {\r\n\r\n            let ar = [];\r\n            for (let i = 0; i < this.props.goals.length; i++) {\r\n                if (this.props.goals[i]._id === goalz._id) {\r\n\r\n                    ar.push(goalz);\r\n                }\r\n                else {\r\n                    ar.push(this.props.goals[i]);\r\n\r\n                }\r\n\r\n            }\r\n            console.log(ar);\r\n\r\n            AuthService.AddGoals\r\n                (\r\n                    this.props.student,\r\n                    false,\r\n                    ar\r\n                );\r\n        }\r\n        //window.location.reload();\r\n        \r\n\r\n        */\r\n\r\n\r\n\r\n    };\r\n    async handlegoal() {\r\n\r\n        let goal;\r\n        let ar = []\r\n        \r\n       \r\n        if(this.state.main){\r\n             ar = this.props.MainGoals;\r\n\r\n         goal =  {mainGoal: {\r\n            title: this.state.goal,\r\n            description: this.state.description,\r\n            complete: false,\r\n            completed: \"\",\r\n            goals:[]\r\n         }\r\n        }\r\n         \r\n            \r\n\r\n        \r\n        ar.push(  goal);\r\n\r\n    }\r\n    \r\n    else{\r\n        \r\n        goal = {\r\n            title: this.state.goal,\r\n            description: this.state.description,\r\n            complete: false,\r\n            completed: \"\",\r\n            \r\n            \r\n\r\n        }\r\n        let maingoal= this.state.maingoal;\r\n        maingoal.goals.push(goal)\r\n        \r\n        for(let i = 0; i < this.props.MainGoals.length; i++){\r\n            if (this.props.MainGoals[i].title ===this.state.maingoal.title){\r\n                ar.push(maingoal);\r\n\r\n            }\r\n            else{\r\n                ar.push(this.props.MainGoals[i])\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n    AuthService.newMainGoal(\r\n        this.props.student,\r\n        ar\r\n    )\r\n    \r\n    \r\n        \r\n\r\n\r\n        /*AuthService.AddGoal(\r\n            this.props.student,\r\n            this.state.main,\r\n            this.state.goal,\r\n            this.state.description,\r\n            this.state.date,\r\n        );\r\n*/\r\n        this.setState({\r\n            main: false,\r\n        });\r\n       \r\n\r\n\r\n        //window.location.reload();\r\n        this.props.splashscreen()\r\n    }\r\n    handlesetdayclose() {\r\n        this.setState({\r\n            setdays: false,\r\n        });\r\n    }\r\n\r\n    setDays() {\r\n        this.setState({\r\n            setdays: false,\r\n            \r\n        });\r\n        AuthService.updateSetDays(this.props.student, this.state.totalDays);\r\n        this.props.splashscreen()\r\n        //window.location.reload();\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"fill1\">\r\n                \r\n                \r\n                {this.state.editProgress && (<EditProgress state={this.state} editalltheProgress={this.editalltheProgress} handleChange={this.handleProgressChange} handleClose={this.editProgress}\r\n                    tempstartpoints={ this.state.tempstartpoints }\r\n                    temppracticegoal={this.state.temppracticegoal}\r\n                    cleartimepracticed={this.cleartimepracticed}\r\n                    cleartotaldays={this.cleartotaldays}\r\n                    temptimegoal={this.state.temptimegoal}\r\n                    \r\n\r\n                />)}\r\n\r\n                                {this.state.archiving && (<Archiving handlegoal={this.saveGoal}  handleClose={this.archiving} main={this.state.main } />)}\r\n\r\n\r\n                {this.state.Goal && (<GoalEdit handlegoal={this.handlegoal} handleChange={this.handleChange} handleClose={this.goalClose} main={this.state.main } />)}\r\n                {this.state.showGoal && (<Goal Goal={this.state.currentgoal} handleClose={this.handleClose} role=\"teacher\" handletheclose={this.handlegoalsClose} />)}\r\n\r\n                {this.state.setdays && (<SetDay handleChange={this.handleChange} handleClose={this.setDays} handleClosing={this.handlesetdayclose} />)}\r\n                \r\n                    <div className=\"fill1\" >\r\n                        {this.props.tooSmall?(<div className=\" fill1 checkboxstuff3tocolumn\" style={{ padding: \"5px\" }}>\r\n\r\n                        {this.props.iwantgoals? (\r\n\r\n                        <div className=\"centerized\" style={{height:this.state.height, borderRight: this.state.borderRight, width: this.state.width, borderBottom: this.state.borderBottom }}>\r\n                            \r\n                                \r\n                                <div style={{ width: \"100%\", height: \"100%\" }} ><div className=\"centerizeaa \" >\r\n                                    <div style={{ display: \"flex\", width: \"100%\", flexDirection: \"row\", justifyContent: \"space-between\", marginBottom: \"15px\" }}><h2 >Progress</h2> <div className=\"huv\" onClick={this.editProgress}>\r\n                                       \r\n                                        <img\r\n                                            src={edit}\r\n                                            alt=\"edit\"\r\n                                            style={{width: \"25px\", height: \"25px\", marginRight: \"10px\"}}\r\n\r\n                                        />\r\n                                    </div></div>\r\n                                    {this.props.tooSmall?(<div>\r\n                                        {this.props.thousand?(<div style={{ marginBottom: \"7px\", marginTop: \"20px\", marginLeft: \"20px\" }}>\r\n                                       \r\n                                       <Progress goals={this.props.MainGoals} />\r\n                                       \r\n                                       \r\n                                       \r\n                                       \r\n                                       <div className=\"checkboxstuff1a \" style={{ width: \"95%\" }}>\r\n                                       <div style={{ marginTop: \"23px\" }}><b>Goal Progress</b></div>\r\n                                       {this.props.timebool?(\r\n                                           <div style={{ flexDirection: \"colomn\" }}>\r\n                                           <div className=\"centerized\"> {this.props.finalTotalTime===\"\"?(<div style={{marginRight:\"5px\"}}>0 </div>):(<div style={{marginRight:\"5px\"}}>\r\n                                           {!this.props.finalTotalTime?(<div>0 </div>):(<div>{this.props.finalTotalTime}</div>)}\r\n                                                </div>)}  \r\n                                           \r\n                                       \r\n                                           min</div>\r\n                                       \r\n                                           \r\n                                           <div><b>Time Practiced</b></div>\r\n                                       \r\n                                       </div>\r\n                                       ):(<div></div>)}\r\n                                       \r\n                                       {this.props.daysbool?(\r\n                                           <div style={{ flexDirection: \"colomn\" }}>\r\n                                       \r\n                                           <div className=\"centerized\">{this.props.totalDaysPracticed===\"\"?(<div>0</div>):(<div>{this.props.totalDaysPracticed}</div>)}</div>\r\n                                       \r\n                                       <div> <b>Practice Days</b> </div>\r\n                                       </div>\r\n                                       ):(<div></div>)}\r\n                                                                                   </div>\r\n                                       </div>):(<div style={{ marginBottom: \"7px\", marginTop: \"20px\", display:\"flex\", flexDirection:\"column\", alignItems:\"center\" }}>\r\n                                            <Progress goals={this.props.MainGoals} />\r\n                                            <div style={{  display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", width:\"100%\", marginTop: \"10px\" }}>\r\n                                       \r\n                                        \r\n                                        \r\n                                        {this.props.daysbool?(\r\n                                            <div style={{ flexDirection: \"colomn\" }}>\r\n\r\n                                            <div className=\"centerized\">{this.props.totalDaysPracticed===\"\"?(<div>0</div>):(<div>{this.props.totalDaysPracticed}</div>)}</div>\r\n\r\n                                        <div> <b>Practice Days</b> </div>\r\n                                        </div>\r\n                                        ):(<div></div>)}\r\n                                        {this.props.timebool?(\r\n                                            <div style={{ flexDirection: \"colomn\" }}>\r\n                                            <div className=\"centerized\"> {this.props.finalTotalTime===\"\"?(<div style={{marginRight:\"5px\"}}>0 </div>):(<div style={{marginRight:\"5px\"}}>\r\n                                            {!this.props.finalTotalTime?(<div>0 </div>):(<div>{this.props.finalTotalTime}</div>)}\r\n                                                 </div>)}  \r\n                                            \r\n\r\n                                            min</div>\r\n\r\n                                            \r\n                                            <div><b>Time Practiced</b></div>\r\n\r\n                                        </div>\r\n                                        \r\n                                        ):(<div></div>)}\r\n                                        </div>\r\n                                        \r\n                                        \r\n                                    \r\n\r\n                                    \r\n                                </div>)}\r\n\r\n                                        \r\n                                \r\n\r\n\r\n\r\n                                </div>):(\r\n\r\n<div style={{ marginBottom: \"7px\", marginTop: \"20px\", marginLeft: \"20px\" }}>\r\n                                       \r\n<Progress goals={this.props.goals} main={this.props.main} />\r\n\r\n\r\n\r\n\r\n<div className=\"checkboxstuff1a \" style={{ width: \"95%\" }}>\r\n<div style={{ marginTop: \"23px\" }}><b>Goal Progress</b></div>\r\n{this.props.timebool?(\r\n    <div style={{ flexDirection: \"colomn\" }}>\r\n    <div className=\"centerized\"> {this.props.finalTotalTime===\"\"?(<div style={{marginRight:\"5px\"}}>0 </div>):(<div style={{marginRight:\"5px\"}}>\r\n    {!this.props.finalTotalTime?(<div>0 </div>):(<div>{this.props.finalTotalTime}</div>)}\r\n         </div>)}  \r\n    \r\n\r\n    min</div>\r\n\r\n    \r\n    <div><b>Time Practiced</b></div>\r\n\r\n</div>\r\n):(<div></div>)}\r\n\r\n{this.props.daysbool?(\r\n    <div style={{ flexDirection: \"colomn\" }}>\r\n\r\n    <div className=\"centerized\">{this.props.totalDaysPracticed===\"\"?(<div>0</div>):(<div>{this.props.totalDaysPracticed}</div>)}</div>\r\n\r\n<div> <b>Practice Days</b> </div>\r\n</div>\r\n):(<div></div>)}\r\n                                            </div>\r\n</div>\r\n                                    )}\r\n                                   \r\n                                    \r\n                                    {this.props.starPoints?(\r\n                                                                            <div style={{ width: \"200px\", marginLeft: this.state.marginLeft, alignSelf:this.state.alignself }}><Points day={false} role={this.props.role} starpoints={this.props.starpoints} spGoal={this.props.spGoal}/> </div>\r\n\r\n                                    ):(<div></div>)}\r\n\r\n                                    \r\n                                    {this.props.totalDays !== \"\" ?\r\n                                                            (<div style={{ marginLeft: this.state.marginLeft , width: \"200px\", alignSelf:this.state.alignself }}>\r\n\r\n                                                            <Day role={this.props.role} day={true} daysPracticed={this.props.daysPracticed} totalDays={this.props.totalDays} setDays={this.setDays} open={this.setday} />\r\n                                                                </div>\r\n                                                                )\r\n                                                        \r\n                                                                :\r\n\r\n                                                            (<div className=\"centerized\">\r\n                                                            \r\n                                                                <div style={{opacity:\"0\"}}>space</div> \r\n                                                                \r\n                                                            \r\n                                                        </div>)}\r\n\r\n                                                        {this.props.totalTime !== \"\" ?(\r\n                                                           <div style={{ marginLeft: this.state.marginLeft , width: \"200px\", alignSelf:this.state.alignself, }}>\r\n\r\n                                                           <Day role={this.props.role} time={true} timePracticed={this.props.timePracticed} totaltime={this.props.totalTime} setDays={this.setDays} open={this.setday} /></div>\r\n\r\n                                                        ):(<div></div>)}\r\n                                                        \r\n                                        \r\n                                    \r\n                                    \r\n                                </div></div>\r\n                                \r\n                            \r\n                                </div>\r\n                                    ):(\r\n\r\n                        <div className=\" columbized4 fill1\" >\r\n\r\n\r\n\r\n\r\n\r\n                            {\r\n                                this.props.main ?\r\n                                    (\r\n                                        <div className=\"columbized fill1\">\r\n                                            <div style={{ marginBottom: \"15px\", marginLeft: this.state.marginLeft1, marginTop: \"0px\", display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n\r\n                                            <h2 >Goals</h2>\r\n                                            <button  className=\"btn  btn-block\" value=\"submit\" onClick={this.AddmainGoal} style={{ background: \"#696eb5\", height: \"30px\", color: \"#F0F2EF\", width: \"100px\", display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>+ Goal</button>\r\n\r\n                                            </div>\r\n                                            {this.props.MainGoals ?(<div className=\"homeworkScroll1\" >\r\n                                            {this.props.MainGoals.map((main, index) =>\r\n                                            <div key={index} >\r\n                                                <div >\r\n                        <div className=\"checkboxstuff2\" style={{display:'flex', flexDirection:\"row\", justifyContent:\"space-between\",}}>\r\n                            <div style={{display:'flex', flexDirection:\"row\", alignItems:\"center\"}}>\r\n                        <Checkedd2 goal={main} goalStatusChange={this.completeGoal} main={true}  />\r\n                        \r\n                        {this.props.tooSmall?(<h4 style={{marginBottom:\"10px\"}} className=\"huv rowss\" onClick={this.showMainGoal.bind(this, main)}><span>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</span></h4>):(<h2 className=\"huv rowss\" onClick={this.showMainGoal.bind(this, main)}><div>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h2>)}\r\n                        </div>\r\n                        <div className=\"checkboxstuff1\">\r\n                                <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={save}\r\n                                        alt=\"download\"\r\n                                        onClick={this.archiving.bind(this, main, true )}\r\n\r\n                                        //onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={trash}\r\n                                        alt=\"delete\"\r\n                                        onClick={this.deleteGoal.bind(this, main, true)}\r\n                                        style={{ width: \"15px\", height: \"15px\", opacity: \".5\" }}\r\n\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n\r\n\r\n                    </div>\r\n                    </div>\r\n                    {main.mainGoal.goals.map((goal, index) =>\r\n                    <div className=\"checkboxstuff1 \" key={index}  style={{ width: this.state.widthgoal, marginLeft: \"30px\" }} >\r\n                        \r\n\r\n                    <div className=\"checkboxstuff2\">\r\n                        <div >\r\n                            <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                        </div>\r\n                        <div className=\"huv rowss\" style={{marginBottom:\"7px\"}} onClick={this.showGoal.bind(this, goal)}><div>{goal.title.length > 35 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                    </div>\r\n                    <div className=\"\" style={{width:\"25%\", flexDirection:\"row\", justifyContent:\"flex-end\", display:\"flex\", }}>\r\n                        <div className=\"huv edit3b1\">\r\n                            {/* <img\r\n                                src={save}\r\n                                alt=\"download\"\r\n                                onClick={this.archiving.bind(this, goal, false)}\r\n                                //onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                            /> */}\r\n                        </div>\r\n                        <div className=\"huv edit3b1\">\r\n                            <img\r\n                                src={trash}\r\n                                alt=\"delete\"\r\n                                onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                    \r\n                    )}\r\n                    <div className=\"btn  btn-block\" style={{ margin:\"0 auto\", marginTop: \"10px\",  display:'flex', flexDirection:'row', justifyContent:'center'}} value=\"submit\" onClick={this.AddGoal.bind(this, main.mainGoal)}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n<img\r\n        src={leaf}\r\n        className=\"edita\"\r\n        style={{width:\"20px\", height:\"20px\"}}\r\n\r\n/>\r\n\r\n<p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n</span></div>\r\n                    </div>\r\n                        \r\n                        )\r\n                        }\r\n                            \r\n                            </div>):(<div></div>)}\r\n                                            {/* <div className=\"checkboxstuff1 \" style={{ marginLeft: this.state.marginLeft2, width: this.state.widthmgoal }} >\r\n\r\n                                                <div className=\"checkboxstuff2\">\r\n                                                    <Checkedd2 goal={this.props.main} goalStatusChange={this.completeGoal} main={true} />\r\n                                                    {this.props.tooSmall?(\r\n\r\n<h4 className=\"huv rowss\" onClick={this.showMainGoal}><div>{this.props.main.title.length > 25 ? (<div><Short word={this.props.main.title} wordtype=\"Goal\" /></div>) : (<div>{this.props.main.title}</div>)}</div></h4>\r\n\r\n                                                    ):(\r\n\r\n<h2 className=\"huv rowss\" onClick={this.showMainGoal}><div>{this.props.main.title.length > 25 ? (<div><Short word={this.props.main.title} wordtype=\"Goal\" /></div>) : (<div>{this.props.main.title}</div>)}</div></h2>\r\n\r\n                                                    )}\r\n\r\n\r\n\r\n                                                </div>\r\n                                                {this.props.role === \"student\" ? (\r\n                                                    <div >\r\n                                                    </div>) : (<div className=\"checkboxstuff1\">\r\n                                                        <div className=\"huv edit3b\">\r\n                                                            <img\r\n                                                                src={save}\r\n                                                                alt=\"download\"\r\n                                                                onClick={this.archiving.bind(this, this.props.main, true )}\r\n\r\n                                                                //onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                                            />\r\n                                                        </div>\r\n\r\n\r\n                                                        <div className=\"huv edit3b\">\r\n                                                            <img\r\n                                                                src={trash}\r\n                                                                alt=\"delete\"\r\n                                                                onClick={this.deleteGoal.bind(this, this.props.main, true)}\r\n                                                                style={{ width: \"15px\", height: \"15px\", opacity: \".5\" }}\r\n\r\n\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>)}\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\" fill2\" >\r\n                                                <div style={{ marginLeft: this.state.marginLeft3 }}>\r\n                                                    {this.props.role === \"student\" ? (<div style={{ height: \"265px\" }}>\r\n                                                        {this.props.goals ? (<div className=\"homeworkScroll1\">\r\n                                                            {\r\n                                                                this.props.goals.map((goal, index) =>\r\n\r\n                                                                    <div className=\"checkboxstuff1 \" key={index} >\r\n\r\n                                                                        <div className=\"checkboxstuff2\">\r\n                                                                            <div >\r\n                                                                                <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                                            </div>\r\n                                                                            <div className=\"huv rowss\" style={{marginBottom:\"10px\"}}  onClick={this.showGoal.bind(this, goal)}> <div >{goal.title.length > 14 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                                                                        </div>\r\n\r\n\r\n                                                                    </div>\r\n                                                                )\r\n                                                            }\r\n                                                        </div>) : (\r\n                                                                <div></div>)}\r\n\r\n                                                    </div>) : (<div style={{ height: \"275px\", width:this.state.widthgoals}}>{this.props.goals ? (<div className=\"homeworkScroll1\">\r\n                                                        {\r\n                                                            this.props.goals.map((goal, index) =>\r\n\r\n                                                                <div className=\"checkboxstuff1 \" key={index} style={{ width: this.state.widthgoal }} >\r\n\r\n                                                                    <div className=\"checkboxstuff2\">\r\n                                                                        <div >\r\n                                                                            <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                                        </div>\r\n                                                                        <div className=\"huv rowss\" style={{marginBottom:\"7px\"}} onClick={this.showGoal.bind(this, goal)}><div>{goal.title.length > 14 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                                                                    </div>\r\n                                                                    <div className=\"\" style={{width:\"25%\", flexDirection:\"row\", justifyContent:\"flex-end\", display:\"flex\", }}>\r\n                                                                        <div className=\"huv edit3b1\">\r\n                                                                            <img\r\n                                                                                src={save}\r\n                                                                                alt=\"download\"\r\n                                                                                onClick={this.archiving.bind(this, goal, false)}\r\n                                                                                //onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                        <div className=\"huv edit3b1\">\r\n                                                                            <img\r\n                                                                                src={trash}\r\n                                                                                alt=\"delete\"\r\n                                                                                onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                                                                style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                        <div>\r\n                                                            {this.props.role === \"student\" ? (<div></div>) : (<div style={{ width: \"230px\" }}>\r\n                                                            {this.props.goals.length >=5?(<div></div>):(\r\n\r\n<div className=\"btn  btn-block\" style={{ marginTop: \"10px\", marginLeft: \"20px\" }} value=\"submit\" onClick={this.AddGoal}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n<img\r\n        src={leaf}\r\n        className=\"edita\"\r\n        style={{width:\"20px\", height:\"20px\"}}\r\n\r\n/>\r\n\r\n<p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n</span></div>\r\n                                                            )}\r\n                                                                \r\n                                                            </div>)}\r\n\r\n                                                        </div>\r\n                                                       \r\n                                                    </div>) : (\r\n                                                            <div></div>)}</div>)}\r\n                                                             \r\n\r\n\r\n                                                </div>\r\n\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n                                    ) : (\r\n                                        <div className=\"fill1\">{this.props.goals.length!==0?(\r\n                                            <div className=\"columbized fill2\">\r\n\r\n                                            \r\n                                            <div style={{ marginBottom: \"15px\", marginLeft: \"23px\", marginTop: \"5px\",  display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n\r\n                                            <h2 >Goals</h2>\r\n                                            <button style={{ background: \"#696eb5\", height: \"45px\", color: \"#F0F2EF\", width: \"150px\", }} className=\"btn  btn-block centerized\" value=\"submit\" onClick={this.AddmainGoal}>+ Goal</button>\r\n\r\n                                            </div>\r\n                                            {this.props.MainGoals ?(<div className=\"homeworkScroll1\" >\r\n                                            {this.props.MainGoals.map((main, index) =>\r\n                                            <div key={index} >\r\n                                                <div >\r\n                        <div className=\"checkboxstuff2\" style={{display:'flex', flexDirection:\"row\", justifyContent:\"space-between\", width:\"90%\"}}>\r\n                            <div style={{display:'flex', flexDirection:\"row\"}}>\r\n                        <Checkedd2 goal={main} goalStatusChange={this.completeGoal} main={true}  />\r\n                        \r\n                        {this.props.tooSmall?(<h4 className=\"huv rowss\" onClick={this.showMainGoal.bind(this, main)}><div>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h4>):(<h2 className=\"huv rowss\" onClick={this.showMainGoal.bind(this, main)}><div>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h2>)}\r\n                        </div>\r\n                        <div className=\"checkboxstuff1\">\r\n                                <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={save}\r\n                                        alt=\"download\"\r\n                                        onClick={this.archiving.bind(this, main, true )}\r\n\r\n                                        //onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={trash}\r\n                                        alt=\"delete\"\r\n                                        onClick={this.deleteGoal.bind(this, main, true)}\r\n                                        style={{ width: \"15px\", height: \"15px\", opacity: \".5\" }}\r\n\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n\r\n\r\n                    </div>\r\n                    </div>\r\n                    {main.mainGoal.goals.map((goal, index) =>\r\n                    <div className=\"checkboxstuff1 \" key={index}  style={{ width: this.state.widthgoal, marginLeft: \"68px\" }} >\r\n                        \r\n\r\n                    <div className=\"checkboxstuff2\">\r\n                        <div >\r\n                            <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                        </div>\r\n                        <div className=\"huv rowss\" style={{marginBottom:\"7px\"}} onClick={this.showGoal.bind(this, goal)}><div>{goal.title.length > 35 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                    </div>\r\n                    <div className=\"\" style={{width:\"25%\", flexDirection:\"row\", justifyContent:\"flex-end\", display:\"flex\", }}>\r\n                        <div className=\"huv edit3b1\">\r\n                            {/* <img\r\n                                src={save}\r\n                                alt=\"download\"\r\n                                onClick={this.archiving.bind(this, goal, false)}\r\n                                //onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                            /> */}\r\n                        </div>\r\n                        <div className=\"huv edit3b1\">\r\n                            <img\r\n                                src={trash}\r\n                                alt=\"delete\"\r\n                                onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                    \r\n                    )}\r\n                    <div className=\"btn  btn-block\" style={{ marginTop: \"10px\", marginLeft: \"90px\" }} value=\"submit\" onClick={this.AddGoal.bind(this, main.mainGoal)}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n<img\r\n        src={leaf}\r\n        className=\"edita\"\r\n        style={{width:\"20px\", height:\"20px\"}}\r\n\r\n/>\r\n\r\n<p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n</span></div>\r\n                    </div>\r\n                        \r\n                        )\r\n                        }\r\n                            \r\n                            </div>):(<div></div>)}\r\n\r\n                                           \r\n\r\n                                            {/* <div className=\" fill2\" >\r\n                                                <div style={{ marginLeft: \"75px\" }}>\r\n                                                    {this.props.role === \"student\" ? (<div style={{ height: \"265px\" }}>\r\n                                                        {this.props.goals ? (<div className=\"homeworkScroll1\">\r\n                                                            {\r\n                                                                this.props.goals.map((goal, index) =>\r\n\r\n                                                                    <div className=\"checkboxstuff1 rowss\" key={index} >\r\n\r\n                                                                        <div className=\"checkboxstuff2\">\r\n                                                                            <div >\r\n                                                                                <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                                            </div>\r\n                                                                            <div className=\"huv\" onClick={this.showGoal.bind(this, goal)}> <div>{goal.title.length > 14 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                                                                        </div>\r\n\r\n\r\n                                                                    </div>\r\n                                                                )\r\n                                                            }\r\n                                                        </div>) : (\r\n                                                                <div></div>)}\r\n\r\n                                                    </div>) : (<div style={{ height: \"275px\" }}>{this.props.goals ? (<div className=\"homeworkScroll1\">\r\n                                                        {\r\n                                                            this.props.goals.map((goal, index) =>\r\n\r\n                                                                <div className=\"checkboxstuff1 rowss\" key={index} style={{ width: this.state.widthgoals}} >\r\n\r\n                                                                    <div className=\"checkboxstuff2\">\r\n                                                                        <div >\r\n                                                                            <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                                        </div>\r\n                                                                        <div className=\"huv\" onClick={this.showGoal.bind(this, goal)}><div>{goal.title.length > 14 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                                                                    </div>\r\n                                                                    <div className=\"checkboxstuff1\" style={{marginBottom:\"5px\"}}>\r\n                                                                        <div className=\"huv edit3b\">\r\n                                                                            <img\r\n                                                                                src={save}\r\n                                                                                alt=\"download\"\r\n                                                                                onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                                                                //onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                        <div className=\"huv edit3b\">\r\n                                                                            <img\r\n                                                                                src={trash}\r\n                                                                                alt=\"delete\"\r\n                                                                                onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                                                                style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                        <div>\r\n                                                            {this.props.role === \"student\" ? (<div></div>) : (<div style={{ width: \"270px\" }}>\r\n                                                                <div className=\"btn  btn-block\" style={{ marginTop: \"10px\", marginLeft: \"20px\" }} value=\"submit\" onClick={this.AddGoal}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n                                                                    <img\r\n                                                                            src={leaf}\r\n                                                                            className=\"edita\"\r\n                                                                            style={{width:\"20px\", height:\"20px\"}}\r\n\r\n                                                                    />\r\n                                                                    <p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n                                                                </span></div>\r\n                                                            </div>)}\r\n\r\n                                                        </div>\r\n                                                    </div>) : (\r\n                                                            <div></div>)}</div>)}\r\n\r\n\r\n                                                </div>\r\n\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                        ):(\r\n\r\n                                            <div className=\" centerized\" style={{ height: \"100%\" }}>\r\n                                            <button style={{ background: \"#696eb5\", height: \"45px\", color: \"#F0F2EF\", width: \"150px\", }} className=\"btn  btn-block centerized\" value=\"submit\" onClick={this.AddmainGoal}>Add New Goals</button>\r\n                                        </div>\r\n                                        )}\r\n                                        </div>\r\n                                      \r\n                                    )\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n{this.props.goals.length >= 5?(<div style={{width:\"100%\", display:\"flex\", flexDirection:\"row\", justifyContent:\"flex-end\" }}><div className=\"btn  btn-block\" style={{ marginTop: \"0px\",  position:\"absolute\",   }} value=\"submit\" onClick={this.AddGoal}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n<img\r\n        src={leaf}\r\n        className=\"edita\"\r\n        style={{width:\"20px\", height:\"20px\"}}\r\n\r\n/>\r\n\r\n<p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n</span></div> </div>):(<div></div>\r\n                                                        )}\r\n\r\n                        </div>\r\n                                    )}\r\n                                    </div>):(<div className=\" fill1 checkboxstuff3tocolumn\" style={{ padding: \"5px\" }}>\r\n                                        \r\n\r\n<div className=\"centerized\" style={{height:this.state.height, borderRight: this.state.borderRight, width: this.state.width, borderBottom: this.state.borderBottom }}>\r\n    \r\n        \r\n        <div style={{ width: \"100%\", height: \"100%\" }} ><div className=\"centerizeaa \" >\r\n            <div style={{ display: \"flex\", width: \"100%\", flexDirection: \"row\", justifyContent: \"space-between\", marginBottom: \"15px\" }}><h2 >Progress</h2> <div className=\"huv\" onClick={this.editProgress}>\r\n               \r\n                <img\r\n                    src={edit}\r\n                    alt=\"edit\"\r\n                    style={{width: \"25px\", height: \"25px\", marginRight: \"10px\"}}\r\n\r\n                />\r\n            </div></div>\r\n            {this.props.tooSmall?(<div>\r\n                {this.props.thousand?(<div style={{ marginBottom: \"7px\", marginTop: \"20px\", marginLeft: \"20px\" }}>\r\n               \r\n               <Progress goals={this.props.MainGoals} />\r\n               \r\n               \r\n               \r\n               \r\n               <div className=\"checkboxstuff1a \" style={{ width: \"95%\" }}>\r\n               <div style={{ marginTop: \"23px\" }}><b>Goal Progress</b></div>\r\n               {this.props.timebool?(\r\n                   <div style={{ flexDirection: \"colomn\" }}>\r\n                   <div className=\"centerized\"> {this.props.finalTotalTime===\"\"?(<div style={{marginRight:\"5px\"}}>0 </div>):(<div style={{marginRight:\"5px\"}}>\r\n                   {!this.props.finalTotalTime?(<div>0 </div>):(<div>{this.props.finalTotalTime}</div>)}\r\n                        </div>)}  \r\n                   \r\n               \r\n                   min</div>\r\n               \r\n                   \r\n                   <div><b>Time Practiced</b></div>\r\n               \r\n               </div>\r\n               ):(<div></div>)}\r\n               \r\n               {this.props.daysbool?(\r\n                   <div style={{ flexDirection: \"colomn\" }}>\r\n               \r\n                   <div className=\"centerized\">{this.props.totalDaysPracticed===\"\"?(<div>0</div>):(<div>{this.props.totalDaysPracticed}</div>)}</div>\r\n               \r\n               <div> <b>Practice Days</b> </div>\r\n               </div>\r\n               ):(<div></div>)}\r\n                                                           </div>\r\n               </div>):(<div style={{ marginBottom: \"7px\", marginTop: \"20px\", display:\"flex\", flexDirection:\"column\", alignItems:\"center\" }}>\r\n                    <Progress goals={this.props.MainGoals} />\r\n                    <div style={{  display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", width:\"100%\", marginTop: \"10px\" }}>\r\n               \r\n                \r\n                \r\n                {this.props.daysbool?(\r\n                    <div style={{ flexDirection: \"colomn\" }}>\r\n\r\n                    <div className=\"centerized\">{this.props.totalDaysPracticed===\"\"?(<div>0</div>):(<div>{this.props.totalDaysPracticed}</div>)}</div>\r\n\r\n                <div> <b>Practice Days</b> </div>\r\n                </div>\r\n                ):(<div></div>)}\r\n                {this.props.timebool?(\r\n                    <div style={{ flexDirection: \"colomn\" }}>\r\n                    <div className=\"centerized\"> {this.props.finalTotalTime===\"\"?(<div style={{marginRight:\"5px\"}}>0 </div>):(<div style={{marginRight:\"5px\"}}>\r\n                    {!this.props.finalTotalTime?(<div>0 </div>):(<div>{this.props.finalTotalTime}</div>)}\r\n                         </div>)}  \r\n                    \r\n\r\n                    min</div>\r\n\r\n                    \r\n                    <div><b>Time Practiced</b></div>\r\n\r\n                </div>\r\n                \r\n                ):(<div></div>)}\r\n                </div>\r\n                \r\n                \r\n            \r\n\r\n            \r\n        </div>)}\r\n\r\n                \r\n        \r\n\r\n\r\n\r\n        </div>):(\r\n\r\n<div style={{ marginBottom: \"7px\", marginTop: \"20px\", marginLeft: \"20px\" }}>\r\n               \r\n<Progress goals={this.props.MainGoals}/>\r\n\r\n\r\n\r\n\r\n<div className=\"checkboxstuff1a \" style={{ width: \"95%\" }}>\r\n<div style={{ marginTop: \"23px\" }}><b>Goal Progress</b></div>\r\n{this.props.timebool?(\r\n<div style={{ flexDirection: \"colomn\" }}>\r\n<div className=\"centerized\"> {this.props.finalTotalTime===\"\"?(<div style={{marginRight:\"5px\"}}>0 </div>):(<div style={{marginRight:\"5px\"}}>\r\n{!this.props.finalTotalTime?(<div>0 </div>):(<div>{this.props.finalTotalTime}</div>)}\r\n</div>)}  \r\n\r\n\r\nmin</div>\r\n\r\n\r\n<div><b>Time Practiced</b></div>\r\n\r\n</div>\r\n):(<div></div>)}\r\n\r\n{this.props.daysbool?(\r\n<div style={{ flexDirection: \"colomn\" }}>\r\n\r\n<div className=\"centerized\">{this.props.totalDaysPracticed===\"\"?(<div>0</div>):(<div>{this.props.totalDaysPracticed}</div>)}</div>\r\n\r\n<div> <b>Practice Days</b> </div>\r\n</div>\r\n):(<div></div>)}\r\n                    </div>\r\n</div>\r\n            )}\r\n           \r\n            \r\n            {this.props.starPoints?(\r\n                                                    <div style={{ width: \"200px\", marginLeft: this.state.marginLeft, alignSelf:this.state.alignself }}><Points day={false} role={this.props.role} starpoints={this.props.starpoints} spGoal={this.props.spGoal}/> </div>\r\n\r\n            ):(<div></div>)}\r\n\r\n            \r\n            {this.props.totalDays !== \"\" ?\r\n                                    (<div style={{ marginLeft: this.state.marginLeft , width: \"200px\", alignSelf:this.state.alignself }}>\r\n\r\n                                    <Day role={this.props.role} day={true} daysPracticed={this.props.daysPracticed} totalDays={this.props.totalDays} setDays={this.setDays} open={this.setday} />\r\n                                        </div>\r\n                                        )\r\n                                \r\n                                        :\r\n\r\n                                    (<div className=\"centerized\">\r\n                                    \r\n                                        <div style={{opacity:\"0\"}}>space</div> \r\n                                        \r\n                                    \r\n                                </div>)}\r\n\r\n                                {this.props.totalTime !== \"\" ?(\r\n                                   <div style={{ marginLeft: this.state.marginLeft , width: \"200px\", alignSelf:this.state.alignself, }}>\r\n\r\n                                   <Day role={this.props.role} time={true} timePracticed={this.props.timePracticed} totaltime={this.props.totalTime} setDays={this.setDays} open={this.setday} /></div>\r\n\r\n                                ):(<div></div>)}\r\n                                \r\n                \r\n            \r\n            \r\n        </div></div>\r\n        \r\n    \r\n        </div>\r\n            \r\n\r\n<div className=\" columbized4 fill1\" >\r\n\r\n\r\n\r\n\r\n\r\n    {\r\n        this.props.main ?\r\n            (\r\n                <div className=\"columbized fill1\">\r\n                     <div style={{marginBottom: \"15px\", marginLeft: this.state.marginLeft1, marginTop: \"0px\",   display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n\r\n<h2 >Goals</h2>\r\n<button style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"150px\", }} className=\"btn  btn-block \" value=\"submit\" onClick={this.AddmainGoal}>+ Goal</button>\r\n\r\n</div>\r\n\r\n                    <div>\r\n\r\n                        \r\n                        \r\n                    </div>\r\n\r\n\r\n\r\n                    {this.props.MainGoals ?(<div className=\"homeworkScroll1\" >\r\n                                            {this.props.MainGoals.map((main, index) =>\r\n                                            <div key={index} >\r\n                                                <div >\r\n                        <div className=\"checkboxstuff2\" style={{display:'flex', flexDirection:\"row\", justifyContent:\"space-between\", width:\"90%\"}}>\r\n                            <div style={{display:'flex', flexDirection:\"row\"}}>\r\n                        <Checkedd2 goal={main} goalStatusChange={this.completeGoal} main={true}  />\r\n                        \r\n                        {this.props.tooSmall?(<h4 className=\"huv rowss\" onClick={this.showMainGoal.bind(this, main)}><div>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h4>):(<h2 className=\"huv rowss\" onClick={this.showMainGoal.bind(this, main)}><div>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h2>)}\r\n                        </div>\r\n                        <div className=\"checkboxstuff1\">\r\n                                <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={save}\r\n                                        alt=\"download\"\r\n                                        onClick={this.archiving.bind(this, main, true )}\r\n\r\n                                        //onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={trash}\r\n                                        alt=\"delete\"\r\n                                        onClick={this.deleteGoal.bind(this, main, true)}\r\n                                        style={{ width: \"15px\", height: \"15px\", opacity: \".5\" }}\r\n\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n\r\n\r\n                    </div>\r\n                    </div>\r\n                    {main.mainGoal.goals.map((goal, index) =>\r\n                    <div className=\"checkboxstuff1 \" key={index}  style={{ width: this.state.widthgoal, marginLeft: \"68px\" }} >\r\n                        \r\n\r\n                    <div className=\"checkboxstuff2\">\r\n                        <div >\r\n                            <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                        </div>\r\n                        <div className=\"huv rowss\" style={{marginBottom:\"7px\"}} onClick={this.showGoal.bind(this, goal)}><div>{goal.title.length > 35 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                    </div>\r\n                    <div className=\"\" style={{width:\"25%\", flexDirection:\"row\", justifyContent:\"flex-end\", display:\"flex\", }}>\r\n                        <div className=\"huv edit3b1\">\r\n                            {/* <img\r\n                                src={save}\r\n                                alt=\"download\"\r\n                                onClick={this.archiving.bind(this, goal, false)}\r\n                                //onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                            /> */}\r\n                        </div>\r\n                        <div className=\"huv edit3b1\">\r\n                            <img\r\n                                src={trash}\r\n                                alt=\"delete\"\r\n                                onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                    \r\n                    )}\r\n                    <div className=\"btn  btn-block\" style={{ marginTop: \"10px\", marginLeft: \"90px\" }} value=\"submit\" onClick={this.AddGoal.bind(this, main.mainGoal)}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n<img\r\n        src={leaf}\r\n        className=\"edita\"\r\n        style={{width:\"20px\", height:\"20px\"}}\r\n\r\n/>\r\n\r\n<p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n</span></div>\r\n                    </div>\r\n                        \r\n                        )\r\n                        }\r\n                            \r\n                            </div>):(<div></div>)}\r\n                            {/**\r\n\r\n                    {this.props.MainGoals?(\r\n                    <div>\r\n\r\n                        {this.props.MainGoals.map((main, index) =>\r\n                        <div key={index} className=\"checkboxstuff2\">\r\n                        <Checkedd2 goal={main.mainGoal} goalStatusChange={this.completeGoal} main={true} />\r\n                        {this.props.tooSmall?(<h4 className=\"huv rowss\" onClick={this.showMainGoal}><div>{main.mainGoal.title.length > 25 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h4>):(<h2 className=\"huv rowss\" onClick={this.showMainGoal}><div>{main.mainGoal.title.length > 25 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h2>)}\r\n                        <div className=\"checkboxstuff1\">\r\n                                <div className=\"huv edit3b\">\r\n                                    <img\r\n                                        src={save}\r\n                                        alt=\"download\"\r\n                                        onClick={this.archiving.bind(this, this.props.main, true )}\r\n\r\n                                        //onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"huv edit3b\">\r\n                                    <img\r\n                                        src={trash}\r\n                                        alt=\"delete\"\r\n                                        onClick={this.deleteGoal.bind(this, this.props.main, true)}\r\n                                        style={{ width: \"15px\", height: \"15px\", opacity: \".5\" }}\r\n\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                    </div>\r\n                        \r\n                        )\r\n                        }\r\n                        </div>):(<div></div>)}\r\n                   \r\n\r\n                    <div className=\"checkboxstuff1 \" style={{ marginLeft: this.state.marginLeft2, width: this.state.widthmgoal }} >\r\n\r\n                        <div className=\"checkboxstuff2\">\r\n                            <Checkedd2 goal={this.props.main} goalStatusChange={this.completeGoal} main={true} />\r\n                            {this.props.tooSmall?(\r\n\r\n<h4 className=\"huv rowss\" onClick={this.showMainGoal}><div>{this.props.main.title.length > 25 ? (<div><Short word={this.props.main.title} wordtype=\"Goal\" /></div>) : (<div>{this.props.main.title}</div>)}</div></h4>\r\n\r\n                            ):(\r\n\r\n<h2 className=\"huv rowss\" onClick={this.showMainGoal}><div>{this.props.main.title.length > 25 ? (<div><Short word={this.props.main.title} wordtype=\"Goal\" /></div>) : (<div>{this.props.main.title}</div>)}</div></h2>\r\n\r\n                            )}\r\n\r\n\r\n\r\n                        </div>\r\n                        {this.props.role === \"student\" ? (\r\n                            <div >\r\n                            </div>) : (<div className=\"checkboxstuff1\">\r\n                                <div className=\"huv edit3b\">\r\n                                    <img\r\n                                        src={save}\r\n                                        alt=\"download\"\r\n                                        onClick={this.archiving.bind(this, this.props.main, true )}\r\n\r\n                                        //onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"huv edit3b\">\r\n                                    <img\r\n                                        src={trash}\r\n                                        alt=\"delete\"\r\n                                        onClick={this.deleteGoal.bind(this, this.props.main, true)}\r\n                                        style={{ width: \"15px\", height: \"15px\", opacity: \".5\" }}\r\n\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>)}\r\n\r\n                    </div>\r\n                     \r\n\r\n\r\n                    <div className=\" fill2\" >\r\n                        <div style={{ marginLeft: this.state.marginLeft3 }}>\r\n                            {this.props.role === \"student\" ? (<div style={{ height: \"265px\" }}>\r\n                                {this.props.goals ? (<div className=\"homeworkScroll1\">\r\n                                    {\r\n                                        this.props.goals.map((goal, index) =>\r\n\r\n                                            <div className=\"checkboxstuff1 \" key={index} >\r\n\r\n                                                <div className=\"checkboxstuff2\">\r\n                                                    <div >\r\n                                                        <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                    </div>\r\n                                                    <div className=\"huv rowss\" style={{marginBottom:\"10px\"}}  onClick={this.showGoal.bind(this, goal)}> <div >{goal.title.length > 14 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>) : (\r\n                                        <div></div>)}\r\n\r\n                            </div>) : (<div style={{ height: \"275px\", width:this.state.widthgoals}}>{this.props.goals ? (<div className=\"homeworkScroll1\">\r\n                                {\r\n                                    this.props.goals.map((goal, index) =>\r\n\r\n                                        <div className=\"checkboxstuff1 \" key={index} style={{ width: this.state.widthgoal }} >\r\n\r\n                                            <div className=\"checkboxstuff2\">\r\n                                                <div >\r\n                                                    <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                </div>\r\n                                                <div className=\"huv rowss\" style={{marginBottom:\"7px\"}} onClick={this.showGoal.bind(this, goal)}><div>{goal.title.length > 14 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                                            </div>\r\n                                            <div className=\"\" style={{width:\"25%\", flexDirection:\"row\", justifyContent:\"flex-end\", display:\"flex\", }}>\r\n                                                <div className=\"huv edit3b1\">\r\n                                                    <img\r\n                                                        src={save}\r\n                                                        alt=\"download\"\r\n                                                        onClick={this.archiving.bind(this, goal, false)}\r\n                                                        //onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"huv edit3b1\">\r\n                                                    <img\r\n                                                        src={trash}\r\n                                                        alt=\"delete\"\r\n                                                        onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                                        style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                <div>\r\n                                    {this.props.role === \"student\" ? (<div></div>) : (<div style={{ width: \"230px\" }}>\r\n                                    {this.props.goals.length >=5?(<div></div>):(\r\n\r\n<div className=\"btn  btn-block\" style={{ marginTop: \"10px\", marginLeft: \"20px\" }} value=\"submit\" onClick={this.AddGoal}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n<img\r\nsrc={leaf}\r\nclassName=\"edita\"\r\nstyle={{width:\"20px\", height:\"20px\"}}\r\n\r\n/>\r\n\r\n<p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n</span></div>\r\n                                    )}\r\n                                        \r\n                                    </div>)}\r\n\r\n                                </div>\r\n                               \r\n                            </div>) : (\r\n                                    <div></div>)}</div>)}\r\n                                     \r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                */}\r\n\r\n                </div>\r\n\r\n            ) : (\r\n                <div className=\"fill1\">{this.props.goals.length!==0?(\r\n                    <div className=\"columbized fill2\">\r\n\r\n                    <h2 style={{ marginBottom: \"15px\", marginLeft: \"23px\", marginTop: \"5px\", }}>Goals</h2>\r\n\r\n                   \r\n\r\n                    <div className=\" fill2\" >\r\n                        <div style={{ marginLeft: \"75px\" }}>\r\n                            {this.props.role === \"student\" ? (<div style={{ height: \"265px\" }}>\r\n                                {this.props.goals ? (<div className=\"homeworkScroll1\">\r\n                                    {\r\n                                        this.props.goals.map((goal, index) =>\r\n\r\n                                            <div className=\"checkboxstuff1 rowss\" key={index} >\r\n\r\n                                                <div className=\"checkboxstuff2\">\r\n                                                    <div >\r\n                                                        <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                    </div>\r\n                                                    <div className=\"huv\" onClick={this.showGoal.bind(this, goal)}> <div>{goal.title.length > 35 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>) : (\r\n                                        <div></div>)}\r\n\r\n                            </div>) : (<div style={{ height: \"275px\" }}>{this.props.goals ? (<div className=\"homeworkScroll1\">\r\n                                {\r\n                                    this.props.goals.map((goal, index) =>\r\n\r\n                                        <div className=\"checkboxstuff1 rowss\" key={index} style={{ width: this.state.widthgoals}} >\r\n\r\n                                            <div className=\"checkboxstuff2\">\r\n                                                <div >\r\n                                                    <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                </div>\r\n                                                <div className=\"huv\" onClick={this.showGoal.bind(this, goal)}><div>{goal.title.length > 35 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                                            </div>\r\n                                            <div className=\"checkboxstuff1\" style={{marginBottom:\"5px\"}}>\r\n                                                <div className=\"huv edit3b\">\r\n                                                    <img\r\n                                                        src={save}\r\n                                                        alt=\"download\"\r\n                                                        onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                                        //onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"huv edit3b\">\r\n                                                    <img\r\n                                                        src={trash}\r\n                                                        alt=\"delete\"\r\n                                                        onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                                        style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                <div>\r\n                                    {this.props.role === \"student\" ? (<div></div>) : (<div style={{ width: \"270px\" }}>\r\n                                        <div className=\"btn  btn-block\" style={{ marginTop: \"10px\", marginLeft: \"20px\" }} value=\"submit\" onClick={this.AddGoal}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n                                            <img\r\n                                                    src={leaf}\r\n                                                    className=\"edita\"\r\n                                                    style={{width:\"20px\", height:\"20px\"}}\r\n\r\n                                            />\r\n                                            <p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n                                        </span></div>\r\n                                    </div>)}\r\n\r\n                                </div>\r\n                            </div>) : (\r\n                                    <div></div>)}</div>)}\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                ):(\r\n\r\n                    <div className=\" centerized\" style={{ height: \"100%\" }}>\r\n                    <button style={{ background: \"#696eb5\", height: \"45px\", color: \"#F0F2EF\", width: \"150px\", }} className=\"btn  btn-block centerized\" value=\"submit\" onClick={this.AddmainGoal}>Add New Goals</button>\r\n                </div>\r\n                )}\r\n                </div>\r\n              \r\n            )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n{this.props.goals.length >= 5?(<div style={{width:\"100%\", display:\"flex\", flexDirection:\"row\", justifyContent:\"flex-end\" }}><div className=\"btn  btn-block\" style={{ marginTop: \"0px\",  position:\"absolute\",   }} value=\"submit\" onClick={this.AddGoal}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n<img\r\nsrc={leaf}\r\nclassName=\"edita\"\r\nstyle={{width:\"20px\", height:\"20px\"}}\r\n\r\n/>\r\n\r\n<p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n</span></div> </div>):(<div></div>\r\n                                )}\r\n\r\n</div>\r\n            \r\n\r\n\r\n\r\n                                    </div>)}\r\n\r\n\r\n\r\n                    </div>\r\n\r\n              \r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n            \r\n        );\r\n    }\r\n}","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/student_array.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/newuser.js",["527","528"],"import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\n\r\n\r\nexport default class Student_routes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.logOut = this.logOut.bind(this);\r\n\r\n\r\n\r\n        this.state = {\r\n         \r\n\r\n        };\r\n\r\n    }\r\n    logOut() {\r\n        AuthService.logout();\r\n        window.location.reload();\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <div>Please login with the new password.</div>\r\n                    <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\", marginTop:\"25px\"}}><button onClick={this.logOut} className=\"btn  btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\",  }}>\r\n                                Login</button></div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/existingEmail.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/dialoghelp.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/studentList.js",["529"],"import React, { Component } from \"react\"\r\nimport \"./components.css\";\r\nimport edit from \"./edit.png\";\r\nimport trash from \"./Trash1.png\";\r\nimport Checkboxnum from \"./practice.js\";\r\nimport Progress from \"./progress.js\";\r\nimport ShowHomework from \"../components/showHomework\";\r\nimport Checkboxnum2 from \"../components/practice2.js\";\r\nimport Splashscreen  from \"./splashscreen.js\";\r\n\r\n//import AuthService from \"../services/auth.service\";\r\n\r\n//simply sets state and maps every student found in the current list of students to a button that is clickable.\r\nexport default class funcbotton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.showHomework = this.showHomework.bind(this);\r\n        this.hideHomeworkClose = this.hideHomeworkClose.bind(this);\r\n        this.show = this.show.bind(this);\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            \r\n            picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            showHomework: false,\r\n            zindex: \"0\",\r\n            currenthw: undefined,\r\n            c: false,\r\n            tooSmall: false,\r\n            width:\"45%\",\r\n            width1:\"55%\",\r\n            height:\"70px\",\r\n            marginLeft: \"10px\",\r\n            alignSelf:\"\",\r\n            marginLeft1: '13px',\r\n            marginTop:\"5px\",\r\n            splashscreen:false,\r\n        }\r\n\r\n    };\r\n    updateWindowDimensions() {\r\n        if(parseInt(window.innerWidth) > 550){\r\n            if(parseInt(window.innerWidth) <= 1200){\r\n                this.setState({  \r\n                    marginTop:\"40px\"\r\n                });\r\n               \r\n\r\n            }\r\n        }\r\n        if(parseInt(window.innerWidth) <= 800)\r\n        this.setState({ tooSmall: true, \r\n            width:\"100%\",\r\n            width1:\"100%\",\r\n            height:\"50px\",\r\n            marginLeft: \"0px\",\r\n            alignSelf:\"center\",\r\n            marginLeft1:\"0px\",\r\n        });\r\n     }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n    async profile(student) {\r\n        await this.setState({splashscreen:true})\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(500)\r\n        this.props.history.push({\r\n            pathname: \"/student\",\r\n            state: { detail: student }\r\n        });\r\n    \r\n    \r\n    \r\n        \r\n        \r\n\r\n        \r\n\r\n    }\r\n   \r\n    hideHomeworkClose() {\r\n        this.setState({\r\n            showHomework: false,\r\n            zindex: \"0\"\r\n\r\n        })\r\n    }\r\n    showHomework(homework, student) {\r\n        this.setState({\r\n            currents: student,\r\n            currenthw: homework,\r\n            showHomework: true,\r\n            zindex:\"-1\"\r\n        })\r\n    }\r\n    show() {\r\n        this.setState({\r\n            zindex: \"-1\"\r\n        })\r\n    }\r\n    hide() {\r\n        this.setState({\r\n            zindex: \"0\"\r\n        })\r\n    }\r\n    async Splashscreen(){\r\n        this.setState({\r\n            splashscreen:false\r\n        })\r\n        \r\n        \r\n\r\n        \r\n\r\n    }\r\n    //                                    <Progress pic={'http://localhost8080' + student.profilepic} profile={true} goals={student.goals} main={student.mainGoal} /> \"http://try.flinnapps.com/api/auth/\"\r\n\r\n    //                                    \r\n\r\n\r\n    render() {\r\n       \r\n        return (<div className=\"big-student-container\">\r\n            {this.state.splashscreen && (<Splashscreen closesplash={this.Splashscreen}/>)}\r\n            <div>{this.state.showHomework && (<ShowHomework homework={this.state.currenthw} id={this.state.currenthw._id} hideHomework={this.hideHomeworkClose} homeworks={this.state.currents.homeworks} role=\"teacher\" student={this.state.currents._id} fix={true} />)}</div>\r\n\r\n\r\n            {\r\n                this.props.students.map((student, index) =>\r\n\r\n                    <div className=\"student-container\" key={index} >\r\n                    <div className=\"student-profile-pic\">\r\n\r\n                        <div className=\"centerized\">\r\n                            \r\n                            {student.profilepic ? (\r\n                                <div>\r\n                                        <Progress pic={student.profilepic} profile={true} goals={student.mainGoals} />\r\n\r\n                                    </div>\r\n                            ) : (<div>\r\n                                    <Progress pic={this.state.picture} profile={true}  goals={student.mainGoals} />\r\n                                    </div>\r\n                                    )}\r\n\r\n                        </div>\r\n                        <div className=\"centerized\" >\r\n                            {this.state.tooSmall?(\r\n                                                                <h6 style={{ marginTop: \"7px\", color:\"#696eb5\", textDecoration:\"underline\" }} className=\"huv rowss1\" onClick={this.profile.bind(this, student)}>{student.firstName} { student.lastName } </h6>\r\n\r\n                            ):(                                <h6 style={{ marginTop: \"7px\" }} className=\"huv rowss1\" onClick={this.profile.bind(this, student)}>{student.firstName} { student.lastName } </h6>\r\n)}\r\n                               \r\n                        </div>\r\n                    </div>\r\n                    {this.state.tooSmall?(<img\r\n                                    src={trash}\r\n                                    alt=\"trash\"\r\n                                            className=\"edit3a huv\"\r\n                                    onClick={this.props.deleted.bind(this, student)}\r\n                                            style={{ width: \"20px\", height: \"20px\",  opacity:\".5\", position: \"absolute\", alignSelf:\"flex-end\", marginRight:\"5px\", marginTop:\"5px\" }}\r\n\r\n                                        />):(<div></div>)}\r\n\r\n                                        {this.state.tooSmall?(\r\n                                        <div style={{/*check boxes for the student.*/ display: \"flex\", marginTop:this.state.marginTop, alignSelf:this.state.alignSelf }}>\r\n\r\n<div>{student ? (\r\n    <div className=\"checkboxstuff1\" style={{ marginBottom: \"10px\", flexDirection: \"column\" }}>\r\n\r\n        <div className=\"checkboxstuff1\" style={{ marginLeft: this.state.marginLeft }}>\r\n\r\n            {student.syncedCheckbox ? (<Checkboxnum2 checkboxes={7} prac={student.checked} synced={true} role={\"teacher\"} sync={student.syncedCheckboxes} times={student.hwtime} synctimes={student.timeday} />\r\n            ) : (\r\n\r\n                    <Checkboxnum checkboxes={student.checkboxes} prac={student.checked} role={\"teacher\"} times={student.hwtime} synctimes={student.timeday} />\r\n                )}\r\n        </div>\r\n\r\n        {student.timeday ? (\r\n            <div>\r\n                {!student.syncedCheckbox && student.checkboxes===\"0\" ? (\r\n                    <div>\r\n                        <div className=\"checkboxstuff1 centerized\">\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Mon</div>\r\n                                <div className=\" centerized\">{student.hwtime.mon} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Tues</div>\r\n                                <div className=\" centerized\">{student.hwtime.tues} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Wed</div>\r\n                                <div className=\" centerized\">{student.hwtime.wed} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Thurs</div>\r\n                                <div className=\" centerized\">{student.hwtime.thur} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Fri</div>\r\n                                <div className=\" centerized\">{student.hwtime.fri} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Sat</div>\r\n                                <div className=\" centerized\">{student.hwtime.sat} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Sun</div>\r\n                                <div className=\" centerized\">{student.hwtime.sun} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Total</div>\r\n                                <div className=\" centerized\"> {parseInt(student.hwtime.mon) + parseInt(student.hwtime.tues) + parseInt(student.hwtime.wed) + parseInt(student.hwtime.thur) + parseInt(student.hwtime.fri) + parseInt(student.hwtime.sat) + parseInt(student.hwtime.sun)} M</div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                ) : (<div>\r\n\r\n\r\n                </div>)}\r\n\r\n            </div>\r\n\r\n        ) : (\r\n                <div>\r\n                    {student.edityesnoWeek ? (<div>\r\n                        {!this.state.c ? (<p>Total Week Time: <b> {student.totalWeekTime.total}/ {student.min} Minutes </b> </p>) : (\r\n                            <div>\r\n                            </div>\r\n\r\n                        )\r\n                        }\r\n                    </div>\r\n\r\n\r\n\r\n                    ) : (<div>\r\n\r\n\r\n                    </div>)}\r\n\r\n\r\n\r\n\r\n                </div>)}\r\n\r\n        \r\n\r\n    </div>\r\n) : (<div></div>)}\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>):(<div></div>)}\r\n                    <div className=\"student-info\">\r\n                        <div className=\"homework\" style={{alignSelf:this.state.alignSelf}}>\r\n                            <div >\r\n                                {this.state.tooSmall? (<h6 onClick={this.profile.bind(this, student)} style={{color:\"#696eb5\", }} > <u>Homework</u> ({student.homeworks.length})</h6>):(<h4><u>Homework</u></h4>)}\r\n                                \r\n                                \r\n                            </div>\r\n                                <div className=\"edit0a checkboxstuff3\" >\r\n                                \r\n                                    <div onClick={this.show} style={{marginBottom: \"25px\" }}>\r\n                                    {this.state.tooSmall? (<div></div>):( <img\r\n                                    src={trash}\r\n                                    alt=\"trash\"\r\n                                            className=\"edit3a huv\"\r\n                                    onClick={this.props.deleted.bind(this, student)}\r\n                                            style={{ width: \"17px\", height: \"17px\", marginBottom:\"7px\", opacity:\".5\", }}\r\n\r\n                                        />)}\r\n\r\n                               \r\n                                        </div>\r\n\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div style={{height: this.state.height, alignSelf:this.state.alignSelf}}>\r\n                            {student.homeworks.length > 0?(\r\n                                <div className= \"homeworkScroll\"> {\r\n                                    \r\n                                    student.homeworks.map((homework, index) =>\r\n\r\n                                    \r\n\r\n                                        <div key={index}>\r\n                                            \r\n                                            <div style={{marginLeft:this.state.marginLeft1, width:this.state.width, alignSelf:this.state.alignSelf,}}>\r\n                                                {this.state.tooSmall?(\r\n                                                    <div className=\"rowss huv\" style={{ width: this.state.width1, color:\"#696eb5\"}} onClick={this.showHomework.bind(this, homework, student)}></div>\r\n                                                ):(\r\n\r\n<div className=\"rowss huv\" style={{ width: this.state.width1,}} onClick={this.showHomework.bind(this, homework, student)}>{homework.title}</div>\r\n                                                )}\r\n                                                \r\n                                                </div>\r\n\r\n                                        </div>)\r\n                                \r\n                                \r\n\r\n                                }</div>\r\n                            ):(\r\n                        \r\n                        <div>No homework assigned yet</div>)}\r\n                       \r\n                            </div>\r\n\r\n\r\n                            {this.state.tooSmall?(<div></div>):(\r\n\r\n<div style={{/*check boxes for the student.*/ display: \"flex\", marginTop:this.state.marginTop, alignSelf:this.state.alignSelf }}>\r\n\r\n<div>{student ? (\r\n    <div className=\"checkboxstuff1\" style={{ marginBottom: \"10px\", flexDirection: \"column\" }}>\r\n\r\n        <div className=\"checkboxstuff1\" style={{ marginLeft: this.state.marginLeft }}>\r\n\r\n            {student.syncedCheckbox ? (<Checkboxnum2 checkboxes={7} prac={student.checked} synced={true} role={\"teacher\"} sync={student.syncedCheckboxes} times={student.hwtime} synctimes={student.timeday} />\r\n            ) : (\r\n\r\n                    <Checkboxnum checkboxes={student.checkboxes} prac={student.checked} role={\"teacher\"} times={student.hwtime} synctimes={student.timeday} />\r\n                )}\r\n        </div>\r\n\r\n        {student.timeday ? (\r\n            <div>\r\n                {!student.syncedCheckbox && student.checkboxes===\"0\" ? (\r\n                    <div>\r\n                        <div className=\"checkboxstuff1 centerized\">\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Mon</div>\r\n                                <div className=\" centerized\">{student.hwtime.mon} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Tues</div>\r\n                                <div className=\" centerized\">{student.hwtime.tues} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Wed</div>\r\n                                <div className=\" centerized\">{student.hwtime.wed} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Thurs</div>\r\n                                <div className=\" centerized\">{student.hwtime.thur} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Fri</div>\r\n                                <div className=\" centerized\">{student.hwtime.fri} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Sat</div>\r\n                                <div className=\" centerized\">{student.hwtime.sat} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Sun</div>\r\n                                <div className=\" centerized\">{student.hwtime.sun} M</div>\r\n                            </div>\r\n                            <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                <div className=\" centerized\">Total</div>\r\n                                <div className=\" centerized\"> {parseInt(student.hwtime.mon) + parseInt(student.hwtime.tues) + parseInt(student.hwtime.wed) + parseInt(student.hwtime.thur) + parseInt(student.hwtime.fri) + parseInt(student.hwtime.sat) + parseInt(student.hwtime.sun)} M</div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                ) : (<div>\r\n\r\n\r\n                </div>)}\r\n\r\n            </div>\r\n\r\n        ) : (\r\n                <div>\r\n                    {student.edityesnoWeek ? (<div>\r\n                        {!this.state.c ? (<p>Total Week Time: <b> {student.totalWeekTime.total}/{student.min} Minutes </b> </p>) : (\r\n                            <div>\r\n                            </div>\r\n\r\n                        )\r\n                        }\r\n                    </div>\r\n\r\n\r\n\r\n                    ) : (<div>\r\n\r\n\r\n                    </div>)}\r\n\r\n\r\n\r\n\r\n                </div>)}\r\n\r\n        \r\n\r\n    </div>\r\n) : (<div></div>)}\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n                            )}\r\n                            \r\n                        \r\n                    </div>\r\n\r\n\r\n                             \r\n                    </div>\r\n\r\n                )\r\n            }\r\n\r\n    </div>\r\n        )\r\n                   \r\n\r\n    }\r\n}\r\n//<img\r\n//src = { edit }\r\n//alt = \"edut\"\r\n//className = \"edit3a huv\"\r\n//onClick = { this.profile.bind(this, student) }\r\n\r\n  //  />","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/add1student.js",["530","531","532","533","534","535","536","537","538","539"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport GoalEdit from \"../components/diagoal.js\";\r\nimport Homework from \"../components/homeworks\";\r\nimport ShowHomework from \"../components/showHomework\";\r\nimport Goal from \"../components/showgoal.js\";\r\nimport trash from \"./Trash1.png\";\r\nimport leaf from \"./leaf.png\";\r\nimport Splashscreen from \"../components/splashscreen.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//this component signs in a teacher allready in the database.\r\n//using react-validation.\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class UpdateStudent extends Component {\r\n    \r\n    //state creation and binding.\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlegoal = this.handlegoal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.goalClose = this.goalClose.bind(this);\r\n        this.Goalfunc = this.Goalfunc.bind(this);\r\n        this.skip = this.skip.bind(this);\r\n        this.Homeworkfunc = this.Homeworkfunc.bind(this);\r\n        this.done = this.done.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.showHomework = this.showHomework.bind(this);\r\n        this.hideHomeworkClose = this.hideHomeworkClose.bind(this);\r\n        this.handlegoalsClose = this.handlegoalsClose.bind(this);\r\n        this.showGoal = this.showGoal.bind(this);\r\n        this.deleteGoal = this.deleteGoal.bind(this);\r\n        this.deleteHomework = this.deleteHomework.bind(this);\r\n        this.handletheclose = this.handletheclose.bind(this);\r\n        this.handlethegoalclose = this.handlethegoalclose.bind(this);\r\n        this.done1 = this.done1.bind(this);\r\n        this.done2 = this.done2.bind(this);\r\n        this.done3 = this.done3.bind(this);\r\n        this.done4 = this.done4.bind(this);\r\n        this.goback = this.goback.bind(this);\r\n        this.sendtoprofile = this.sendtoprofile.bind(this);\r\n\r\n        \r\n        \r\n        this.done5 = this.done5.bind(this);\r\n\r\n        this.handleChangeforform = this.handleChangeforform.bind(this);\r\n\r\n        \r\n        \r\n        \r\n        this.handleHomework = this.handleHomework.bind(this);\r\n        this.handleHomeworkClose = this.handleHomeworkClose.bind(this);\r\n        this.skipped = this.skipped.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            homeworks: [],\r\n            main: true,\r\n            maingoal: \"Change this\",\r\n            goal: \"\",\r\n            loading: false,\r\n            message: \"\",\r\n            goals: [],\r\n            Goal: false,\r\n            description: \"\",\r\n            maindescription:\"You should change this to be a goal that you would like this student to have.\",\r\n            next: false,\r\n            maindate: \"\",\r\n            checkbox: \"5\",\r\n            Homework: false,\r\n            hwchecked: \"\",\r\n            hwdescription: \"\",\r\n            hwcheckboxes: \"0\",\r\n            hwdate: \"\",\r\n            hwreasearch: \"\",\r\n            assignment: false,\r\n            research: false,\r\n            practice: false,\r\n            daily: \"100\",\r\n            hwtype: \"\",\r\n            days: \"100\",\r\n            showHomework: false,\r\n            currentHomework: undefined,\r\n            currentgoal: undefined,\r\n            showGoals: false,\r\n            tempID: 1,\r\n            HWtempID:1,\r\n            tempGoal: \"\",\r\n            tempDescription: \"\",\r\n            tempday: \"\",\r\n            tempcheckboxes: \"\",\r\n            tempHW: \"\",\r\n            edited: false,\r\n            edit: \"\",\r\n            editedd: \"\",\r\n            val: false,\r\n            yesnoCheckboxes: true,\r\n            yesnoTime: true,\r\n            timeframePractice: true,\r\n            starPoints: true,\r\n            manualsetup: false,\r\n            syncCheckbox: true,\r\n            dayorweekTime: \"\",\r\n            timeSync: true,\r\n            daysbool: true,\r\n            timebool: true,\r\n            smonths: \"\",\r\n            emonths: \"\",\r\n            temonths: \"\",\r\n            tsmonths: \"\",\r\n            Supporting_Goal: \"\",\r\n            Homework_Practiced: \"\",\r\n            timeframePracticebiao: true,\r\n            min: \"100\",\r\n            weeklytimebiao: \"60\",\r\n            dailytimebiao: true,\r\n            dmin: \"20\",\r\n            weekStreak: true,\r\n            dayStreak: true,\r\n            done: 0,\r\n            hwsynccheck: true,\r\n            hwdmin: \"\",\r\n            HWweeklytimebiao: \"\",\r\n            hwtimesync: true,\r\n            hwlink: \"\",\r\n            struggles: true,\r\n            hwQuestions: true,\r\n            yesnoday: true,\r\n            yesnoweek: true,\r\n            marginTop: \"\",\r\n            marginLeft: \"55px\"\r\n            /*\r\n            homeworks: [],\r\n            main: false,\r\n            maingoal: \"\",\r\n            goal: \"\",\r\n            loading: false,\r\n            message: \"\",\r\n            goals: [],\r\n            Goal: false,\r\n            description: \"\",\r\n            maindescription:\"\",\r\n            next: false,\r\n            maindate: \"\",\r\n            checkbox: \"0\",\r\n            Homework: false,\r\n            hwchecked: \"\",\r\n            hwdescription: \"\",\r\n            hwcheckboxes: \"0\",\r\n            hwdate: \"\",\r\n            hwreasearch: \"\",\r\n            assignment: false,\r\n            research: false,\r\n            practice: false,\r\n            daily: \"\",\r\n            hwtype: \"\",\r\n            days: \"\",\r\n            showHomework: false,\r\n            currentHomework: undefined,\r\n            currentgoal: undefined,\r\n            showGoals: false,\r\n            tempID: 1,\r\n            HWtempID:1,\r\n            tempGoal: \"\",\r\n            tempDescription: \"\",\r\n            tempday: \"\",\r\n            tempcheckboxes: \"\",\r\n            tempHW: \"\",\r\n            edited: false,\r\n            edit: \"\",\r\n            editedd: \"\",\r\n            val: false,\r\n            yesnoCheckboxes: false,\r\n            yesnoTime: false,\r\n            timeframePractice: false,\r\n            starPoints: false,\r\n            manualsetup: false,\r\n            syncCheckbox: false,\r\n            dayorweekTime: \"\",\r\n            timeSync: false,\r\n            daysbool: false,\r\n            timebool: false,\r\n            smonths: \"\",\r\n            emonths: \"\",\r\n            temonths: \"\",\r\n            tsmonths: \"\",\r\n            Supporting_Goal: \"\",\r\n            Homework_Practiced: \"\",\r\n            timeframePracticebiao: false,\r\n            min: \"\",\r\n            weeklytimebiao: \"\",\r\n            dailytimebiao: false,\r\n            dmin: \"\",\r\n            weekStreak: false,\r\n            dayStreak: false,\r\n            done: 0,\r\n            hwsynccheck: false,\r\n            hwdmin: \"\",\r\n            HWweeklytimebiao: \"\",\r\n            hwtimesync: false,\r\n            hwlink: \"\",\r\n            struggles: true,\r\n            hwQuestions: true,\r\n            yesnoday: false,\r\n            yesnoweek: false,\r\n            marginTop: \"\",\r\n            marginLeft: \"55px\"\r\n            */\r\n        };\r\n    }\r\n    //handles all changes with state.\r\n    handleChange = (event, news) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n        if(name===\"dmin\"){\r\n            this.setState({\r\n                timeSync:true\r\n            })\r\n\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n    goback(){\r\n        this.props.history.push(\"/profile\");\r\n        window.location.reload();\r\n    }\r\n    sendtoprofile(){\r\n        window.location.reload();\r\n    }\r\n    handleChangeforform = (event, news) => {\r\n        \r\n        const { name, value } = event.target\r\n\r\n        if (value === \"true\") {\r\n            this.setState({\r\n                [name]: true,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                [name]: false,\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(parseInt(window.innerWidth) <= 600){\r\n        this.setState({ marginTop: \"310px\", marginLeft: \"0px\" });\r\n        }\r\n        this.done();\r\n\r\n        \r\n    }\r\n\r\n   \r\n   \r\n    Goalfunc() {\r\n        this.setState({\r\n            Goal: true,\r\n        })\r\n    }\r\n    Homeworkfunc() {\r\n        this.setState({\r\n            Homework: true,\r\n        })\r\n    }\r\n    showHomework(homework) {\r\n        this.setState({\r\n            showHomework: true,\r\n            currentHomework: homework,\r\n        })\r\n\r\n\r\n\r\n    }\r\n    showGoal(goal) {\r\n        this.setState({\r\n            showGoals: true,\r\n            currentgoal: goal,\r\n        })\r\n\r\n\r\n\r\n    }\r\n    //submites for login using the controller to connect with backend. Sends to the teacher profile if teacher or the student if back end spits out student.\r\n    handlegoal(e) {\r\n        e.preventDefault();\r\n        let newarr = this.state.goals;\r\n        let newGoal = {\r\n            title: this.state.goal,\r\n            description: this.state.description,\r\n            date: \"no due date\",\r\n            tempID: this.state.tempID\r\n            \r\n        }\r\n        newarr.push(newGoal);\r\n        let x = this.state.tempID + 1;\r\n        this.setState({\r\n            goals: newarr,\r\n            tempID: x\r\n        })\r\n        this.goalClose();\r\n    }\r\n\r\n    async handleHomework(e) {\r\n        e.preventDefault();\r\n        if (this.state.hwtype === \"\") {\r\n\r\n            await this.setState({\r\n                hwtype: \"assignment\"\r\n            })\r\n\r\n        }\r\n\r\n        let newarr = this.state.homeworks;\r\n        let hwID = this.state.HWtempID + 1;\r\n        this.setState({\r\n            HWtempID:hwID\r\n        })\r\n        \r\n        let newHW = {\r\n            \r\n            title: this.state.homework,\r\n            hwchecked: this.state.hwchecked,\r\n            hwcheckboxes: this.state.hwcheckboxes,\r\n            hwtype: this.state.hwtype,\r\n            description: this.state.hwdescription,\r\n            date: this.state.hwdate,\r\n            daily: this.state.daily,\r\n            HWtempID: this.state.HWtempID,\r\n            hwsynccheck: this.state.hwsynccheck,\r\n            hwlink: this.state.hwlink,\r\n            hwstruggles: this.state.struggles,\r\n            hwQuestions: this.state.hwQuestions,\r\n            hwdmin: this.state.hwdmin,\r\n            HWweeklytimebiao: this.state.HWweeklytimebiao,\r\n            hwtimesync: this.state.hwtimesync,\r\n            yesnoday: this.state.yesnoday,\r\n            yesnoweek: this.state.yesnoweek,\r\n            totalWeekTime: {\r\n                total: \"0\",\r\n            },\r\n            hwtime: {\r\n                mon: \"0\",\r\n                tues: \"0\",\r\n                wed: \"0\",\r\n                thur: \"0\",\r\n                fri: \"0\",\r\n                sat: \"0\",\r\n                sun: \"0\",\r\n            },\r\n            firstMessage: false,\r\n            messages: [],\r\n            syncedCheckboxes: {\r\n                mon: false,\r\n                tues: false,\r\n                wed: false,\r\n                thur: false,\r\n                fri: false,\r\n                sat: false,\r\n                sun: false\r\n            }\r\n\r\n\r\n\r\n        }\r\n        newarr.push(newHW);\r\n        this.setState({\r\n            homeworks: newarr,\r\n        })\r\n        this.handleHomeworkClose();\r\n    }\r\n\r\n    async done() {\r\n        //add practicw streak\r\n        AuthService.doitAll(\r\n            /*this is everything for checkboxes*/this.props.state.realtimestudent._id,/*done*/ this.state.yesnoCheckboxes, this.state.syncCheckbox, this.state.checkbox,\r\n            /*this is everything for time. timebool is conditional clause if I want*/ this.state.yesnoTime, /*done*/ this.state.timeSync,/*done*/ this.state.weeklytimebiao,/*done*/ this.state.dailytimebiao,/*done*/ this.state.dmin,/*done*/ this.state.timebool, /*done*/ \"0\", /*done*/\r\n        /*this is days practiced. daybool also conditional */ this.state.daysbool,/*done*/ \"0\",/*done*/\r\n        /*updating time frame practiced for days.*/  this.state.days,/*done*/ this.state.smonths,/*done*/ this.state.emonths,/*done*/ this.state.timeframePracticebiao,/*done*/ this.state.min,/*done*/ this.state.tsmonths,/*done*/ this.state.temonths,/*done*/\r\n        /*updating streak info and star points (last two)*/ this.state.dayStreak,/*done*/ this.state.weekStreak,/*done*/ this.state.starPoints,/*done*/ this.state.manualsetup,/*done*/\r\n        /*add the goals first one is for conditional clause if I want.*/ this.state.goals[0],/*done*/ this.state.goals,/*done*/ this.state.maingoal,/*done*/  this.state.maindescription,/*done*/  this.state.maindate,/*done*/ \r\n        /*add the homeworks*/ this.state.homeworks,/*done*/ \r\n        /*done updating new student.*/ true, /*done*/ \r\n\r\n\r\n        ).then(response => {\r\n            console.log(response.data);\r\n\r\n            if (response.data.student) { window.location.reload(); }\r\n\r\n        });\r\n      \r\n\r\n        \r\n           \r\n       \r\n\r\n\r\n        \r\n\r\n\r\n       \r\n       \r\n     \r\n\r\n\r\n\r\n        //this.done2();\r\n        //const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        //await delay(5000);\r\n        //this.done3();\r\n       // await delay(5000);\r\n        //this.done4();\r\n        //await delay(5000);\r\n       //this.done1();\r\n       \r\n        \r\n       \r\n        \r\n        \r\n        \r\n\r\n\r\n     \r\n\r\n\r\n        \r\n\r\n        \r\n    }\r\n    async done2() {\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n        if (this.state.yesnoCheckboxes) {\r\n            if (this.state.syncCheckbox) {\r\n                AuthService.syncCheckboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n                await delay(3000);\r\n\r\n            }\r\n            else {\r\n                AuthService.checkboxes(this.props.state.realtimestudent._id, this.state.checkbox);\r\n                await delay(3000);\r\n            }\r\n        }\r\n        if (this.state.yesnoTime) {\r\n\r\n            AuthService.timeSync(this.props.state.realtimestudent._id, this.state.timeSync, this.state.weeklytimebiao, this.state.dailytimebiao, this.state.dmin);\r\n            await delay(3000);\r\n\r\n\r\n\r\n        }\r\n        if (this.state.timebool) {\r\n            AuthService.timeTotal(this.props.state.realtimestudent._id, \"0\")\r\n            await delay(3000);\r\n\r\n        }\r\n        if (this.state.daysbool) {\r\n            AuthService.dayTotal(this.props.state.realtimestudent._id, \"0\")\r\n            await delay(6000);\r\n\r\n        }\r\n\r\n        if (this.state.timeframePractice) {\r\n            AuthService.updateSetDays(this.props.state.realtimestudent._id, this.state.days, this.state.smonths, this.state.emonths, this.state.timeframePracticebiao, this.state.min, this.state.tsmonths, this.state.temonths);\r\n            await delay(3000);\r\n\r\n        }\r\n    }\r\n\r\n    async done3() {\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n        if (this.state.dayStreak) {\r\n            AuthService.setDayStreak(this.props.state.realtimestudent._id, this.state.dayStreak);\r\n            await delay(3000);\r\n        }\r\n        if (this.state.weekStreak) {\r\n            AuthService.setWeekStreak(this.props.state.realtimestudent._id, this.state.weekStreak);\r\n            await delay(3000);\r\n\r\n        }\r\n        if (this.state.starPoints) {\r\n            if (this.state.manualsetup) {\r\n                AuthService.starPoints(this.props.state.realtimestudent._id, true,)\r\n                await delay(3000);\r\n\r\n            }\r\n            else {\r\n                AuthService.starPoints(this.props.state.realtimestudent._id, false)\r\n                await delay(3000);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    async done4() {\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n        if (this.state.goals[0]) {\r\n            AuthService.AddGoals(this.props.state.realtimestudent._id, false, this.state.goals)\r\n            await delay(5000);\r\n        }\r\n\r\n        if (this.state.maingoal!==\"\") {\r\n            AuthService.AddGoal(this.props.state.realtimestudent._id, true, this.state.maingoal, this.state.maindescription, this.state.maindate,)\r\n            await delay(3000);\r\n\r\n        }\r\n        if (this.state.homeworks[0]) {\r\n            AuthService.AddHomeworks(this.props.state.realtimestudent._id, this.state.homeworks)\r\n            await delay(3000);\r\n\r\n        }\r\n        await delay(3000);\r\n    }\r\n\r\n    async done1() {\r\n        \r\n        \r\n        \r\n       \r\n        AuthService.doneUpdatingnewStudent(this.props.state.realtimestudent._id, true).then(response => {\r\n            console.log(response.data);\r\n\r\n            if (response.data.student) { window.location.reload();}\r\n            \r\n        });\r\n\r\n\r\n        \r\n\r\n\r\n\r\n       \r\n\r\n    }\r\n    async done5() {\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n        AuthService.AddGoals(this.props.state.realtimestudent._id, false, this.state.goals)\r\n        await delay(6000);\r\n\r\n        AuthService.AddGoal(this.props.state.realtimestudent._id, true, this.state.maingoal, this.state.maindescription, this.state.maindate,)\r\n        await delay(6000);\r\n\r\n        AuthService.AddHomeworks(this.props.state.realtimestudent._id, this.state.homeworks)\r\n        await delay(6000);\r\n\r\n        AuthService.setDayStreak(this.props.state.realtimestudent._id, this.state.dayStreak);\r\n        await delay(6000);\r\n\r\n}\r\n\r\n\r\n\r\n    goalClose() {\r\n        this.setState({\r\n            Goal: false,\r\n            main: false,\r\n            goal: \"\",\r\n            description: \"\",\r\n        });\r\n    }\r\n    handleHomeworkClose() {\r\n        this.setState({\r\n\r\n            Homework: false,\r\n            hwdate: \"\",\r\n            daily: \"\",\r\n            homework: \"\",\r\n            hwdescription: \"\",\r\n            hwcheckboxes: \"\",\r\n            hwchecked: \"\",\r\n            hwtype: \"assignment\",\r\n            assignment: false,\r\n            research: false,\r\n            practice: false,\r\n        });\r\n    }\r\n\r\n    next() {\r\n\r\n            \r\n\r\n        this.setState({\r\n            next:true,\r\n        })\r\n    }\r\n    skip() {\r\n        this.setState({\r\n            next: !this.state.next\r\n        })\r\n    }\r\n    skipped() {\r\n        AuthService.doneUpdatingnewStudent(this.props.state.realtimestudent._id, true);\r\n        window.location.reload();\r\n    }\r\n    handlehwChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n        if (value === \"assignment\") {\r\n            this.setState({\r\n                assignment: true,\r\n                research: false,\r\n                practice: false,\r\n            })\r\n        }\r\n        if (value === \"research\") {\r\n            this.setState({\r\n                assignment: false,\r\n                research: true,\r\n                practice: false,\r\n            })\r\n        }\r\n        if (value === \"practice\") {\r\n            this.setState({\r\n                assignment: false,\r\n                research: false,\r\n                practice: true,\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    \r\n    deleteHomework(homework) {\r\n\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.homeworks.length; i++) {\r\n            if (this.state.homeworks[i].HWtempID !== homework.HWtempID) {\r\n                \r\n                ar.push(this.state.homeworks[i]);\r\n            }\r\n                \r\n        }\r\n        this.setState({\r\n            homeworks: ar,\r\n        })\r\n\r\n    }\r\n    deleteGoal(goal) {\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.goals.length; i++) {\r\n            if (this.state.goals[i].tempID !== goal.tempID) {\r\n               \r\n                ar.push(this.state.goals[i]);\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            goals: ar,\r\n        })\r\n    }\r\n    handletheclose(id, title, description, type, day, checkboxes, date, ) {\r\n        let newHW = {\r\n\r\n            title: title,\r\n            hwcheckboxes: checkboxes,\r\n            hwtype: type,\r\n            description: description,\r\n            date: date,\r\n            daily: day,\r\n            HWtempID: id\r\n        }\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.homeworks.length; i++) {\r\n            if (this.state.homeworks[i].HWtempID === newHW.HWtempID) {\r\n\r\n                ar.push(newHW);\r\n            }\r\n            else {\r\n                ar.push(this.state.homeworks[i]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        this.setState({\r\n\r\n            homeworks: ar,\r\n        })\r\n\r\n    }\r\n\r\n    hideHomeworkClose() {\r\n        \r\n        this.setState({\r\n            showHomework: false,\r\n\r\n\r\n        });\r\n    };\r\n    handlethegoalclose() {\r\n        this.setState({\r\n            showGoals: false\r\n        });\r\n    }\r\n    handlegoalsClose(id, title, description) {\r\n        \r\n        let goalz = {\r\n            title: title,\r\n            description: description,\r\n            tempID: id\r\n        }\r\n\r\n        let ar = [];\r\n        for (let i = 0; i < this.state.goals.length; i++) {\r\n            if (this.state.goals[i].tempID === goalz.tempID) {\r\n                \r\n                ar.push(goalz);\r\n            }\r\n            else {\r\n                ar.push(this.state.goals[i]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        this.setState({\r\n\r\n            goals: ar,\r\n        })\r\n\r\n\r\n        \r\n    };\r\n    render() {\r\n        return (<div>\r\n\r\n            <Splashscreen closesplash={this.sendtoprofile}/>\r\n        </div>)\r\n    }\r\n}\r\n/*\r\n    render() {\r\n\r\n        //login page for the screen. \r\n        return (\r\n            {/** \r\n            <div className=\"z1\">\r\n                <div className=\"popup-box\" style={{ zIndex: \"1010\" }}>\r\n                    <div className=\"diapicbox4b \" style={{ zIndex: \"1010\" }}>\r\n                        \r\n\r\n                        {this.state.Goal && (<GoalEdit handlegoal={this.handlegoal} handleChange={this.handleChange} handleClose={this.goalClose} main={this.state.main} />)}\r\n\r\n                        {this.state.Homework && (<Homework handleHomework={this.handleHomework} handleChange={this.handlehwChange} handleClose={this.handleHomeworkClose} practice={this.state.practice} research={this.state.research} assignment={this.state.assignment} />)}\r\n                        {this.state.showHomework && (<ShowHomework homework={this.state.currentHomework} hideHomework={this.hideHomeworkClose} role=\"teacher\" handleChange={this.handleChange} edited={this.edited} handletheclose={this.handletheclose}/> )}\r\n                        {this.state.showGoals && (<Goal Goal={this.state.currentgoal} handleClose={this.handlethegoalclose} role=\"teacher\" handleChange={this.handleChange} handletheclose={this.handlegoalsClose}/>)}\r\n                        <div className=\"homeworkScroll1\">\r\n                        <div className=\"fill1 centerizeaa \" >\r\n                            <h1 style={{  }}>Additional Setup</h1>\r\n                                <div className=\"\" style={{ display:\"flex\", flexDirection:\"row\", marginLeft:\"20px\", width:\"320px\" }}> <p>You can also </p> <p className=\"rowss1 huv \" style={{ color: \"#696eb5\", marginLeft:\"3px\", marginRight:\"3px\"}} onClick={this.done}><b>skip</b></p><p>for now. or go</p> <p className=\"rowss1 huv \" style={{ color: \"#696eb5\", marginLeft:\"3px\", marginRight:\"3px\"}} onClick={this.goback}><b>back.</b></p> </div>\r\n\r\n                                <h2 style={{ color: \"gray\" }}>Set Goals For Student</h2>\r\n\r\n\r\n                                <div style={{ marginTop: \"5px\", width: \"250px\", marginLeft: \"30px\" }} className=\"form-group\" >\r\n                                <label htmlFor=\"\"><h5>Main Goal For Student:</h5></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"maingoal\"\r\n                                    value={this.state.maingoal}\r\n                                    onChange={this.handleChange}\r\n                                    validations={[required]}\r\n                                />\r\n                            </div>\r\n\r\n                                <div className=\"form-group\" style={{ maxWidth: \"375px\", marginLeft: \"30px\", marginBottom:\"50px\", marginRight:\"10px\" }} >\r\n                                <label htmlFor=\"maindescription\"><h5>Goal Description:</h5></label>\r\n                                <textarea\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    rows=\"3\"\r\n                                    id=\"maindescription\"\r\n                                    value={this.state.maindescription}\r\n                                    onChange={this.handleChange}\r\n                                    name=\"maindescription\"\r\n                                ></textarea>\r\n                            </div>\r\n                                <h5 style={{ marginLeft: \"30px\" }}>Add Supporting Goals for Student:</h5>\r\n\r\n                                <div style={{ marginLeft: \"30px\", marginTop:\"17px\", marginBottom:\"27px\", height: \"230px\", width: \"270px\",  border: \"2px solid green\", borderRadius:\"7%\"  }}>\r\n                                    <div className=\"homeworkScroll1 \" style={{ height: \"220px\", marginTop:\"5px\", marginLeft:\"10px\" }}>\r\n                                {this.state.goals.map((goal, index) =>\r\n                                    <div className=\"checkboxstuff4 \" key={index}  >\r\n                                        \r\n                                        <p className=\"huv rowss\" onClick={this.showGoal.bind(this, goal)} >{goal.title} </p>\r\n                                        <img\r\n                                            src={trash}\r\n                                            alt=\"delete\"\r\n                                            onClick={this.deleteGoal.bind(this, goal)}\r\n                                            className=\"huv \"\r\n                                            style={{ width: \"15px\", height: \"15px\", opacity: \".5\", marginTop:\"5px\" }}\r\n\r\n                                        />\r\n                                            </div>\r\n                                    \r\n                                        )}\r\n                                      \r\n                                        \r\n                                        <div className=\"btn  btn-block\"  onClick={this.Goalfunc}><span className=\"checkboxstuff1\" style={{ width: \"150\" }}>\r\n                                            <img\r\n                                                src={leaf}\r\n                                                className=\"edita\"\r\n                                                style={{ width: \"20px\", height: \"20px\" }}\r\n\r\n\r\n                                            />\r\n                                            <p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n                                        </span></div>\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div >\r\n                                   \r\n                            </div>\r\n\r\n\r\n                        \r\n                        </div>\r\n                        <div style={{marginTop: this.state.marginTop}}>\r\n\r\n                            <div className=\"fill1 columbized\" >\r\n\r\n                                    <h2 style={{ marginBottom: \"15px\", color: \"gray\"  }}>Setup Checkboxes:</h2>\r\n                                    <div className=\"form-group\" style={{ marginLeft: \"55px\" }} >\r\n                                    <label>Should this student have daily checkboxes?</label>\r\n                                    <select  htmlFor=\"yesnoCheckboxes\" onChange={this.handleChangeforform} name=\"yesnoCheckboxes\" id=\"yesnoCheckboxes\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>Not Sure Yet</option>\r\n                                       \r\n                                    </select>\r\n                                </div>\r\n                                {this.state.yesnoCheckboxes ? (<div style={{ marginLeft: \"75px\" }}>\r\n                                    <div  className=\"form-group\" >\r\n                                        <label>How many days should the student practice?</label>\r\n                                        <select  htmlFor=\"checkbox\" onChange={this.handleChange} name=\"checkbox\" id=\"checkbox\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"6\">6</option>\r\n                                            <option value=\"7\">7</option>\r\n                                            <option value=\"0\">I'm not sure how many yet</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div  className=\"form-group\" >\r\n                                        <label>Should practice days sync with the week?</label>\r\n                                        <select  htmlFor=\"syncCheckbox\" onChange={this.handleChangeforform} name=\"syncCheckbox\" id=\"syncCheckbox\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n                                            <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                        </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label>Track daily streak?</label>\r\n                                            <select htmlFor=\"dayStreak\" onChange={this.handleChangeforform} name=\"dayStreak\" id=\"dayStreak\">\r\n                                                <option value=\"\"></option>\r\n                                                <option value={true}>Yes</option>\r\n                                                <option value={false}>No</option>\r\n                                                <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                </div>) : (<div></div>)}\r\n                                    <h5 style={{ marginTop: \"7px\", marginLeft: \"30px\"  }}>Setup Times:</h5>\r\n\r\n                                    <div className=\"form-group\" style={{  marginLeft: \"55px\" }}>\r\n                                    <label>Would you like to set up a time goal?</label>\r\n                                    <select  htmlFor=\"yesnoTime\" onChange={this.handleChangeforform} name=\"yesnoTime\" id=\"yesnoTime\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                    </select>\r\n                                    </div>\r\n                                   \r\n\r\n                                    {this.state.yesnoTime ? (<div style={{ marginLeft: \"70px\" }}>\r\n\r\n                                        <div className=\"form-group\"  >\r\n                                            <label htmlFor=\"weeklytimebiao\">How much time should the student practice weekly?</label>\r\n                                            <input\r\n\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"weeklytimebiao\"\r\n                                                style={{ width: \"60px\" }}\r\n                                                onChange={this.handleChange}\r\n                                                name=\"weeklytimebiao\"\r\n                                            /><p>Minutes</p>\r\n\r\n\r\n                                        </div>\r\n\r\n                                        \r\n                                            <div className=\"form-group\" style={{  }}>\r\n                                                <label htmlFor=\"dmin\">How much time should the student practice daily?</label>\r\n                                                <input\r\n\r\n                                                    type= \"text\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"dmin\"\r\n                                                    style={{ width: \"60px\" }}\r\n                                                    onChange={this.handleChange}\r\n                                                    name=\"dmin\"\r\n                                                /><p>Minutes</p>\r\n\r\n\r\n                                            </div>\r\n                                    \r\n                                        \r\n\r\n                                  \r\n                                    \r\n                                </div>) : (<div></div>)}\r\n                                \r\n                                    <h5 style={{ marginTop: \"10px\", marginLeft: \"30px\" }}>Add Homework for this Student:</h5>\r\n\r\n                                \r\n                                            <div style={{ marginLeft: \"30px\", marginTop: \"23px\", marginBottom: \"50px\", height: \"230px\", width: \"270px\", border: \"2px solid green\", borderRadius: \"7%\" }}>\r\n                                                <div className=\"homeworkScroll1 \" style={{ height: \"220px\",  marginTop:\"5px\", marginLeft:\"10px\" }}>\r\n                                    {this.state.homeworks.map((homework, index) =>\r\n                                        <div className=\"checkboxstuff4 \" key={index} >\r\n                                            <p className=\"huv rowss\" onClick={this.showHomework.bind(this, homework)}> {homework.title}</p>\r\n                                            <img\r\n                                                src={trash}\r\n                                                alt=\"delete\"\r\n                                                onClick={this.deleteHomework.bind(this, homework)}\r\n                                                className=\"huv \"\r\n                                                style={{ width: \"15px\", height: \"15px\", opacity: \".5\", marginTop:\"5px\",}}\r\n\r\n                                            />\r\n\r\n                                        </div>\r\n                                            )}\r\n                                            <div className=\"btn  btn-block\" onClick={this.Homeworkfunc}><span className=\"checkboxstuff1\" style={{ width: \"150\" }}>\r\n                                                <img\r\n                                                    src={leaf}\r\n                                                    className=\"edita\"\r\n                                                    style={{ width: \"20px\", height: \"20px\" }}\r\n\r\n\r\n                                                />\r\n                                                <p>+</p><p className=\"rowss huv\">Homework</p>\r\n                                            </span></div>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                              \r\n                                    <h5 style={{ marginTop: \"20px\",  }}>Other Student Settings:</h5>\r\n                                    {this.state.yesnoCheckboxes?(<div>\r\n                                        <div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n                                        <label>Do you want to track days practiced for the year? </label>\r\n                                        <select htmlFor=\"daysbool\" onChange={this.handleChangeforform} name=\"daysbool\" id=\"daysbool\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n    \r\n    \r\n                                        </select>\r\n                                    </div></div>\r\n                                    ):(<div></div>)}\r\n                                    {this.state.yesnoTime?(\r\n                                        <div className=\"form-group\" style={{ marginLeft: \"30px\" }} >\r\n                                        <label>Do you want to track time practiced for the year? </label>\r\n                                        <select htmlFor=\"timebool\" onChange={this.handleChangeforform} name=\"timebool\" id=\"timebool\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n    \r\n                                        </select>\r\n                                        </div>\r\n                                    ):(<div></div>)}\r\n\r\n                                    \r\n                                    \r\n                                   \r\n\r\n                                   <div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n                                    <label>Would you like to set up a goal for practice days? </label>\r\n                                    <select htmlFor=\"timeframePractice\" onChange={this.handleChangeforform} name=\"timeframePractice\" id=\"timeframePractice\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n                                        <option value={false}>I'll set this up later.</option>\r\n\r\n\r\n                                    </select>\r\n                                </div>\r\n                                {this.state.timeframePractice ? (<div style={{ marginLeft: \"55px\" }}>\r\n                                    <div className=\"form-group\" >\r\n                                        <label htmlFor=\"days\">How many days?</label>\r\n                                        <input\r\n\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"days\"\r\n                                            style={{ width: \"60px\" }}\r\n                                            onChange={this.handleChange}\r\n                                            name=\"days\"\r\n                                        /></div></div>):(<div></div>)}\r\n\r\n {/*\r\n                                    </div>\r\n                                        <div className=\"form-group checkboxstuff2foradd\" style={{ marginleft: \"55px\", marginBottom:\"15px\" }}>\r\n                                        <div>\r\n                                        <p>From:</p>\r\n                                        <input\r\n                                            id=\"smonths\"\r\n                                            name=\"smonths\"\r\n                                            style={{ width: \"200px\" }}\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                            onChange={this.handleChange}\r\n\r\n                                            />\r\n                                            </div>\r\n                                        <div style={{  marginLeft: this.state.marginLeft }}>\r\n                                        <p>To:</p>\r\n                                        <input\r\n                                            id=\"emonths\"\r\n                                            name=\"emonths\"\r\n                                                style={{ width: \"200px\" }}\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                            onChange={this.handleChange}\r\n\r\n                                            />\r\n                                            </div>\r\n\r\n\r\n                                    </div>\r\n                                    </div>) : (<div></div>)}\r\n\r\n                                    <div className=\"form-group\" style={{ marginLeft: \"30px\" }} >\r\n                                        <label>Would you like to set up goal for practice minutes? </label>\r\n                                        <select htmlFor=\"timeframePracticebiao\" onChange={this.handleChangeforform} name=\"timeframePracticebiao\" id=\"timeframePracticebiao\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Yes</option>\r\n                                            <option value={false}>No</option>\r\n                                            <option value={false}>I'll set this up later.</option>\r\n\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    {this.state.timeframePracticebiao ? (<div style={{ marginLeft: \"55px\" }}>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"min\">Practice Minutes</label>\r\n                                            <input\r\n\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"min\"\r\n                                                style={{ width: \"60px\" }}\r\n                                                onChange={this.handleChange}\r\n                                                name=\"min\"\r\n                                            />\r\n\r\n\r\n                                        </div></div>):(<div></div>)}\r\n                                        {/*}\r\n                                        <div className=\"form-group checkboxstuff2foradd\" >\r\n                                            <div>\r\n                                                <p>From:</p>\r\n                                                <input\r\n                                                    id=\"tsmonths\"\r\n                                                    name=\"tsmonths\"\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n\r\n\r\n                                                    onChange={this.handleChange}\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div style={{ marginLeft: this.state.marginLeft }}>\r\n                                                <p>To:</p>\r\n                                                <input\r\n                                                    id=\"temonths\"\r\n                                                    name=\"temonths\"\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n\r\n\r\n                                                    onChange={this.handleChange}\r\n\r\n                                                />\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>) : (<div></div>)}*/ /*}\r\n\r\n<div className=\"form-group\" style={{ marginLeft: \"30px\" }}>\r\n                                    <label>Do you want to track Star Points?</label>\r\n                                    <select  htmlFor=\"starPoints\" onChange={this.handleChangeforform} name=\"starPoints\" id=\"starPoints\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value={true}>Yes</option>\r\n                                        <option value={false}>No</option>\r\n\r\n                                    </select>\r\n                                    <p style={{color:\"gray\", fontSize:\"14px\", marginTop:\"5px\", width:\"90%\"}}>(Star Points help gamify student accountability. Students receive Star Points whenever they complete a goal or finish their homework.)</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div> \r\n                        <div>\r\n\r\n                            <div className=\"fill1 columbized\" >\r\n                                {/*}\r\n\r\n                                    <h2 style={{ marginTop: \"25px\", color:\"gray\" }}>Set Up Star Points For Student</h2>\r\n\r\n                                    \r\n                                    {this.state.starPoints ? (<div style={{ marginLeft: \"50px\" }}>\r\n                                    <div className=\"form-group\" >\r\n                                        <label>Would you like to manually setup star points or us legato automatic system?</label>\r\n                                        <select  htmlFor=\"manualsetup\" onChange={this.handleChangeforform} name=\"manualsetup\" id=\"manualsetup\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>Manually set up.</option>\r\n                                            <option value={false}>Do it for me.</option>\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                        {this.state.manualsetup ? (<div style={{color:\"#8C6057\"}}>Manual setup is not available during the testing phase. </div>) : (<div></div>)}\r\n                                    \r\n                                </div>) : (<div></div>)}\r\n                                *//*}\r\n                                {/*}\r\n\r\n                                <div style={{ alignSelf: \"flexEnd\", marginTop:\"30px\" }}>\r\n                                <div onClick={this.done} className=\"huv rowss\">skip</div>\r\n                                    <div style={{ width: \"35%\", marginTop:\"7px\" }} className=\"form-group\">\r\n                                        <button onClick={this.done}\r\n                                                className=\"btn btn-block backgroundColors\"\r\n\r\n                                        >\r\n                                            Finish\r\n                                            \r\n                                    </button>\r\n                                    </div>\r\n\r\n                                    \r\n                                    \r\n                                </div>\r\n                                <div style={{width:\"200px\", height:\"20px\", opacity:\"0\"}}>Spacer</div>\r\n\r\n\r\n                            </div>\r\n                        </div> \r\n                            \r\n                                \r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n*//*}\r\n             \r\n                          \r\n        );\r\n    }\r\n}\r\n/*\r\n * \r\n * <div>\r\n                                        <h4>Manual setup for Star Points.</h4>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"lastName\">Main Goal Complete</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"days\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"days\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"Supporting_Goal\">Supporting Goal complete</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"Supporting_Goal\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"Supporting_Goal\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"Homework_Practiced\">Homework Practiced</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"Homework_Practiced\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"Homework_Practiced\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"lastName\">checked for all homework</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"days\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"days\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"lastName\">Practice time logged</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"days\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"days\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\" >\r\n                                            <label htmlFor=\"lastName\">Done with days practiced in timeframe</label>\r\n                                            <input\r\n                                                style={{ width: \"40%\" }}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"days\"\r\n\r\n                                                onChange={this.handleChange}\r\n                                                name=\"days\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n */","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/editing.js",["540"],"import React, { Component } from 'react';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { isEmail } from \"validator\";\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst phone = value => {\r\n    if (value.length !== 10) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Input 10 digits without any symbols\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Editing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n\r\n        this.state = {\r\n           realusr: this.props.state,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleEditClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n                {\r\n                    this.props.currentUser === \"student\" ?\r\n                        (<div className=\"popup-box to-front homeworkScroll\">\r\n                            <div className=\"card-container6abc1shedit \" ref={this.wrapperRef}>\r\n                                <div className=\"homeworkScroll1\" >\r\n                                    <div style={{width:\"97%\"}}>\r\n                                <h1>Student Information: </h1>\r\n                                <span className=\"close-icon-2\" onClick={this.props.handleEditClose}>x</span>\r\n\r\n\r\n                                <Form\r\n                                    onSubmit={this.props.handleSub}\r\n                                    ref={c => {\r\n                                        this.form = c;\r\n                                    }}\r\n                                >\r\n                                <div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"firstName\"><b>First Name:</b></label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"first\"\r\n                                            placeholder={this.props.state.first}\r\n                                            onChange={this.props.handleChange}\r\n                                            name=\"first\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"lastName\"><b>Last Name:</b></label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"last\"\r\n                                            placeholder={this.props.state.last}\r\n                                            onChange={this.props.handleChange}\r\n                                            name=\"last\"\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\"><b>Email:</b></label>\r\n                                            <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"email\"\r\n                                            validations={[email]}\r\n                                            placeholder={this.props.state.email}\r\n\r\n                                            onChange={this.props.handleChange}\r\n                                            name=\"email\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"phone\"><b>Phone Number:</b></label>\r\n                                            <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"phone\"\r\n                                            validations={[phone]}\r\n                                            placeholder={this.props.state.phone}\r\n                                            onChange={this.props.handleChange}\r\n                                            name=\"phone\"\r\n                                        />\r\n                                    </div>\r\n                                    <p><b>About:</b></p>\r\n                                    <div className=\"form-group\" >\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            rows=\"3\"\r\n                                            id=\"about\"\r\n                                            placeholder={this.props.state.about}\r\n                                            onChange={this.props.handleChange}\r\n                                            name=\"about\"\r\n                                        ></textarea>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"doit\">\r\n                                            <button className=\"btn \" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"75px\", marginTop: \"15px\" }} value=\"submit\">Save</button>\r\n                                    </div>\r\n                                </div>\r\n                                </Form>\r\n\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        ) : (\r\n                            <div className=\"popup-box to-front homeworkScroll\">\r\n                                <div className=\"card-container6abc1shedit\" ref={this.wrapperRef}>\r\n                                    <div className=\"homeworkScroll1\">\r\n                                        <div style={{width: \"97%\"}}>\r\n                                    <h1>Teacher Information </h1>\r\n                                    <span className=\"close-icon-2\" onClick={this.props.handleEditClose}>x</span>\r\n                                    <Form\r\n                                        onSubmit={this.props.handleSub}\r\n                                        ref={c => {\r\n                                            this.form = c;\r\n                                        }}\r\n                                    >\r\n                                    <div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"firstName\"><b>First Name:</b></label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"first\"\r\n                                                placeholder={this.props.state.firstname}\r\n                                                onChange={this.props.handleChange}\r\n                                                name=\"first\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"lastName\"><b>Last Name:</b></label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"last\"\r\n                                                placeholder={this.props.state.lastname}\r\n                                                onChange={this.props.handleChange}\r\n                                                name=\"last\"\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"email\"><b>Email:</b></label>\r\n                                                <Input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"email\"\r\n                                                validations={[email]}\r\n                                                placeholder={this.props.state.email}\r\n                                                onChange={this.props.handleChange}\r\n                                                name=\"email\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"phone\"><b>Phone Number:</b></label>\r\n                                                <Input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"phone\"\r\n                                                validations={[phone]}\r\n                                                placeholder={this.props.state.phone}\r\n\r\n                                                onChange={this.props.handleChange}\r\n                                                name=\"phone\"\r\n                                            />\r\n                                            </div>\r\n                                            \r\n                                        <div className=\"form-group\" >\r\n                                        <label htmlFor=\"phone\"><b>About:</b></label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                rows=\"3\"\r\n                                                id=\"about\"\r\n                                                placeholder={this.props.state.about}\r\n                                                onChange={this.props.handleChange}\r\n                                                name=\"about\"\r\n                                            ></textarea>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div className=\"doit\">\r\n                                                <button className=\"btn \" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"75px\", marginTop: \"15px\" }} value=\"submit\" >Save</button>\r\n                                        </div>\r\n                                        </div>\r\n                                    </Form>\r\n</div>\r\n                                </div></div>\r\n                            </div>\r\n                        )}\r\n        </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Editing;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/diapicture.js",["541"],"import React, { Component } from 'react';\r\nimport Files from \"./diapiccontent.js\";\r\nimport Full from \"./fullpic\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nclass Pic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openFull = this.openFull.bind(this);\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n\r\n        this.state = {\r\n            current: AuthService.getCurrentUser(),\r\n            setIsOpen: false,\r\n            src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            previewImage: undefined,\r\n            fullpic: false,\r\n            ad: false,\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n\r\n\r\n        if (this.props.realusr) {\r\n            if (this.props.realusr.profilepic) {\r\n                const porfilePic = this.props.realusr.profilepic;\r\n\r\n                //const porfilePic = 'http://localhost8080/api/' + this.props.realusr.profilepic;\r\n\r\n                this.setState({ src: porfilePic })\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                })\r\n            }\r\n            \r\n        }\r\n\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n\r\n    handleChange = (files) => {\r\n        this.setState({\r\n            src: files,\r\n\r\n        })\r\n    }\r\n    openFull() {\r\n        this.setState({\r\n            fullpic: true,\r\n\r\n        })\r\n    };\r\n    handleClose(){\r\n    this.setState({\r\n        fullpic: false,\r\n\r\n    })\r\n}\r\n\r\n    render() {\r\n        return (\r\n           \r\n            <div className=\"popup-box to-front\">\r\n                { this.state.fullpic && (<Full handleClose={this.handleClose} img={this.state.src}/>)}\r\n                <div className=\"diapicbox\" ref={this.wrapperRef}>\r\n\r\n                    \r\n                        <div>\r\n                    <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                        <h1>Profile Photo</h1>\r\n                    </div>\r\n                     <div >   \r\n                    <img\r\n                        src={this.state.src}\r\n                        alt=\"profile-img-card\"\r\n                            className=\" profile-img-card2 cropped1\"\r\n                        \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        {this.props.realusr ? (<div>\r\n                            {this.state.current.role===\"admin\" ? (<div><Files handleChange={this.handleChange} usr={this.props.realusr} /></div>) : (<div>{this.props.realusr.role === \"student\" ? (<div><Files handleChange={this.handleChange} usr={this.props.realusr} /></div>) : (<div><Files handleChange={this.handleChange} /></div>)}\r\n</div>)}\r\n</div>):(<div></div>)}\r\n                    \r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Pic;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/editBackground.js",["542"],"import React, { Component } from 'react';\r\nimport Files from \"./diapiccontent.js\";\r\nimport background from \"./music.png\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nclass EditBack extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.state = {\r\n            setIsOpen: false,\r\n            backsrc: background,\r\n            current: AuthService.getCurrentUser(),\r\n\r\n            previewImage: undefined,\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n        if (this.props.realusr.backgroundpic) {\r\n            //const backgroundpic = 'http://localhost:8080' + this.props.realusr.backgroundpic;\r\n            const backgroundpic = this.props.realusr.backgroundpic;\r\n            this.setState({ backsrc: backgroundpic })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleBackClose();\r\n        }\r\n    }\r\n    handleChange = (files) => {\r\n        this.setState({\r\n            backsrc: files,\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup-box to-front\" >\r\n\r\n                <div className=\"diapicbox3\" ref={this.wrapperRef}>\r\n\r\n\r\n                    <div>\r\n                        <span className=\"close-icon-2\" onClick={this.props.handleBackClose}>x</span>\r\n                        <h1>Background Photo</h1>\r\n                    </div>\r\n                    <div className=\"profile-img-card3\" >\r\n                        <img\r\n                            src={this.state.backsrc}\r\n                            alt=\"profile-img-card\"\r\n                            className=\"cropped2\"\r\n                            \r\n                            \r\n\r\n                        />\r\n                    </div>\r\n                    <div>\r\n\r\n                        {this.state.current.role === \"admin\" ? (<div><Files handleChange={this.handleChange} usr={this.props.realusr} background={true} /></div>) : (<div>{this.props.realusr.role === \"student\" ? (<div><Files handleChange={this.handleChange} usr={this.props.realusr} background={true} /></div>) : (<div><Files handleChange={this.handleChange} background={true} /></div>)}</div>)}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EditBack;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/homeworks.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/showHomework.js",["543"],"import React from 'react';\r\nimport Homeworking from './show_homework.js';\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nfunction ShowHomework(props) {\r\n  \r\n    \r\n    return <div style={{zIndex: \"1005\"}}>\r\n\r\n        <Homeworking handleClose={props.hideHomework}\r\n            handletheclose={props.handletheclose}\r\n            homework={props.homework}\r\n            student={props.student}\r\n            role={props.role}\r\n            handleChange={props.handleChange}\r\n            edited={props.edited}\r\n            id={props.id}\r\n            homeworks={props.homeworks}\r\n            student={props.student}\r\n            practice={props.practice}\r\n            fix={props.fix}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default ShowHomework;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/routeFunc.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/progress.js",["544","545","546","547"],"import React, { Component } from \"react\";\r\nimport \"./progress_circle.css\";\r\n//not much here but functionality will be added for the goals.\r\nexport default class Progress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            stylel: \"rotate(180deg)\",\r\n            styler: \"rotate(180deg)\",\r\n            completedGoals: 0,\r\n            incompletGoals: 0,\r\n            totalGoals: 0,\r\n            percent: \"\",\r\n\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.goals)\r\n        var totalgoals= this.props.goals.length\r\n        for (let i=0; i<this.props.goals.length; i++){\r\n            console.log(this.props.goals[i].mainGoal);\r\n            let goalz= this.props.goals[i]\r\n            for(let i=0; i<goalz.mainGoal.goals.length; i++){\r\n                \r\n                totalgoals++\r\n            }\r\n        }\r\n        if(this.props.main){\r\n            this.setState({\r\n                totalGoals: totalgoals\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                totalGoals: totalgoals\r\n            })\r\n        }\r\n   \r\n        this.progressCalc();\r\n\r\n       \r\n        \r\n            \r\n        \r\n    }\r\n    async progressCalc() {\r\n\r\n        let completedGoals = 0;\r\n        let goals = 0;\r\n\r\n        for (let i = 0; i < this.props.goals.length; i++) {\r\n\r\n            if (this.props.goals[i].mainGoal.complete) {\r\n                completedGoals += 1;\r\n            }\r\n            else {\r\n                goals += 1;\r\n            }\r\n            let goalz= this.props.goals[i]\r\n            for(let i=0; i<goalz.mainGoal.goals.length; i++){\r\n                if(goalz.mainGoal.goals[i]){\r\n                if(goalz.mainGoal.goals[i].complete){\r\n                    console.log(goalz.mainGoal.goals[i].complete);\r\n                    completedGoals += 1;\r\n                }\r\n                else {\r\n                    goals += 1;\r\n                }\r\n            }\r\n            }\r\n        }\r\n        if (this.props.main) {\r\n            if (this.props.main.complete) {\r\n                completedGoals += 1;\r\n            }\r\n        }\r\n        \r\n        await this.setState({\r\n            completedGoals: completedGoals,\r\n            incompletGoals: goals,\r\n        })\r\n        \r\n        console.log(this.state.totalGoals);\r\n        let calc = 100 / this.state.totalGoals;\r\n        let percentage = calc * this.state.completedGoals;\r\n        let calculate = 360 / this.state.totalGoals;\r\n        let calculated = calculate * this.state.completedGoals;\r\n        let overcalc =0;\r\n        \r\n\r\n        if (calculated > 180) {\r\n            overcalc = calculated - 180;\r\n            calculated = 180;\r\n\r\n        } \r\n        console.log(calculated);\r\n\r\n        console.log(overcalc);\r\n        const stylel = \"rotate(\" + calculated.toString() + \"deg)\";\r\n        const styler = \"rotate(\" + overcalc.toString() + \"deg)\";\r\n\r\n        \r\n        let percent = percentage.toString();\r\n        let perc = \"\";\r\n        if (percent.length > 4) {\r\n\r\n            for (let i = 0; i < 4; i++) {\r\n                perc += percent[i];\r\n            }\r\n        }\r\n        else {\r\n            perc = percent;\r\n        }\r\n\r\n        this.setState({\r\n            percent: perc,\r\n            stylel: stylel,\r\n            styler: styler,\r\n\r\n        });\r\n\r\n        if(!this.props.main){\r\n            if(this.props.goals.length===0){\r\n                this.setState({\r\n                    percent: \"0\",\r\n                    stylel: \"rotate(\" + \"0\" + \"deg)\",\r\n                    styler: \"rotate(\" + \"0\" + \"deg)\"\r\n\r\n                })\r\n            }\r\n        }\r\n    \r\n    }\r\n    /*\r\n     \r\n     */\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                {this.props.profile ? (\r\n                    <div>\r\n                        {this.props.userProfile?(\r\n                        \r\n                        <div  >\r\n                            {this.state.percent===\"0\"?(<div>\r\n                                <div className=\"circlesI\">\r\n                            <div className=\"inner\">\r\n                                <img\r\n                                    src={this.props.pic}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-carda  cropped1 \"\r\n\r\n                                />\r\n                            </div>\r\n                           \r\n                                \r\n\r\n                            \r\n                           \r\n                        \r\n                            <div className=\"circleI\">\r\n                            <div className=\"bar left\">\r\n                                <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                            </div>\r\n                            <div className=\"bar right\">\r\n                                <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                            </div>):(<div>\r\n\r\n                                <div className=\"circles5\">\r\n                            <div className=\"inner\">\r\n                                <img\r\n                                    src={this.props.pic}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-carda  cropped1 \"\r\n\r\n                                />\r\n                            </div>\r\n                           \r\n                                \r\n\r\n                            \r\n                           \r\n                        \r\n                            <div className=\"circle5\">\r\n                            <div className=\"bar left\">\r\n                                <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                            </div>\r\n                            <div className=\"bar right\">\r\n                                <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                            </div>)}\r\n                            \r\n                        \r\n\r\n\r\n                        </div>):(<div>\r\n\r\n                            {this.state.percent===\"0\"?(<div className=\"circlesIa\">\r\n                            <div className=\"inner\">\r\n                                <img\r\n                                    src={this.props.pic}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-carda  cropped1 \"\r\n\r\n                                />\r\n                            </div>\r\n                           \r\n                                \r\n\r\n                            \r\n                           \r\n                        \r\n                            <div className=\"circleIa\">\r\n                            <div className=\"bar left\">\r\n                                <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                            </div>\r\n                            <div className=\"bar right\">\r\n                                <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>):(<div className=\"circles4\">\r\n                            <div className=\"inner\">\r\n                                <img\r\n                                    src={this.props.pic}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-carda  cropped1 \"\r\n\r\n                                />\r\n                            </div>\r\n                           \r\n                                \r\n\r\n                            \r\n                           \r\n                        \r\n                            <div className=\"circle4\">\r\n                            <div className=\"bar left\">\r\n                                <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                            </div>\r\n                            <div className=\"bar right\">\r\n                                <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>)}\r\n                            \r\n                        <div className=\"number2\" style={{marginTop:\"25px\"}}>{this.state.percent}% Towards Goal</div>\r\n                            \r\n                        </div>)}\r\n                        \r\n                    </div>\r\n\r\n                ) : (<div>\r\n                    {this.state.percent===\"0\"?(\r\n\r\n                        <div className=\"circlesI3 \">\r\n                            <div className=\"inner \"></div><div className=\" innera\"></div>\r\n                    <div className=\"number\">{this.state.percent}%</div>\r\n                            <div className=\"circleI3\">\r\n                                <div className=\"bar left\">\r\n                                    <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                                </div>\r\n                                <div className=\"bar right\">\r\n                                    <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ):(\r\n\r\n                        <div className=\"circles3 \">\r\n                            <div className=\"inner \"></div><div className=\" innera\"></div>\r\n                    <div className=\"number\">{this.state.percent}%</div>\r\n                            <div className=\"circle3\">\r\n                                <div className=\"bar left\">\r\n                                    <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                                </div>\r\n                                <div className=\"bar right\">\r\n                                    <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                        \r\n\r\n                    </div>)}\r\n            \r\n                \r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n/*\r\n \r\n */","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/dropdown.js",["548"],"import React, { Component } from \"react\";\r\n\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass Dropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n\r\n        this.monday = this.monday.bind(this);\r\n        this.tuesday = this.tuesday.bind(this);\r\n        this.wednesday = this.wednesday.bind(this);      \r\n        this.thursday = this.thursday.bind(this);      \r\n        this.friday = this.friday.bind(this);   \r\n        this.saturday = this.saturday.bind(this);   \r\n        this.sunday = this.sunday.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.changeTime = this.changeTime.bind(this);\r\n\r\n       \r\n        \r\n        \r\n\r\n\r\n\r\n        this.state = {\r\n            hr: [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",],\r\n            mins: [],\r\n            \r\n            clock: this.props.clock,\r\n            \r\n                hour: \"01\",\r\n                min: \"00\",\r\n                zone: \"am\",\r\n            \r\n\r\n          \r\n\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        let ar =[]\r\n        for (let i = 0; i < 60; i++) {\r\n            if (i < 10) {\r\n                let n = \"0\" + (i.toString())\r\n                \r\n                ar.push(n)\r\n            }\r\n            else {\r\n                ar.push(i.toString())\r\n            }\r\n\r\n        }\r\n        \r\n        this.setState({\r\n            mins: ar\r\n        })\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.closedrop();\r\n        }\r\n    }\r\n\r\n    async changeTime(time, type) {\r\n        \r\n\r\n        await this.setState({\r\n            \r\n                [type]: time\r\n            \r\n        })\r\n\r\n        let returntime = \"\";\r\n        let showtime = \"\";\r\n        if (this.state.zone === \"am\") {\r\n            returntime += this.state.hour + \":\" + this.state.min;\r\n            showtime = returntime + \" am\";\r\n        }\r\n        else {\r\n            var miliatry = parseInt(this.state.hour) + 12;\r\n            returntime += miliatry.toString() + \":\" + this.state.min;\r\n            showtime += this.state.hour + \":\" + this.state.min + \" pm\";\r\n        }\r\n        \r\n        this.props.changeTime(returntime, showtime)\r\n        \r\n    }\r\n\r\n    monday() {\r\n        this.props.selectDay(\"Monday\")\r\n    }\r\n    tuesday() {\r\n        this.props.selectDay(\"Tuesday\")\r\n    }\r\n    wednesday() {\r\n        this.props.selectDay(\"Wednesday\")\r\n    }\r\n    thursday() {\r\n        this.props.selectDay(\"Thursday\")\r\n    }\r\n    friday() {\r\n        this.props.selectDay(\"Friday\")\r\n    }\r\n    saturday() {\r\n        this.props.selectDay(\"Saturday\")\r\n    }\r\n    sunday() {\r\n        this.props.selectDay(\"Sunday\")\r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div ref={this.wrapperRef} className=\"dropDown\">\r\n                {this.state.clock ? (<div style={{ display: \"flex\", flexDirection: \"row\", height: \"160px\",}}>\r\n                    <div style={{height:\"150px\", }}>\r\n                        <div className=\"homeworkScroll \">\r\n                            {this.state.hr.map((hr, index) => <div key={index}>\r\n                                {this.state.hour === hr ? (\r\n                                    <div  onClick={this.changeTime.bind(this, hr, \"hour\")} className=\"dropDowndivs centerized\" style={{ width: \"30px\", height: \"30px\", display: \"flex\", justifyContent: \"center\", color:\"#F0F2EF\", background:\"#696eb5\", flexDirection: \"row\" }}>\r\n                                        <p style={{ alignSelf: \"center\", marginTop: \"14px\" }}>{hr}</p>\r\n                                    </div>\r\n\r\n                                ) : (\r\n                                        <div  onClick={this.changeTime.bind(this, hr, \"hour\")} className=\"dropDowndivs centerized\" style={{ width: \"30px\", height: \"30px\", display: \"flex\", justifyContent: \"center\", flexDirection: \"row\" }}>\r\n                                            <p style={{ alignSelf: \"center\", marginTop: \"14px\" }}>{hr}</p>\r\n                                        </div>\r\n\r\n                                )}\r\n                                \r\n                                </div>\r\n\r\n                            )}</div>\r\n                    </div>\r\n                    <div style={{ height: \"150px\", }}>\r\n                        <div className=\"homeworkScroll \">\r\n                            {this.state.mins.map((min, index) =>\r\n                                <div key={index}>\r\n                            {\r\n                                this.state.min === min ? (\r\n                                            <div  className=\"dropDowndivs centerized\" onClick={this.changeTime.bind(this, min, \"min\")} style={{ width: \"30px\", height: \"30px\", color: \"#F0F2EF\", background: \"#696eb5\", display: \"flex\", justifyContent: \"center\", flexDirection: \"row\" }} >\r\n                                                <p style={{ alignSelf: \"center\", marginTop: \"14px\" }}>{min}</p>\r\n                                            </div>\r\n\r\n                                ) : (\r\n                                                <div  className=\"dropDowndivs centerized\" onClick={this.changeTime.bind(this, min, \"min\")} style={{ width: \"30px\", height: \"30px\", display: \"flex\", justifyContent: \"center\", flexDirection: \"row\" }} >\r\n                                                    <p style={{ alignSelf: \"center\", marginTop: \"14px\" }}>{min}</p>\r\n                                                </div>\r\n\r\n                                )\r\n                            }</div>\r\n                                \r\n\r\n                            )}</div>\r\n                    </div>\r\n                    <div >\r\n                        <div style={{ height: \"150px\", }}>\r\n                        {this.state.zone === \"am\" ? (\r\n                            \r\n                                <div className=\"dropDowndivs centerized\" onClick={this.changeTime.bind(this, \"am\", \"zone\")} style={{ width: \"30px\", height: \"30px\", display: \"flex\", justifyContent: \"center\", color: \"#F0F2EF\", background: \"#696eb5\", flexDirection: \"row\" }}><p style={{ alignSelf: \"center\", marginTop: \"14px\" }}>am</p></div>\r\n\r\n                            ) : (\r\n                                    <div className=\"dropDowndivs centerized\" onClick={this.changeTime.bind(this, \"am\", \"zone\")} style={{ width: \"30px\", height: \"30px\", display: \"flex\", justifyContent: \"center\", flexDirection: \"row\" }}><p style={{ alignSelf: \"center\", marginTop: \"14px\" }}>am</p></div>\r\n\r\n                                )}\r\n                            {this.state.zone === \"pm\" ? (\r\n\r\n                                <div className=\"dropDowndivs centerized\" onClick={this.changeTime.bind(this, \"pm\", \"zone\")} style={{ width: \"30px\", height: \"30px\", display: \"flex\", color: \"#F0F2EF\", background: \"#696eb5\", justifyContent: \"center\", flexDirection: \"row\" }}><p style={{ alignSelf: \"center\", marginTop: \"14px\" }}>pm</p></div>\r\n\r\n                            ) : (\r\n                                    <div className=\"dropDowndivs centerized\" onClick={this.changeTime.bind(this, \"pm\", \"zone\")} style={{ width: \"30px\", height: \"30px\", display: \"flex\", justifyContent: \"center\", flexDirection: \"row\" }}><p style={{ alignSelf: \"center\", marginTop: \"14px\" }}>pm</p></div>\r\n\r\n                                )}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>) : (\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <div onClick={this.monday} className=\"dropDowndivs\">\r\n                                Monday\r\n                    </div>\r\n                            <div onClick={this.tuesday} className=\"dropDowndivs\">\r\n                                Tuesday\r\n                    </div>\r\n                            <div onClick={this.wednesday} className=\"dropDowndivs\">\r\n                                Wednesday\r\n                    </div>\r\n                            <div onClick={this.thursday} className=\"dropDowndivs\">\r\n                                Thursday\r\n                    </div>\r\n                            <div onClick={this.friday} className=\"dropDowndivs\">\r\n                                Friday\r\n                    </div>\r\n                            <div onClick={this.saturday} className=\"dropDowndivs\">\r\n                                Saturday\r\n                    </div>\r\n                            <div onClick={this.sunday} className=\"dropDowndivs\">\r\n                                Sunday\r\n                    </div>\r\n\r\n                        </div>\r\n\r\n                )}\r\n                \r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dropdown;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/rendering.js",["549","550"],"import React, { Component } from 'react';\r\nimport Logo from \"../legato.png\";\r\nimport Rendering from \"./rendering.js\"\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nclass Splashscreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n\r\n        \r\n\r\n      \r\n        \r\n\r\n        this.state = {\r\n           \r\n\r\n        }\r\n       \r\n\r\n    }\r\n    async componentDidMount() {\r\n        await this.wait(500);\r\n        this.props.closesplash();\r\n        \r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div >\r\n                Loading...\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Splashscreen;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/percent.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/del.js",["551"],"import React, { Component } from \"react\";\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass Del extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n\r\n        this.state = {\r\n            marginTop: \"300px\"\r\n            \r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        if(parseInt(window.innerWidth) <= 500){\r\n            this.setState({ marginTop: \"190px\" });\r\n            }\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"popup-box to-front\">\r\n                <div className=\"boxdel\" ref={this.wrapperRef} style={{marginTop: this.state.marginTop}}>\r\n                    <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                    <div>\r\n                        <p style={{ marginTop: \"10px\" }}>Are you sure you would like to delete this student? This cannot be undone.</p>\r\n                        <div className=\"form-group forfiles1\" style={{ marginTop: \"20px\" }}>\r\n                            <div >\r\n                                <button style={{ width: \"100px\", backgroundColor: \"#7A9B76\", color: \"#F0F2EF\" }} className=\"btn  \" value=\"submit\" onClick={this.props.delete}>Yes</button>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <button style={{ width: \"100px\", backgroundColor: \"#6d1404\", color: \"#F0F2EF\" }}  className=\"btn   \" value=\"submit\" onClick={this.props.handleClose}>No</button>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Del;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/showgoal.js",["552"],"import React from 'react';\r\nimport Show_goal from './show_goal.js';\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nfunction ShowGoal(props) {\r\n  \r\n    \r\n    return <div style={{zIndex: \"1005\"}}>\r\n\r\n        <Show_goal handleClose={props.handleClose}\r\n\r\n            Goal={props.Goal}\r\n            role={props.role}\r\n            handleChange={props.handleChange}\r\n            handletheclose={props.handletheclose}\r\n            main={props.main}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default ShowGoal;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/diagoal.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/moreProgress.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/archiving.js",["553"],"import React, { Component } from \"react\";\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass Del extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n\r\n        this.state = {\r\n            \r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"popup-box to-front\">\r\n                <div className=\"boxdel\" ref={this.wrapperRef}>\r\n                    <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                    <div>\r\n                        <p style={{ marginTop: \"10px\" }}>Are you sure you would like to mark this goal as archived? You will lose access to use this as a goal.</p>\r\n                        <div className=\"form-group forfiles1\" style={{ marginTop: \"20px\" }}>\r\n                            <div >\r\n                                <button style={{ width: \"140px\", backgroundColor: \"#696eb5\", color: \"#F0F2EF\" }} className=\"btn  \" value=\"submit\" onClick={this.props.handlegoal}>Complete Goal</button>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <button style={{ width: \"100px\", backgroundColor: \"#C8CAE4\", color: \"#F0F2EF\" }}  className=\"btn   \" value=\"submit\" onClick={this.props.handleClose}>No</button>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Del;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/starpointz.js",["554"],"import React, { Component } from 'react';\r\n//import Gif from \"./starsvid.mp4\";\r\nimport Gif from \"./stars.gif\"\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nclass Starpointz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        \r\n        \r\n        this.state = {\r\n           \r\n            ttempDescription:\"\"\r\n        }\r\n       \r\n\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.handleClose();\r\n            \r\n        }\r\n    }\r\n    handleClose(){\r\n        window.location.reload();\r\n        this.props.handleClose()\r\n    }\r\n\r\n   \r\n  \r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n\r\n    }\r\n\r\n    \r\n  \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"popup-box to-front\" style={{zIndex: \"3000\"}}>\r\n                <div ref={this.wrapperRef} className=\"diapicboxa\">\r\n                    <span className=\"close-icon-2\" onClick={this.handleClose}>x</span>\r\n\r\n                   <div>\r\n                    <div style={{display:\"flex\", flexDirection:\"row\", justifyContent: \"center\", marginTop:\"20px\", }}>\r\n                      \r\n\r\n                        <h5>You got star points!</h5>\r\n                        </div>\r\n                        \r\n                              \r\n\r\n\r\n                                    <div style={{display:\"flex\", flexDirection:\"row\", justifyContent: \"center\",  }}>\r\n                                    <img src={Gif} alt=\"starpoints\" style={{width:\"300px\", height:\"270px\" }}/>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    \r\n                                   \r\n\r\n\r\n\r\n                               \r\n\r\n\r\n                                    \r\n                              \r\n\r\n                                \r\n\r\n\r\n                    </div>\r\n                    \r\n                   \r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Starpointz;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/checkbox2.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/editProgress.js",["555","556","557","558","559","560"],"import React, { Component } from 'react';\r\nimport Checkboxnum from \"./practice.js\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport edit from \"./edit.png\";\r\nimport Checkboxnum2 from \"./practice2.js\";\r\nimport { button } from 'react-validation/build/button';\r\n\r\n//import PropTypes from 'prop-types';\r\n\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nexport default class EditProgress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cleartotaldays = this.cleartotaldays.bind(this);\r\n        this.cleartimepracticed = this.cleartimepracticed.bind(this);\r\n\r\n        \r\n        \r\n        \r\n        \r\n        this.state = {\r\n            starPoints: false,\r\n            temppracticegoal:false,\r\n            totalDays: this.props.state.totalDays,\r\n            totalTime: this.props.state.totalTime,\r\n            temptimegoal: false,\r\n            justifyContent: \"\",\r\n            dayscleared: false,\r\n            timecleared: false,\r\n\r\n        }\r\n       \r\n\r\n    }\r\n    cleartotaldays(){\r\n        this.setState({dayscleared: true})\r\n        this.props.cleartotaldays();\r\n\r\n    }\r\n    cleartimepracticed(){\r\n        this.setState({timecleared: true})\r\n        this.props.cleartimepracticed()\r\n    }\r\n    handleChange(event){\r\n    const { name, value } = event.target\r\n\r\n\r\n    this.setState({\r\n        [name]: value,\r\n    })\r\n\r\n    if (value === \"true\") {\r\n        this.setState({\r\n            [name]: true,\r\n        })\r\n    }\r\n    else if (value === \"false\") {\r\n        this.setState({\r\n            [name]: false,\r\n        })\r\n    }\r\n    this.props.handleChange(event);\r\n}\r\n    componentDidMount() {\r\n        if(parseInt(window.innerWidth) <= 550){\r\n            this.setState({ \r\n                justifyContent: \"center\"\r\n                \r\n            });\r\n        }\r\n        if(this.props.state.starPoints){\r\n            this.setState({\r\n                starPoints:true\r\n            })\r\n        }\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"popup-boxa to-front\" style={{ }} >\r\n\r\n                <div ref={this.wrapperRef} className=\"card-container6abc1shedit\" >\r\n                    <div className=\"fill2 homeworkScroll1\" >\r\n                    <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                    <div style={{ width: \"100%\" }}>\r\n                    <h2 style={{display:\"flex\", flexDirection:\"row\", justifyContent:this.state.justifyContent}}>Progress</h2>\r\n                       \r\n                            <div className=\"form-group\">\r\n                                <label>Track Star Points?</label>\r\n                                <select htmlfor=\"starPoints\" onChange={this.props.handleChange} name=\"starPoints\" id=\"starPoints\">\r\n                                    {this.props.state.starPoints?(<option value={true}>Current: yes</option>):( <option value={false}>Current: no</option>)}\r\n                                     <option value={true}>yes</option>\r\n                                     <option value={false}>no</option>\r\n\r\n                                    \r\n                                    \r\n\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Track Total Days Practiced?</label>\r\n                                <select htmlfor=\"daysbool\" onChange={this.props.handleChange} name=\"daysbool\" id=\"daysbool\">\r\n                                   {this.props.state.daysbool?(<option value={true}> Current: yes</option>):(<option value={false}> Current: no</option>)}\r\n                                   <option value={true}>yes</option>\r\n                                   <option value={false}>no</option>\r\n\r\n                                    \r\n                                    \r\n\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Track Total Time Practiced?</label>\r\n                                <select htmlfor=\"timebool\" onChange={this.props.handleChange} name=\"timebool\" id=\"timebool\">\r\n                                {this.props.state.timebool?(<option value={true}>Current: yes</option>):(<option value={false}>Current: no</option>)}\r\n                                <option value={true}>yes</option>\r\n                                   <option value={false}>no</option>\r\n\r\n                                    \r\n\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            \r\n                            <div>\r\n                            <div className=\"form-group\">\r\n                                <label>Set a new goal for practice days?</label>\r\n                                <select htmlfor=\"temppracticegoal\" onChange={this.handleChange} name=\"temppracticegoal\" id=\"temppracticegoal\">\r\n                                <option value={false}>no</option>\r\n                                    <option value={true}>yes</option>\r\n                                    <option value=\"cancelday\">Delete Current Goal</option>\r\n\r\n                                </select>\r\n                            </div>\r\n                            {this.state.temppracticegoal  === true?(<div>\r\n\r\n                                <div className=\"form-group\" >\r\n                                <label htmlFor=\"totalDays\">Days to practice:</label>\r\n                                <input\r\n\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                        id=\"totalDays\"\r\n                                    style={{ width: \"60px\" }}\r\n                                    value={this.state.totalDays}\r\n                                    onChange={this.handleChange}\r\n                                        name=\"totalDays\"\r\n                                />\r\n\r\n\r\n                            </div>\r\n                            {/* \r\n                            <div className=\"form-group checkboxstuff2\" style={{ marginleft: \"55px\", marginBottome: \"15px\" }}>\r\n                                <div>\r\n                                    <p>From:</p>\r\n                                    <input\r\n                                        id=\"tempsmonths\"\r\n                                            name=\"tempsmonths\"\r\n                                        style={{ width: \"200px\" }}\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n\r\n\r\n                                            onChange={this.props.handleChange}\r\n\r\n                                    />\r\n                                </div>\r\n                                <div style={{ marginLeft: \"60px\" }}>\r\n                                    <p>To:</p>\r\n                                    <input\r\n                                        id=\"tempemonths\"\r\n                                            name=\"tempemonths\"\r\n                                        style={{ width: \"200px\" }}\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n\r\n\r\n                                            onChange={this.props.handleChange}\r\n\r\n                                    />\r\n                                    </div>\r\n                                </div>*/}\r\n                            </div>):(<div>\r\n                                Current Goal: {this.props.state.totalDays} days.\r\n                            </div>)}\r\n                            <button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", marginTop:\"5px\", width:\"185px\" }} \r\n                            onClick={this.cleartotaldays}>{!this.state.dayscleared?(<span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Days Practiced</p></span>):(<span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Days Cleared</p></span>)}</button>\r\n\r\n                            \r\n                                <div>\r\n                            <div className=\"form-group\">\r\n                                <label>Set a new goal for practice time?</label>\r\n                                <select htmlfor=\"temptimegoal\" onChange={this.handleChange} name=\"temptimegoal\" id=\"temptimegoal\">\r\n                                <option value={false}>no</option>\r\n\r\n                                            <option value={true}>yes</option>\r\n                                            <option value=\"canceltime\">Delete Current Goal</option>\r\n\r\n                                </select>\r\n                                </div>\r\n                                {this.state.temptimegoal === true?(<div>\r\n                                    <div className=\"form-group\" >\r\n                                    <label htmlFor=\"totalTime\">Practice minutes:</label>\r\n                                    <input\r\n\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                            id=\"totalTime\"\r\n                                            value={this.state.totalTime}\r\n                                        style={{ width: \"60px\" }}\r\n                                            onChange={this.handleChange}\r\n                                            name=\"totalTime\"\r\n                                    />\r\n\r\n\r\n                                </div>\r\n                                {/* \r\n                                <div className=\"form-group checkboxstuff2\" >\r\n                                    <div>\r\n                                        <p>From:</p>\r\n                                        <input\r\n                                            id=\"temptsmonths\"\r\n                                                name=\"temptsmonths\"\r\n                                            style={{ width: \"200px\" }}\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                                onChange={this.props.handleChange}\r\n\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ marginLeft: \"55px\" }}>\r\n                                        <p>To:</p>\r\n                                        <input\r\n                                            id=\"temptemonths\"\r\n                                                name=\"temptemonths\"\r\n                                            style={{ width: \"200px\" }}\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                                onChange={this.props.handleChange}\r\n\r\n                                        />\r\n                                    </div>\r\n                                        </div>*/}\r\n                            \r\n\r\n\r\n                                </div>):(<div>\r\n                                    Current Time Goal: {this.props.state.totalTime} Minutes\r\n                                </div>)}\r\n                                <button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", marginTop:\"5px\", width:\"185px\" }} \r\n                                onClick={this.cleartimepracticed}>{!this.state.timecleared?(<span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Time Practiced</p></span>):(<span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Time Cleared</p></span>)}</button>\r\n\r\n\r\n                                \r\n\r\n                  \r\n                                </div>\r\n                                <button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", marginTop:\"20px\", width:\"125px\" }} onClick={this.props.editalltheProgress}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Save</p></span></button>\r\n\r\n                    </div>\r\n                   \r\n                    \r\n                </div>\r\n                    </div>\r\n                </div></div>\r\n            \r\n\r\n        )\r\n\r\n    }\r\n}\r\n","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/setday.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/addStudent.js",["561"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { isEmail } from \"validator\";\r\nimport Dropdown from \"./dropdown.js\"\r\nimport Down from \"./downarrow.png\"\r\nimport clock from \"./clock.png\"\r\n//this component details my dialog help component\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst required = value => {\r\n    if (value===\"\") {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\nclass Popup extends Component{\r\n    //using the functions sent from the profile page allows me to send back student information typed in to profile and then to the backend. \r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.selectDay = this.selectDay.bind(this);\r\n        this.selectDays = this.selectDays.bind(this);\r\n        this.selectTime = this.selectTime.bind(this);\r\n        this.closedrop = this.closedrop.bind(this);\r\n        this.changeTime = this.changeTime.bind(this);\r\n\r\n        \r\n        \r\n        \r\n        \r\n        this.setWrapperRef = this.setWrapperRef;\r\n        \r\n\r\n        \r\n        this.state = {\r\n            selectDay: false,\r\n            selectTime: false,\r\n            day: \"\",\r\n            time: \"\",\r\n            toosmall: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(parseInt(window.innerWidth) <= 325){\r\n            this.setState({ toosmall: true });\r\n            }\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.props.handleChange(event);\r\n        \r\n    }\r\n    AddStudents = (e) => {\r\n        this.props.AddStudents(e);\r\n\r\n        \r\n    }\r\n    selectDays(day) {\r\n        this.props.selectDay(day);\r\n\r\n        this.setState({\r\n            day: day\r\n        })\r\n        console.log(day);\r\n        this.selectDay();\r\n        \r\n    }\r\n    selectDay() {\r\n        this.setState({\r\n            selectDay: !this.state.selectDay,\r\n        })\r\n        \r\n    }\r\n    closedrop() {\r\n        this.setState({\r\n            selectDay: false,\r\n            selectTime: false,\r\n\r\n        })\r\n    }\r\n    changeTime(time, showtime) {\r\n        this.setState({\r\n            time: showtime\r\n        })\r\n        this.props.changeTime(time);\r\n    }\r\n    selectTime() {\r\n        this.setState({\r\n            selectTime: !this.state.selectTime,\r\n            \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"popup-box\">\r\n                <div className=\"box_add\" ref={this.wrapperRef}>\r\n                    <span className=\"close-icon-2\" style= {{color:\"#8C6057\"}} onClick={this.props.handleClose}>x</span>\r\n                    <Form\r\n                        onSubmit={this.AddStudents}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstName\"><b>Student First Name:</b>*</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"first\"\r\n                                    validations={[required]}\r\n\r\n                                onChange={this.handleChange}\r\n                                name=\"first\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\"><b>Student Last Name:</b>*</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"last\"\r\n                                    validations={[required]}\r\n\r\n                                onChange={this.handleChange}\r\n                                name=\"last\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                                <label htmlFor=\"email\"><b>Student Email:</b>*</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"email\"\r\n                                    validations={[required, email]}\r\n\r\n                                onChange={this.handleChange}\r\n                                name=\"email\"\r\n                            />\r\n                            </div>\r\n\r\n                            \r\n                       \r\n                            <div className=\"form-group forfiles\" >\r\n                                \r\n                                <div>\r\n                                    <label htmlfor=\"time\"><b>Scheduled Time:</b></label>\r\n                                    <div\r\n\r\n                                        className=\"form-control\"\r\n                                        id=\"time\"\r\n                                        onClick={this.selectTime}\r\n                                        style={{ width: \"120px\", height: \"30px\", flexDirection: \"row\", display: \"flex\" }}\r\n\r\n\r\n                                    >\r\n                                        <div style={{ width: \"90px\", alignSelf: \"center\" }}>{this.state.time}</div>\r\n                                        <img src={clock} alt=\"clock\" style={{ width: \"15px\", height: \"15px\", }} />\r\n\r\n                                    </div>\r\n                                    {this.state.selectTime ? (<Dropdown selectDay={this.selectDays} clock={true} closedrop={this.closedrop} changeTime={this.changeTime}/>) : (<div></div>)}\r\n\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlfor=\"day\"><b>Day: </b></label>\r\n                                    <div\r\n\r\n                                        className=\"form-control\"\r\n                                        id=\"day\"\r\n                                        onClick={this.selectDay}\r\n                                        style={{ width: \"110px\", height: \"30px\", flexDirection: \"row\", display:\"flex\" }}\r\n\r\n\r\n                                    >\r\n                                        <div style={{width:\"90px\", alignSelf:\"center\"}}>{this.state.day}</div>\r\n                                        <img src={Down} alt=\"arrowdow\" style={{ width: \"17px\", height: \"17px\",  }} />\r\n\r\n                                    </div>\r\n                                    {this.state.selectDay ? (<Dropdown selectDay={this.selectDays} clock={false} closedrop={this.closedrop} />) : (<div></div>)}\r\n                                </div>\r\n                                {this.state.toosmall?(<div >\r\n                                \r\n                                </div>):(<div style={{opacity:\"0\"}}>\r\n                                thanks!\r\n                                </div>)}\r\n                            \r\n                        </div>\r\n\r\n                        <div style={{ marginTop: \"50px\" }}>\r\n                                <button className=\"btn \" style={{background:\"#696eb5\", color:\"#F0F2EF\" }} value=\"submit\" >Add Student</button>\r\n                            </div>\r\n                            {this.props.messag && (<div className=\"alert alert-danger\" >{this.props.message} </div>)}\r\n\r\n                    </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Popup;\r\n/*\r\n  \r\n <div>\r\n                                    <label htmlfor=\"time\"><b>Scheduled Time:</b></label>\r\n                                    <input type=\"time\" id=\"time\" onChange={this.handleChange} name=\"time\"\r\n                                        min=\"00:00\" max=\"23:59\" />\r\n                                </div>\r\n */","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/changeCurrent.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/existingPopup.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/diapiccontent.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/checkbox.js",["562"],"import React, { Component } from 'react';\r\n\r\nclass Checkedd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.markcheckbox = this.markcheckbox.bind(this);\r\n\r\n        this.state = {\r\n            checkboxValue: this.props.flag,\r\n            practice: 0,\r\n            p: this.props.flag,\r\n            style: \"27%\",\r\n            hstyle: \"20%\",\r\n            tooSmall: false,\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(parseInt(window.innerWidth) <= 400){\r\n            this.setState({ tooSmall: true, \r\n                tooSmall: true,\r\n                \r\n            });\r\n    }\r\n}\r\n  \r\n    async markcheckbox(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            p: !this.state.p,\r\n        })\r\n\r\n        await this.setState({ checkboxValue: !this.state.checkboxValue, });\r\n\r\n        this.props.props.practice(this.state.checkboxValue, this.props.props.synced, this.props.day, this.props.props.prac, );\r\n        \r\n        \r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n\r\n            <div>\r\n                { this.props.props.role === \"teacher\" ? (\r\n                    <div>\r\n                        <input type=\"checkbox\" checked={this.state.checkboxValue} />\r\n                        <label className=\"change-label2a huv\" >\r\n                            {this.props.day ? (<div>\r\n                                {this.state.p ? (\r\n                                    <div>\r\n\r\n\r\n                                        <div className=\"csyncbox\">\r\n                                        {this.props.day===\"s\"?(<p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>S</p>\r\n):(                                            <p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>{this.props.day}</p>\r\n)}\r\n\r\n                                            <div style={{ opacity: \"0\" }}>\r\n                                                {this.props.day === \"M\" ?\r\n                                                    (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                    : (<div> {this.props.day === \"W\" ? (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                        : (\r\n                                                            <div>\r\n                                                             {this.props.day===\"s\"?(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>S</h3>):(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>{this.props.day}</h3>)}\r\n\r\n                                                            </div>\r\n                                                        \r\n                                                        )}</div>)}\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                ) : (\r\n                                        <div className=\"csyncbox\">\r\n                                            \r\n                                            {this.props.day===\"s\"?( <p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\", opacity: \"0\" }}>S</p>):(<p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\", opacity: \"0\" }}>{this.props.day}</p>)}\r\n\r\n                                            \r\n                                            <div >\r\n                                                {this.props.day === \"M\" ?\r\n                                                    (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                    : (<div> {this.props.day === \"W\" ? (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                        : (\r\n                                                            <div>\r\n                                                            {this.props.day===\"s\"?(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>S</h3>):(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>{this.props.day}</h3>)}\r\n</div>\r\n                                                        \r\n\r\n                                                        \r\n                                                        )}</div>)}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    )}\r\n                            </div>) : (<div style={{ opacity: \"0\" }}>\r\n\r\n\r\n                                    <div className=\"csyncboxa\" style={{ opacity: \"0\" }}>\r\n                                    {this.props.day===\"s\"?( <p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>S</p>):( <p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>{this.props.day}</p>)}\r\n\r\n\r\n                                   \r\n                                    <div style={{ opacity: \"0\" }}>\r\n                                        {this.props.day === \"M\" ?\r\n                                            (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                            : (<div> {this.props.day === \"W\" ? (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                : (<div>\r\n                                                    {this.props.day===\"s\"?(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>S</h3>):(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>{this.props.day}</h3>)}\r\n\r\n                                                </div>\r\n                                                \r\n                                                )}</div>)}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>)}\r\n                                     \r\n\r\n                                     \r\n\r\n                            <div className=\"tick\"></div>\r\n                        </label>\r\n                        {this.state.tooSmall?(\r\n                            <div style={{ marginLeft: \"10px\" }}>\r\n                            {this.props.props.synctimes ? (<div>{this.props.time ? (<div style={{fontSize:\"12px\"}}><b>{this.props.time} m</b></div>) : (<div style={{fontSize:\"12px\"}}><b>0 m</b></div>)}</div>) : (<div> </div>)}\r\n                        </div>\r\n                        ):(\r\n                            <div style={{ marginLeft: \"10px\" }}>\r\n                            {this.props.props.synctimes ? (<div>{this.props.time ? (<div style={{fontSize:\"14px\"}}><b>{this.props.time} m</b></div>) : (<div style={{fontSize:\"14px\"}}><b>0 m</b></div>)}</div>) : (<div> </div>)}\r\n                        </div>\r\n                        )}\r\n                        \r\n                    </div>\r\n\r\n                ) : (<div >\r\n                        <div >\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"checkbox\" checked={this.state.checkboxValue} />\r\n                            <label className=\"change-label2a huv\" onClick={this.markcheckbox}>\r\n                                {this.props.day ? (<div>\r\n                                    {this.state.p ? (\r\n                                        <div>\r\n\r\n\r\n                                            <div className=\"csyncbox\">\r\n                                            {this.props.day===\"s\"?(<p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>S</p>):(<p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>{this.props.day}</p>)}\r\n\r\n                                                \r\n                                                <div style={{ opacity: \"0\" }}>\r\n                                                    {this.props.day === \"M\" ?\r\n                                                        (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                        : (<div> {this.props.day === \"W\" ? (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                            : (\r\n                                                                <div>\r\n\r\n{this.props.day===\"s\"?(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>S</h3>):(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>{this.props.day}</h3>)}\r\n\r\n                                                                </div>\r\n                                                            )}</div>)}\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                    ) : (\r\n                                            <div className=\"csyncbox\">\r\n                                                                                            {this.props.day===\"s\"?(<p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\", opacity: \"0\" }}>S</p>):(<p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\", opacity: \"0\" }}>{this.props.day}</p>)}\r\n\r\n\r\n                                                                                           \r\n                                                <div >\r\n                                                    {this.props.day === \"M\" ?\r\n                                                        (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                        : (<div> {this.props.day === \"W\" ? (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                            : (<div>\r\n                                                                {this.props.day===\"s\"?(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>S</h3>):(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>{this.props.day}</h3>)}\r\n\r\n\r\n                                                             \r\n                                                            </div>\r\n                                                            \r\n                                                            \r\n                                                            \r\n                                                            )}</div>)}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        )}\r\n                                </div>) : (<div style={{ opacity: \"0\" }}>\r\n\r\n\r\n                                    <div className=\"csyncboxa\" style={{ opacity: \"0\" }}>\r\n                                    {this.props.day===\"s\"?(<p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>S</p>):(<p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>{this.props.day}</p>)}\r\n\r\n\r\n                                        \r\n                                        <div style={{ opacity: \"0\" }}>\r\n                                            {this.props.day === \"M\" ?\r\n                                                (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                : (<div> {this.props.day === \"W\" ? (<h3 style={{ marginLeft: \"-1px\", marginTop: this.state.hstyle }}>{this.props.day}</h3>)\r\n                                                    : (<div>\r\n                                                    {this.props.day===\"s\"?(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>S</h3>):(<h3 style={{ marginLeft: this.state.style, marginTop: this.state.hstyle }}>{this.props.day}</h3>)}\r\n                                                    </div>)}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>)}\r\n\r\n\r\n\r\n\r\n                                <div className=\"tick\"></div>\r\n                            </label>\r\n\r\n                           \r\n\r\n                                       \r\n\r\n\r\n                                 \r\n                            {this.state.tooSmall?(\r\n                                <div style={{ marginLeft: \"10px\" }}>\r\n                                {this.props.props.synctimes ? (<div>{this.props.time ? (<div style={{fontSize:\"12px\"}}><b>{this.props.time} m</b></div>) : (<div style={{fontSize:\"12px\"}}><b>0 m</b></div>)}</div>) : (<div></div>)}\r\n                            </div>\r\n                            ):(\r\n                                <div style={{ marginLeft: \"10px\" }}>\r\n                                {this.props.props.synctimes ? (<div>{this.props.time ? (<div style={{fontSize:\"14px\"}}><b>{this.props.time} m</b></div>) : (<div style={{fontSize:\"14px\"}}><b>0 m</b></div>)}</div>) : (<div></div>)}\r\n                            </div>\r\n                            )}\r\n                            \r\n                            \r\n                            </div>\r\n                    </div>)\r\n                }\r\n           </div>\r\n            )\r\n}\r\n}\r\n\r\nexport default Checkedd;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/show_homework.js",["563","564"],"import React, { Component } from 'react';\r\nimport Checkboxnum from \"./practice.js\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport edit from \"./edit.png\";\r\nimport Checkboxnum2 from \"./practice2.js\";\r\nimport Hwmessage from \"./messageStudenthw.js\";\r\nimport Timess from \"../components/timess.js\"\r\n\r\n//import PropTypes from 'prop-types';\r\n\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nexport default class Homeworking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n        this.practice = this.practice.bind(this);\r\n        this.editMe = this.editMe.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.save = this.save.bind(this);\r\n        this.back = this.back.bind(this);\r\n        this.handletheclose = this.handletheclose.bind(this);\r\n        this.handletimesOpen = this.handletimesOpen.bind(this);\r\n        this.handletimesClose = this.handletimesClose.bind(this);\r\n        this.changetimes = this.changetimes.bind(this);\r\n        this.changeweek = this.changeweek.bind(this);\r\n        this.clearChecks = this.clearChecks.bind(this);\r\n        this.clearTime = this.clearTime.bind(this);\r\n\r\n        \r\n        \r\n        \r\n        \r\n        \r\n\r\n        \r\n        this.state = {\r\n            checked: this.props.homework.hwchecked,\r\n            edit: false,\r\n            picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            yesnoTimes: true,\r\n            edited: false,\r\n            tempweek: this.props.homework.yesnoweek,\r\n            tempHW: this.props.homework.title,\r\n            tempHW1: this.props.homework.title,\r\n            hwtimesync: this.props.homework.hwtimesync,\r\n            tempDescription: this.props.homework.description,\r\n            tempDescription1: this.props.homework.description,\r\n            hwsynccheck: this.props.homework.hwsynccheck,\r\n            tempday: this.props.homework.daily,\r\n            tempcheckboxes: this.props.homework.hwcheckboxes,\r\n            ttempHW: \"\",\r\n            hwdmin: this.props.homework.hwdmin,\r\n            weekly: this.props.homework.HWweeklytimebiao,\r\n            ttempDescription: \"\",\r\n            ttempday: this.props.homework.daily,\r\n            ttempcheckboxes: \"\",\r\n            ttempdate: this.props.homework.date,\r\n            link: this.props.homework.hwlink,\r\n            link1: this.props.homework.hwlink,\r\n            yesnoCheckbox: false,\r\n            tempresearch: this.props.homework.research,\r\n            ttempresearch: this.props.homework.research,\r\n            inside: false,\r\n            outside: false,\r\n            tempdaygoal: this.props.homework.yesnoday,\r\n            close: false,\r\n            dailygoal: this.props.homework.dailygoal,\r\n            tempdate: this.props.homework.date,\r\n            tempdate1: this.props.homework.date,\r\n\r\n            hwtype: this.props.homework.hwtype,\r\n            hwtype1: this.props.homework.hwtype,\r\n            totalWeekTime: this.props.homework.totalWeekTime,\r\n            realtimestudent: {\r\n                checkboxes: false,\r\n                syncedCheckbox: true,\r\n\r\n            },\r\n            hwtime: this.props.homework.hwtime,\r\n            syncedCheckboxes: this.props.homework.syncedCheckboxes,\r\n            syncCheckboxes: this.props.homework.hwsynccheck,\r\n            changeweekly: this.props.homework.HWweeklytimebiao,\r\n            changehwtype: \"\",\r\n            changetempcheckboxes: this.props.homework.hwcheckboxes,\r\n            changetempweek: this.props.homework.yesnoweek,\r\n            changetempdaygoal: this.props.homework.yesnoday,\r\n            changedailygoal: this.props.homework.hwdmin,\r\n            struggle: this.props.homework.hwstruggles,\r\n            messaging: this.props.homework.hwQuestions,\r\n            tempstruggle: this.props.homework.hwstruggles,\r\n            tempmessaging: this.props.homework.hwQuestions,\r\n            changelink: \"\",\r\n            yesnoday: this.props.homework.yesnoday,\r\n            yesnoweek: this.props.homework.yesnoweek,\r\n            c: false,\r\n            t: false,\r\n            timesedit: false,\r\n            timeedit: \"\",\r\n            minedit: \"\",\r\n            weeklyTimeEdit: \"\",\r\n            fix: false,\r\n            marginTop: \"0px\",\r\n            justifyContent: \"\",\r\n            marginLeft: \"60px\",\r\n            marginLeft1: \"30px\",\r\n            hwtimew: false,\r\n            width:\"30px\", height:\"30px\",\r\n            \r\n\r\n\r\n        }\r\n       \r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(parseInt(window.innerWidth) <= 500){\r\n            this.setState({ \r\n                marginTop: \"20px\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"15px\", width:\"20px\", height:\"20px\",\r\n                marginLeft1: \"0px\",\r\n                \r\n             });\r\n            }\r\n\r\n        document.addEventListener('mouseup', this.handleClickOutside);\r\n\r\n        if (this.props.homework.hwsynccheck) {\r\n            this.setState({\r\n                c:true,\r\n            })\r\n        }\r\n        if (this.props.homework.hwcheckboxes !== \"0\") {\r\n            this.setState({\r\n                c: true,\r\n            })\r\n        }\r\n        if (this.props.homework.yesnoday) {\r\n            this.setState({\r\n                t:true,\r\n            })\r\n        }\r\n        if (this.props.homework.yesnoweek) {\r\n            this.setState({\r\n                t: true,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mouseup', this.handleClickOutside);\r\n    }\r\n    \r\n    async handleClickOutside(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n       \r\n       \r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n\r\n\r\n            this.handleClose();\r\n        }\r\n            \r\n        \r\n    }\r\n    clearChecks() {\r\n     \r\n            let homework = false;\r\n        if (this.state.hwsynccheck) {\r\n                homework = true;\r\n            AuthService.clearhwChecks(this.props.homework._id, homework);\r\n          \r\n            }\r\n            else {\r\n            AuthService.clearhwChecks(this.props.homework._id, homework);\r\n           \r\n        }\r\n       \r\n        window.location.reload();\r\n        \r\n    }\r\n\r\n    clearTime() {\r\n\r\n        AuthService.clearhwTime(this.props.homework._id);\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    handletimesOpen() {\r\n        this.setState({\r\n            timesedit: true\r\n        });\r\n    };\r\n    handletimesClose() {\r\n        this.setState({\r\n            timesedit: false\r\n        });\r\n    };\r\n    changetimes() {\r\n        AuthService.hwchangetimes(this.props.homework._id, this.state.timeedit, this.state.minedit, this.state.hwtime);\r\n\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n            if (this.state.timeedit === \"mon\") {\r\n                this.setState({\r\n                    hwtime: {\r\n                        mon: this.state.minedit,\r\n                        tues: this.state.hwtime.tues,\r\n                        wed: this.state.hwtime.wed,\r\n                        thur: this.state.hwtime.thur,\r\n                        fri: this.state.hwtime.fri,\r\n                        sat: this.state.hwtime.sat,\r\n                        sun: this.state.hwtime.sun,\r\n                    }\r\n\r\n                })\r\n            }\r\n            if (this.state.timeedit === \"tues\") {\r\n                this.setState({\r\n                    hwtime: {\r\n                        mon: this.state.hwtime.mon,\r\n                        tues: this.state.minedit,\r\n                        wed: this.state.hwtime.wed,\r\n                        thur: this.state.hwtime.thur,\r\n                        fri: this.state.hwtime.fri,\r\n                        sat: this.state.hwtime.sat,\r\n                        sun: this.state.hwtime.sun,\r\n                    }\r\n\r\n                })\r\n            }\r\n            if (this.state.timeedit === \"wed\") {\r\n                this.setState({\r\n                    hwtime: {\r\n                        mon: this.state.hwtime.mon,\r\n                        tues: this.state.hwtime.tues,\r\n                        wed: this.state.minedit,\r\n                        thur: this.state.hwtime.thur,\r\n                        fri: this.state.hwtime.fri,\r\n                        sat: this.state.hwtime.sat,\r\n                        sun: this.state.hwtime.sun,\r\n                    }\r\n\r\n                })\r\n            }\r\n            if (this.state.timeedit === \"thur\") {\r\n                this.setState({\r\n                    hwtime: {\r\n                        mon: this.state.hwtime.mon,\r\n                        tues: this.state.hwtime.tues,\r\n                        wed: this.state.hwtime.wed,\r\n                        thur: this.state.minedit,\r\n                        fri: this.state.hwtime.fri,\r\n                        sat: this.state.hwtime.sat,\r\n                        sun: this.state.hwtime.sun,\r\n                    }\r\n\r\n                })\r\n            }\r\n            if (this.state.timeedit === \"fri\") {\r\n                this.setState({\r\n                    hwtime: {\r\n                        mon: this.state.hwtime.mon,\r\n                        tues: this.state.hwtime.tues,\r\n                        wed: this.state.hwtime.wed,\r\n                        thur: this.state.hwtime.thur,\r\n                        fri: this.state.minedit,\r\n                        sat: this.state.hwtime.sat,\r\n                        sun: this.state.hwtime.sun,\r\n                    }\r\n\r\n                })\r\n            }\r\n            if (this.state.timeedit === \"sat\") {\r\n                this.setState({\r\n                    hwtime: {\r\n                        mon: this.state.hwtime.mon,\r\n                        tues: this.state.hwtime.tues,\r\n                        wed: this.state.hwtime.wed,\r\n                        thur: this.state.hwtime.thur,\r\n                        fri: this.state.hwtime.fri,\r\n                        sat: this.state.minedit,\r\n                        sun: this.state.hwtime.sun,\r\n                    }\r\n\r\n                })\r\n            }\r\n            if (this.state.timeedit === \"sun\") {\r\n                this.setState({\r\n                    hwtime: {\r\n                        mon: this.state.hwtime.mon,\r\n                        tues: this.state.hwtime.tues,\r\n                        wed: this.state.hwtime.wed,\r\n                        thur: this.state.hwtime.thur,\r\n                        fri: this.state.hwtime.fri,\r\n                        sat: this.state.hwtime.sat,\r\n                        sun: this.state.minedit,\r\n                    }\r\n\r\n                })\r\n            }\r\n        \r\n\r\n\r\n        this.setState({\r\n            timesedit: false,\r\n\r\n            \r\n        \r\n        });\r\n        //window.location.reload();\r\n    }\r\n    changeweek() {\r\n\r\n        AuthService.hwchangeweek(this.props.homework._id, this.state.weeklyTimeEdit);\r\n\r\n\r\n        this.setState({\r\n            timesedit: false,\r\n            totalWeekTime: {\r\n                total: this.state.weeklyTimeEdit\r\n            }\r\n        });\r\n        //window.location.reload();\r\n    }\r\n\r\n\r\n    editMe(done, x) {\r\n        if (done) {\r\n            if (this.state.ttempHW.length > 0) {\r\n                this.setState({\r\n                    tempHW: this.state.ttempHW,\r\n                    edit: !this.state.edit,\r\n                    edited: true,\r\n\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    edit: !this.state.edit,\r\n                })\r\n            }\r\n        }\r\n        else if (x) {\r\n            this.setState({\r\n                edit: !this.state.edit,\r\n                ttempHW: \"\",\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                edit: !this.state.edit,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async save() {\r\n       \r\n        \r\n\r\n        await this.setState({\r\n            \r\n            edited: true,\r\n            weekly: this.state.changeweekly,\r\n            hwsynccheck: this.state.syncCheckboxes,\r\n            tempcheckboxes: this.state.changetempcheckboxes,\r\n            tempweek: this.state.changetempweek,\r\n            tempdaygoal: this.state.changetempdaygoal,\r\n            tempday: this.state.ttempday,\r\n            struggle: this.state.tempstruggle,\r\n            messaging: this.state.tempmessaging,\r\n            hwdmin: this.state.changedailygoal,\r\n           \r\n\r\n        })\r\n        this.setState({\r\n            edit: !this.state.edit,\r\n\r\n        })\r\n        if (this.state.hwsynccheck) {\r\n            this.setState({\r\n                c: true\r\n            })\r\n        }\r\n        else if (this.state.tempcheckboxes !== \"0\") {\r\n            this.setState({\r\n                c: true\r\n            })\r\n        }\r\n        if (this.props.homework.yesnoday) {\r\n            this.setState({\r\n                t: true,\r\n            })\r\n        }\r\n        if (this.props.homework.yesnoweek) {\r\n            this.setState({\r\n                t: true,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                c: false,\r\n            })\r\n        }\r\n        this.handletheclose();\r\n    }\r\n    handletheclose() {\r\n\r\n        let newHW = {\r\n\r\n            title: this.state.tempHW,\r\n            description: this.state.tempDescription,\r\n            syncedCheckboxes: this.props.homework.syncedCheckboxes,\r\n            hwtype: this.state.hwtype,\r\n            _id: this.props.homework._id,\r\n            firstMessage: this.props.homework.firstMessage,\r\n            hwtimesync: this.props.homework.hwtimesync,\r\n            messages: this.props.homework.messages,\r\n            totalWeekTime: this.props.homework.totalWeekTime,\r\n\r\n\r\n            hwsynccheck: this.state.hwsynccheck,\r\n            hwcheckboxes: this.state.tempcheckboxes,\r\n            hwlink: this.state.link,\r\n            hwchecked: this.state.checked,\r\n            hwtime: this.state.hwtime,\r\n            daily: this.state.tempday,\r\n            HWweeklytimebiao: this.state.weekly,\r\n            yesnoweek: this.state.tempweek, \r\n\r\n\r\n\r\n\r\n\r\n\r\n            yesnoday: this.state.tempdaygoal, \r\n            hwstruggles: this.state.struggle,\r\n            hwQuestions: this.state.messaging,\r\n            hwdmin: this.state.hwdmin,\r\n\r\n\r\n\r\n            date: this.state.tempdate,\r\n            research: this.state.tempresearch,\r\n\r\n\r\n        }\r\n\r\n        console.log(newHW);\r\n        let ar = [];\r\n        for (let i = 0; i < this.props.homeworks.length; i++) {\r\n            if (this.props.homeworks[i]._id === newHW._id) {\r\n\r\n                ar.push(newHW);\r\n            }\r\n            else {\r\n                ar.push(this.props.homeworks[i]);\r\n\r\n            }\r\n\r\n        }\r\n        console.log(ar);\r\n\r\n\r\n        AuthService.AddHomeworks\r\n            (\r\n                this.props.student,\r\n                ar\r\n            );\r\n            //window.location.reload();\r\n\r\n        \r\n\r\n\r\n    }\r\n    back() {\r\n\r\n\r\n        this.setState({\r\n            hwtype:this.state.hwtype1,\r\n            edit: !this.state.edit,\r\n            link: this.state.link1,\r\n            tempDescription: this.state.tempDescription1,\r\n            tempHW: this.state.tempHW1,\r\n            tempdate: this.state.tempdate1,\r\n\r\n\r\n\r\n        })\r\n        \r\n    }\r\n    \r\n   \r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n       if(name===\"changeweekly\"){\r\n           if(value !==\"\"){\r\n               this.setState({\r\n                changetempweek: true,\r\n               })\r\n           }\r\n           else{\r\n            this.setState({\r\n                changetempweek: false,\r\n               })\r\n           }\r\n       }\r\n       \r\n       if(name===\"changedailygoal\"){\r\n        if(value !==\"\"){\r\n            this.setState({\r\n                changetempdaygoal: true,\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                changetempdaygoal: false,\r\n               })\r\n           }\r\n    }\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n\r\n        if (value === \"true\") {\r\n            this.setState({\r\n                [name]: true,\r\n            })\r\n        }\r\n        else if (value ===\"false\") {\r\n            this.setState({\r\n                [name]: false,\r\n            })\r\n        }\r\n\r\n      \r\n    }\r\n\r\n    practice(sign) {\r\n        \r\n        let x = this.state.checked;\r\n        if (sign) {\r\n            x++;\r\n\r\n        }\r\n        else {\r\n            x--;\r\n\r\n        }\r\n        AuthService.hwchecked(this.props.student, this.props.homework._id, x,);\r\n\r\n    }\r\n\r\n    async handleClose( inside) {\r\n        if(this.props.role !==\"student\"){\r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(250)\r\n\r\n        window.location.reload()\r\n        }\r\n        else{\r\n            this.props.handleClose();\r\n        }\r\n        \r\n       \r\n        \r\n           \r\n                //\r\n            \r\n        \r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"popup-boxa1 to-front \" >\r\n                <div ref={this.wrapperRef} className=\"card-container6abc1sh \" >\r\n                    <div className=\"homeworkScroll1\">\r\n                    <div style={{width:\"95%\"}} >\r\n                    <div style= {{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n                    <span className=\"close-icon-2\" onClick={this.handleClose.bind(this, false)}>x</span>\r\n                    \r\n                                    </div>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div style={{marginBottom: \"7px\", marginLeft:\"0px\"}}>\r\n                                {this.state.edit ? (<div style={{ marginBottom: \"30px\" }}>\r\n                                    <div ><p className=\"rowss huv\" style={{color:\"#696eb5\"}} onClick={this.back}>back</p></div>\r\n                            <div className=\"checkboxstuff\">\r\n                           <h3>Edit Homework Assignment</h3>\r\n                                \r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        ) : (<div>\r\n                            <div>\r\n                                <div></div>\r\n\r\n                            </div>\r\n                           \r\n                                </div>)}\r\n                        </div>\r\n                        <div style={{ marginBottom: \"30px\", marginTop: this.state.marginTop }}>\r\n\r\n                        {this.state.edit ? (<div>\r\n                                    <div style={{ marginBottom: \"30px\",  }}>\r\n                                        <label htmlFor=\"tempHW\"><h5>Homework Title:</h5></label>\r\n\r\n                                        \r\n                                <div className=\"form-group\" >\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"tempHW\"\r\n                                        value={this.state.tempHW}\r\n                                        onChange={this.handleChange}\r\n                                                name=\"tempHW\"\r\n                                            style={{ width: \"100%\" }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>) : (<div style={{display:\"flex\", flexDirection:\"row\", justifyContent: this.state.justifyContent, marginTop:\"20px\"}}> <h1>{this.state.tempHW} </h1>{this.state.edit ? (\r\n                                    <div  >\r\n                                    </div>) : (<div>\r\n                                        {this.props.role !==\"student\"?\r\n                                        (<img src={edit} className=\"huv\" \r\n                                        style={{width:this.state.width, height:this.state.height, marginLeft:this.state.marginLeft, marginTop:\"10px\"}} \r\n                                        onClick={this.editMe}/> )\r\n                                    :\r\n                                    (<div></div>)}\r\n                                    </div>)}\r\n                            \r\n                                </div>)}\r\n\r\n                                {this.state.edit? (<div ></div>\r\n                                    \r\n\r\n\r\n                        ) : (<div>\r\n                            <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:this.state.justifyContent}}>\r\n                                <div style={{marginLeft:this.state.marginLeft1, color:\"gray\", fontSize:\"14px\"}}> {this.state.hwtype} homework</div>\r\n\r\n                            </div>\r\n                           \r\n                                </div>)}\r\n\r\n\r\n\r\n                        </div>\r\n                        {this.state.hwtype === \"practice\" ? (\r\n                            <div className=\"centerized fill2\">\r\n                                    {this.props.role === \"student\" ? (<div className=\" fill2 \">\r\n                                        {this.state.timesedit && (<Timess handleClose={this.handletimesClose} handleChange={this.handleChange} change={this.changetimes} changeweek={this.changeweek} weekly={this.props.homework.yesnoday} />)}\r\n\r\n\r\n\r\n\r\n\r\n                                        <div className=\"checkboxstuff1\" style={{ marginBottom: \"10px\", flexDirection: \"column\" }}>\r\n\r\n                                            {this.state.tempdaygoal ? (\r\n                                                <div>\r\n                                                    {!this.state.c ? (\r\n                                                        <div>\r\n                                                            <div className=\"checkboxstuff1 centerized\">\r\n                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                    <div className=\" centerized\">Mon</div>\r\n                                                                    <div className=\" centerized\">{this.state.hwtime.mon} M</div>\r\n                                                                </div>\r\n                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                    <div className=\" centerized\">Tues</div>\r\n                                                                    <div className=\" centerized\">{this.state.hwtime.tues} M</div>\r\n                                                                </div>\r\n                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                    <div className=\" centerized\">Wed</div>\r\n                                                                    <div className=\" centerized\">{this.state.hwtime.wed} M</div>\r\n                                                                </div>\r\n                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                    <div className=\" centerized\">Thurs</div>\r\n                                                                    <div className=\" centerized\">{this.state.hwtime.thur} M</div>\r\n                                                                </div>\r\n                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                    <div className=\" centerized\">Fri</div>\r\n                                                                    <div className=\" centerized\">{this.state.hwtime.fri} M</div>\r\n                                                                </div>\r\n                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                    <div className=\" centerized\">Sat</div>\r\n                                                                    <div className=\" centerized\">{this.state.hwtime.sat} M</div>\r\n                                                                </div>\r\n                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                    <div className=\" centerized\">Sun</div>\r\n                                                                    <div className=\" centerized\">{this.state.hwtime.sun} M</div>\r\n                                                                </div>\r\n                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                    <div className=\" centerized\">Total</div>\r\n                                                                    <div className=\" centerized\"> {parseInt(this.state.hwtime.mon) + parseInt(this.state.hwtime.tues) + parseInt(this.state.hwtime.wed) + parseInt(this.state.hwtime.thur) + parseInt(this.state.hwtime.fri) + parseInt(this.state.hwtime.sat) + parseInt(this.state.hwtime.sun)} M</div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n\r\n\r\n                                                    ) : (<div>\r\n\r\n\r\n                                                    </div>)}\r\n\r\n                                                </div>\r\n\r\n                                            ) : (\r\n                                                    <div>\r\n                                                        {this.state.tempweek ? (<div>\r\n                                                            {!this.state.c ? (<div>{this.props.homework.HWweeklytimebiao?(<h3>Total Time Practiced this Week: <b> {this.state.totalWeekTime.total} / {this.props.homework.HWweeklytimebiao} Minutes </b> </h3>):(<div></div>)}</div>) : (\r\n                                                                <div>\r\n                                                                </div>\r\n\r\n                                                            )\r\n                                                            }\r\n                                                        </div>\r\n\r\n\r\n\r\n                                                        ) : (<div>\r\n\r\n\r\n                                                        </div>)}\r\n\r\n\r\n\r\n\r\n                                                    </div>)}\r\n\r\n                                            <div className=\"checkboxstuff centerized\" style={{ marginBottom: \"7px\" }}>\r\n                                                {this.state.hwsynccheck ? (\r\n                                                    <Checkboxnum2 checkboxes={7} prac={this.state.checked} practice={this.props.practice} synced={true} role={\"student\"} sync={this.state.syncedCheckboxes} times={this.state.hwtime} synctimes={this.state.tempdaygoal} />\r\n                                                ) : (\r\n                                                        <Checkboxnum checkboxes={this.state.tempcheckboxes} practice={this.props.practice} prac={this.state.checked} role={\"student\"} times={this.state.hwtime} synctimes={this.state.tempdaygoal} />\r\n                                                    )}\r\n\r\n\r\n\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        {this.state.t ? (\r\n                                            <div className=\"fill2 centerized\">\r\n                                                <div style={{ width: \"125px\", height: \"40px\", marginTop: \"5px\", marginBottom: \"7px\" }} ><button style={{ height: \"30px\", background: \"#696eb5\", color: \"#F0F2EF\" }} className=\"btn btn-block centerized\" onClick={this.handletimesOpen}>Log Time</button></div>\r\n                                            </div>\r\n                                        ) : (<div></div>)}\r\n\r\n\r\n                                </div>\r\n                                    ) : (<div>\r\n\r\n\r\n                                            {this.state.edit ? (<div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Do you want to use checkboxes to track this pracice assignment's progress?</label>\r\n                                                    <select htmlfor=\"yesnoCheckbox\" onChange={this.handleChange} name=\"yesnoCheckbox\" id=\"yesnoCheckbox\">\r\n                                                        <option value=\"\">No Change</option>\r\n                                                        <option value={true}>yes</option>\r\n                                                        <option value={false}>no</option>\r\n                                                       \r\n                                                    </select>\r\n                                                </div>\r\n                                                {this.state.yesnoCheckbox?(<div>\r\n                                                    <div>\r\n                                                    <label>Display practice checkboxes with days of the week?</label>\r\n                                                    <select htmlfor=\"syncCheckboxes\" onChange={this.handleChange} name=\"syncCheckboxes\" id=\"syncCheckboxes\">\r\n                                                        <option value={this.state.hwsynccheck}>No Change</option>\r\n                                                        <option value={true}>yes</option>\r\n                                                        <option value={false}>no</option>\r\n                                                        <option value={false}>Not Applicaple</option>\r\n\r\n                                                        \r\n                                                    </select>\r\n                                                </div>\r\n                                                <div >\r\n                                                    <label>How many days should the student practice this assignment?</label>\r\n                                                    <select htmlfor=\"changetempcheckboxes\" onChange={this.handleChange} name=\"changetempcheckboxes\" id=\"changetempcheckboxes\">\r\n                                                        <option value={this.state.tempcheckboxes}>No Change</option>\r\n                                                        <option value=\"1\">1</option>\r\n                                                        <option value=\"2\">2</option>\r\n                                                        <option value=\"3\">3</option>\r\n                                                        <option value=\"4\">4</option>\r\n                                                        <option value=\"5\">5</option>\r\n                                                        <option value=\"6\">6</option>\r\n                                                        <option value=\"7\">7</option>\r\n                                                        <option value=\"0\">0</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                </div>):(<div></div>)}\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Would you like this student to record practice time for this assignment?</label>\r\n                                                        <select htmlfor=\"hwtimew\" onChange={this.handleChange} name=\"hwtimew\" id=\"hwtimew\">\r\n                                                        <option value=\"\">No Change</option>\r\n                                                        <option value={true}>yes</option>\r\n                                                        <option value={false}>no</option>\r\n\r\n                                                    </select>\r\n                                                </div>\r\n                                                \r\n                                                \r\n\r\n                                                \r\n\r\n                                                {/*<div >\r\n                                                    <p>Add a weekly time goal for this practice assignment?</p>\r\n                                                    <select htmlfor=\"changetempweek\" onChange={this.handleChange} name=\"changetempweek\" id=\"changetempweek\">\r\n                                                        <option value={this.state.tempweek}>No Change</option>\r\n                                                        <option value={true}>yes</option>\r\n                                                        <option value={false}>no</option>\r\n                                                        <option value={false}>Not Applicaple</option>\r\n\r\n\r\n                                                    </select>\r\n                                                </div> */}\r\n                                                {this.state.yesnoTimes ? (<div>\r\n                                                    {this.state.hwtimew?(<div>\r\n\r\n                                                        <div className=\"form-group\">\r\n                                                        <label>How much time should this student practice per week?</label>\r\n                                                        <input\r\n\r\ntype=\"text\"\r\nvalue={this.state.changeweekly}\r\nclassName=\"form-control\"\r\n\r\nid=\"changeweekly\"\r\nrequired\r\nonChange={this.handleChange}\r\nname=\"changeweekly\"\r\n                                                        /><p>Minutes</p>\r\n                                                       \r\n\r\n                                                    </div>\r\n                                                    </div>):(<div></div>)}\r\n                                                    \r\n                                                </div>) : (<div>\r\n                                                        {this.props.totalWeekTime.total} / {this.state.weekly}\r\n                                                        \r\n                                                    </div>)}\r\n\r\n                                                {/*<div >\r\n                                                    <p>Add a Dailey time goal for this student. </p>\r\n                                                    <select htmlfor=\"changetempdaygoal\" onChange={this.handleChange} name=\"changetempdaygoal\" id=\"changetempdaygoal\">\r\n                                                        <option value={this.state.tempdaygoal}>No Change</option>\r\n                                                        <option value={true}>yes</option>\r\n                                                        <option value={false}>no</option>\r\n                                                        <option value={false}>Not Applicaple</option>\r\n                                                    </select>\r\n                                                </div>*/}\r\n                                                \r\n                                                {this.state.yesnoTimes ? (<div>\r\n                                                    {this.state.hwtimew?(<div>\r\n                                                        <div className=\"form-group\">\r\n                                                        <label>How much time should this student practice per day?</label>\r\n                                                        <input\r\n\r\nvalue={this.state.changedailygoal}\r\ntype=\"text\"\r\nclassName=\"form-control\"\r\nid=\"changedailygoal\"\r\nrequired\r\nonChange={this.handleChange}\r\nname=\"changedailygoal\"\r\n                                                            /><p>Minutes</p>\r\n                                                       \r\n\r\n                                                    </div>\r\n                                                    </div>):(<div></div>)}\r\n                                                    \r\n                                                </div>) : (<div></div>)}\r\n\r\n                                                \r\n                                                </div>\r\n                                            ) : (\r\n                                                    \r\n                                                    <div>\r\n                                                        <div className=\"checkboxstuff1\" style={{ marginBottom: \"10px\", flexDirection: \"column\" }}>\r\n\r\n                                                            {this.state.tempdaygoal ? (\r\n                                                                <div>\r\n                                                                    {!this.state.c ? (\r\n                                                                        <div>\r\n                                                                            <div className=\"checkboxstuff1 centerized\">\r\n                                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                    <div className=\" centerized\">Mon</div>\r\n                                                                                    <div className=\" centerized\">{this.props.homework.hwtime.mon} M</div>\r\n                                                                                </div>\r\n                                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                    <div className=\" centerized\">Tues</div>\r\n                                                                                    <div className=\" centerized\">{this.props.homework.hwtime.tues} M</div>\r\n                                                                                </div>\r\n                                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                    <div className=\" centerized\">Wed</div>\r\n                                                                                    <div className=\" centerized\">{this.props.homework.hwtime.wed} M</div>\r\n                                                                                </div>\r\n                                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                    <div className=\" centerized\">Thurs</div>\r\n                                                                                    <div className=\" centerized\">{this.props.homework.hwtime.thur} M</div>\r\n                                                                                </div>\r\n                                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                    <div className=\" centerized\">Fri</div>\r\n                                                                                    <div className=\" centerized\">{this.props.homework.hwtime.fri} M</div>\r\n                                                                                </div>\r\n                                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                    <div className=\" centerized\">Sat</div>\r\n                                                                                    <div className=\" centerized\">{this.props.homework.hwtime.sat} M</div>\r\n                                                                                </div>\r\n                                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                    <div className=\" centerized\">Sun</div>\r\n                                                                                    <div className=\" centerized\">{this.props.homework.hwtime.sun} M</div>\r\n                                                                                </div>\r\n                                                                                <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                                    <div className=\" centerized\">Total</div>\r\n                                                                                    <div className=\" centerized\"> {parseInt(this.props.homework.hwtime.mon) + parseInt(this.props.homework.hwtime.tues) + parseInt(this.props.homework.hwtime.wed) + parseInt(this.props.homework.hwtime.thur) + parseInt(this.props.homework.hwtime.fri) + parseInt(this.props.homework.hwtime.sat) + parseInt(this.props.homework.hwtime.sun)} M</div>\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n\r\n\r\n\r\n                                                                    ) : (<div>\r\n\r\n\r\n                                                                    </div>)}\r\n\r\n                                                                </div>\r\n\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        {this.state.tempweek ? (<div>\r\n                                                                            {!this.state.c ? (<div>\r\n                                                                                {this.state.homework?(<h3>Total Time Practiced this Week: <b> {this.state.homework?(<div>{this.state.totalWeekTime.total} / {this.state.homework.weekly}</div>):(<div></div>)} Minutes </b> </h3>):(<div></div>)}\r\n                                                                            \r\n                                                                            </div>) : (\r\n                                                                                <div>\r\n                                                                                </div>\r\n\r\n                                                                            )\r\n                                                                            }\r\n                                                                        </div>\r\n\r\n\r\n\r\n                                                                        ) : (<div>\r\n\r\n\r\n                                                                        </div>)}\r\n\r\n\r\n\r\n\r\n                                                                    </div>)}\r\n\r\n                                                            <div className=\"checkboxstuff\" style={{ marginBottom: \"7px\" }}>\r\n                                                                {this.state.hwsynccheck ? (\r\n                                                                    <Checkboxnum2 checkboxes={7} prac={this.state.checked} synced={true} role={\"teacher\"} sync={this.state.syncedCheckboxes} times={this.state.hwtime} synctimes={this.state.tempdaygoal} />\r\n                                                                ) : (\r\n                                                                        <Checkboxnum checkboxes={this.state.tempcheckboxes} prac={this.state.checked} role={\"teacher\"} times={this.state.hwtime} synctimes={this.state.tempdaygoal} />\r\n                                                                    )}\r\n\r\n\r\n\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n                                                        <div  >\r\n                                                            {this.state.c ? (<div >\r\n\r\n                                                                {this.state.t ? (<div className=\" checkboxstuff1a  \" style={{ width: \"265px\", marginLeft: \"7px\" }}>\r\n                                                                    <button className=\"btn  btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.clearChecks}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Checks</p></span></button>\r\n                                                                    <button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.clearTime}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Time</p></span></button>\r\n\r\n                                                                </div>\r\n\r\n                                                                ) : (<div className=\" centerized \">\r\n                                                                    <button className=\"btn  btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.clearChecks}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Checks</p></span></button>\r\n\r\n                                                                </div>)}\r\n\r\n                                                            </div>\r\n                                                            ) : (<div className=\" centerized \" style={{ width: \"265px\" }}>\r\n                                                                {this.state.t ? (<button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.clearTime}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Clear Time</p></span></button>) : (<div></div>)}\r\n\r\n                                                            </div>)}\r\n\r\n\r\n                                                        </div>\r\n                                                       \r\n                                                    </div>\r\n                                                    \r\n                                                    )}\r\n                                        \r\n                                </div>\r\n                                    )\r\n                                }\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        ): (<div></div>)}\r\n                        \r\n\r\n\r\n\r\n                        <div style={{ marginBottom: \"10px\",  }}>\r\n                                {this.state.edit ? (<div >\r\n                                   \r\n                                    <div >\r\n                                        <label htmlFor=\"tempDescription\"><b>Describe the homework:</b></label>\r\n                                    <div className=\"form-group\" >\r\n\r\n                                    <textarea\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        rows=\"4\"\r\n                                        id=\"tempDescription\"\r\n                                            value={this.state.tempDescription}\r\n                                        onChange={this.handleChange}\r\n                                            name=\"tempDescription\"\r\n                                            \r\n                                    ></textarea>\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        ) : (<div style={{ marginTop: \"10px\", display:\"flex\", flexDirection:\"row\", justifyContent:this.state.justifyContent }}>\r\n                            <b style={{marginRight:\"7px\"}}>Description:</b> {this.state.tempDescription} \r\n                                    </div>)}\r\n\r\n                                </div>\r\n                        <div style={{ marginBottom: \"10px\" }}>\r\n                        {this.state.hwtype === \"practice\" ? (<div>\r\n                            {this.state.edit ? (<div>\r\n                                        <div >\r\n                                            <label htmlFor=\"ttempday\">How many times should this student practice per day?</label>\r\n                                    <div className=\"form-group\" >\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"ttempday\"\r\n                                            value={this.state.ttempday}\r\n                                            onChange={this.handleChange}\r\n                                            name=\"ttempday\"\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            ) : (<div>\r\n                                <div style={{ marginBottom: \"10px\", display:\"flex\", flexDirection:\"row\", justifyContent:this.state.justifyContent }}>\r\n                                    <b style={{marginRight:\"7px\"}}>Per day:</b> {this.state.tempday}\r\n                                </div>\r\n                                        </div>)}\r\n                                    {this.state.edit ? (<div>\r\n                                        {/* \r\n                                        <div >\r\n                                            <label htmlFor=\"tempcheckboxes\">How many times should this student practice every week?</label>\r\n                                            <div className=\"form-group\" >\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"tempcheckboxes\"\r\n                                                    value={this.state.tempcheckboxes}\r\n                                                    onChange={this.handleChange}\r\n                                                    name=\"tempcheckboxes\"\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </div>*/}\r\n\r\n                                    </div>\r\n\r\n\r\n                                    ) : (<div>\r\n                                            <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:this.state.justifyContent}}>\r\n                                                <b style={{marginRight:\"7px\"}}>Practice goal:</b> {this.props.homework.hwchecked} / { this.state.tempcheckboxes }\r\n                                        </div>\r\n                                    </div>)}\r\n                        </div>) : (<div>\r\n                                <div>\r\n                                    {this.state.edit ? (<div>\r\n                                                <div className=\"checkboxstuff\">\r\n                                                    <label htmlFor=\"tempdate\"><p><b>Due on:</b></p></label>\r\n\r\n                                            <div className=\"form-group\" >\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    rows=\"1\"\r\n                                                    id=\"tempdate\"\r\n                                                    value={this.state.tempdate}\r\n                                                    onChange={this.handleChange}\r\n                                                    name=\"tempdate\"\r\n                                                />\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    ) : (<div style={{display:\"flex\", flexDirection:\"row\", justifyContent:this.state.justifyContent}}>\r\n                                        <b style={{marginRight:\"7px\"}}> Due on:</b> {this.state.tempdate} \r\n                                        \r\n                                        </div>)}\r\n                                    \r\n\r\n\r\n                                </div>\r\n                                        </div>)}\r\n                            </div>\r\n                            \r\n                            <div style={{  }}>\r\n                                {this.state.edit ? (<div >\r\n\r\n                                   \r\n                                     {/*<div >\r\n                                        <label htmlFor=\"tempmessaging\"><p>include abiltity for students ask questions through messaging?</p></label>\r\n                                    <div className=\"form-group\" >\r\n\r\n                                            <select htmlfor=\"tempmessaging\" onChange={this.handleChange} name=\"tempmessaging\" id=\"tempmessaging\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={true}>yes</option>\r\n                                            <option value={false}>no</option>\r\n                                            <option value={false}>Not Applicaple</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                     </div> */}\r\n                                    <div className=\"form-group\" >\r\n                                        <label htmlFor=\"messaging\"><b style={{marginRight:\"7px\"}}>Link:</b></label>\r\n\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            rows=\"1\"\r\n                                            id=\"link\"\r\n                                            value={this.state.link}\r\n                                            onChange={this.handleChange}\r\n                                            name=\"link\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                ) : (<div>\r\n                                        <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:this.state.justifyContent}}> <b style={{marginRight:\"7px\"}}>Link: </b>{this.state.link} </div>\r\n                                </div>)}\r\n                            </div>\r\n\r\n\r\n                        <div>\r\n                            {this.props.role === \"student\" ? (<div></div>): (\r\n\r\n                                <div>\r\n                                {this.state.edit ? (\r\n                                    <div style={{ width: \"125px\" }} >\r\n                                <button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\" }} onClick={this.save}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Save</p></span></button>\r\n                                        </div>) : (<div></div>)}\r\n\r\n                               </div>\r\n\r\n                                \r\n                                    \r\n                                    )}\r\n\r\n\r\n                  \r\n\r\n\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                  \r\n                    </div>\r\n                    </div>\r\n\r\n                   \r\n                    {!this.state.edit ? (<div>\r\n                        {this.state.messaging ? (<Hwmessage id={this.props.homework._id} firstMessage={this.props.homework.firstMessage} messages={this.props.homework.messages} role={this.props.role} />):(<div></div>)}\r\n                        \r\n                   </div> ) : (<div>\r\n\r\n\r\n                        </div>)}\r\n                        </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n\r\n        )\r\n\r\n    }\r\n}\r\n//Homeworking.propTypes = {\r\n //   children: PropTypes.element.isRequired,\r\n//<div>\r\n//  <button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.handletheclose}>Save</button>\r\n\r\n//</div>\r\n//};\r\n\r\n/*\r\n  <div >\r\n                                        <label htmlFor=\"struggles\"><p>include abiltity for students to detail strugggles?</p></label>\r\n                                        <div className=\"form-group\" >\r\n\r\n                                            <select htmlfor=\"struggles\" onChange={this.handleChange} name=\"struggles\" id=\"struggles\">\r\n                                                <option value=\"\"></option>\r\n                                                <option value={true}>yes</option>\r\n                                                <option value={false}>no</option>\r\n                                                <option value={false}>Not Applicaple</option>\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                    </div>\r\n */","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/newPassword.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/show_goal.js",["565","566","567"],"import React, { Component } from 'react';\r\nimport Checkboxnum from \"./practice.js\";\r\nimport edit from \"./edit.png\";\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nclass Show_goal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n\r\n        this.editMe = this.editMe.bind(this);\r\n        this.editMe1 = this.editMe1.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.save = this.save.bind(this);\r\n\r\n        this.state = {\r\n            edit: false,\r\n            edit1: false,\r\n            tempGoal: this.props.Goal.title,\r\n            tempDescription: this.props.Goal.description,\r\n            ttempGoal: \"\",\r\n            edited: false,\r\n            ttempDescription:\"\"\r\n        }\r\n       \r\n\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n        if (this.props.Goal.main) {\r\n            this.setState({\r\n                tempGoal: this.props.Goal.main.title,\r\n                tempDescription: this.props.Goal.main.description\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.handleClose();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        this.setState({\r\n            edit: !this.state.edit,\r\n            edited: true,\r\n\r\n        })\r\n\r\n    }\r\n    editMe() {\r\n        \r\n            this.setState({\r\n                edit: !this.state.edit,\r\n            })\r\n        \r\n    }\r\n   \r\n    editMe1(done, x) {\r\n        if (done) {\r\n            if (this.state.ttempDescription.length > 0) {\r\n                this.setState({\r\n                    tempDescription: this.state.ttempDescription,\r\n                    edit1: !this.state.edit1,\r\n                    edited: true,\r\n\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    edit1: !this.state.edit1,\r\n                })\r\n            }\r\n        }\r\n        else if (x) {\r\n            this.setState({\r\n                edit1: !this.state.edit1,\r\n                ttempDescription: \"\",\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                edit1: !this.state.edit1,\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n\r\n    }\r\n\r\n    async handleClose() {\r\n        if (this.state.edited) {\r\n            if (this.props.Goal.main) {\r\n                await this.props.handletheclose(this.props.Goal.tempID, this.state.tempGoal, this.state.tempDescription, true);\r\n\r\n            }\r\n            else {\r\n                await this.props.handletheclose(this.props.Goal.tempID, this.state.tempGoal, this.state.tempDescription);\r\n            }\r\n            this.props.handleClose();\r\n        }\r\n        else {\r\n            this.props.handleClose();\r\n        }\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"popup-box to-front\">\r\n                <div ref={this.wrapperRef} className=\"diapicboxastudentgoal\">\r\n                    <div style= {{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n                    <span className=\"close-icon-2\" onClick={this.handleClose}>x</span>\r\n                    \r\n                                    </div>\r\n\r\n                   \r\n                    <div>\r\n                        {this.props.role === \"teacher\" ? (\r\n\r\n\r\n                            <div>\r\n\r\n\r\n                                {this.state.edit ? (<div>\r\n                                    <div>\r\n                                        <label htmlFor=\"tempGoal\"><h5>Goal Title</h5></label>\r\n\r\n                                        <div lassName=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                                id=\"tempGoal\"\r\n                                                value={this.state.tempGoal}\r\n                                            onChange={this.handleChange}\r\n                                                name=\"tempGoal\"\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                      \r\n                                    </div>\r\n\r\n\r\n                                </div>) : (<div className=\"centerize\" style={{ margin: \"0 auto\" }}>\r\n                                        <div className=\"checkboxstuff\" style={{ margin: \"0 auto\" }}>\r\n                                        <h1 >{this.state.tempGoal} </h1>{this.state.edit ? (\r\n                                    <div  >\r\n                                    </div>) : (<img className=\"huv\" src={edit} style={{width:\"30px\", height:\"30px\", marginLeft:\"40px\"}} onClick={this.editMe}/> )}\r\n                                        \r\n                                        </div>\r\n                                        \r\n                                    </div>)}\r\n\r\n\r\n\r\n                              \r\n\r\n\r\n                                    <div style={{ marginBottom: \"20px\" }}>\r\n                                        {this.state.edit ? (<div >\r\n\r\n                                            <div >\r\n                                            <label htmlFor=\"tempDescription\"><h5>Describe this goal.</h5></label>\r\n                                                <div className=\"form-group\" >\r\n\r\n                                                    <textarea\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        rows=\"4\"\r\n                                                        id=\"tempDescription\"\r\n                                                        value={this.state.tempDescription}\r\n                                                        onChange={this.handleChange}\r\n                                                        name=\"tempDescription\"\r\n                                                       \r\n                                                    ></textarea>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n\r\n                                        ) : (<div>\r\n                                                <div className=\"centerize\" style={{ margin: \"0 auto\", marginTop:\"10px\" }}>\r\n                                                <div className=\"checkboxstuff\" style={{ margin: \"0 auto\", height: \"200px\" }}>\r\n                                                    <div className=\"homeworkScroll\">\r\n                                                        <p ><b>Description </b>: {this.state.tempDescription} </p>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            \r\n                                        </div>)}\r\n                                    </div>\r\n\r\n\r\n\r\n                                    \r\n                                   \r\n\r\n\r\n\r\n                               \r\n\r\n\r\n                                    \r\n                              \r\n\r\n                                \r\n\r\n\r\n\r\n                               \r\n                            \r\n\r\n                        </div>\r\n\r\n                        )\r\n                            :\r\n\r\n                            (<div>\r\n                            {this.props.main? (\r\n                                 <div className=\"\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"15px\"}} ><h1  style={{alignSelf: \"center\"}}>{this.props.Goal.mainGoal.title} </h1>\r\n                                 <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                                 <div style={{alignSelf: \"center\"}} >\r\n                                 {this.props.Goal.mainGoal.description}\r\n                                 </div></div>\r\n\r\n\r\n                            ) : (\r\n\r\n                                <div className=\"\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"15px\"}} ><h1  style={{alignSelf: \"center\"}}>{this.props.Goal.title} </h1>\r\n                            <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                            <div style={{alignSelf: \"center\"}} >\r\n                            {this.props.Goal.description}\r\n                            </div></div>\r\n                            )}</div>\r\n                            )}\r\n                        \r\n                           \r\n                        {this.props.role !== \"student\" ? (\r\n\r\n                            <div style={{ position: \"abosolute\", bottom: \"0px\" }}>\r\n                                {this.state.edit ? (\r\n                                    <div style={{ width: \"125px\" }} >\r\n                                        <button className=\"btn btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\" }} onClick={this.save}><span className=\"fill1\"><p style={{ marginBottom: \"10px\" }}>Save</p></span></button>\r\n                                    </div>) : (<div></div>)}\r\n\r\n                            </div>) : (\r\n\r\n                                <div></div>)}\r\n                    </div>\r\n                    \r\n                   \r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Show_goal;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/addGoal.js",["568"],"import React, { Component } from \"react\";\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass addGoal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.more = this.more.bind(this);\r\n\r\n        this.state = {\r\n\r\n            type: \"\",\r\n            more: false,\r\n            \r\n\r\n        }\r\n\r\n    };\r\n    more(){\r\n        this.setState({\r\n            more: !this.state.more,\r\n        })\r\n    }\r\n    \r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClosing();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup-box\" style={{ zIndex: \"1010\" }}>\r\n                <div ref={this.wrapperRef}  className=\"diapicboxa\" style={{ zIndex: \"1010\" }}>\r\n                    <span className=\"close-icon-2\" onClick={this.props.handleClosing}>x</span>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\"><h5>Add Goal</h5></label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"goal\"\r\n\r\n                            onChange={this.props.handleChange}\r\n                            name=\"goal\"\r\n                        />\r\n\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"description\"><h5>Description</h5></label>\r\n                        <div className=\"form-group\" >\r\n\r\n                            <textarea\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                rows=\"4\"\r\n                                id=\"description\"\r\n                                value={this.state.tempDescription}\r\n                                onChange={this.props.handleChange}\r\n                                name=\"description\"\r\n\r\n                            ></textarea>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n\r\n                    <div>\r\n\r\n                        <button className=\"btn  btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\" }}  onClick={this.props.handlegoal}>Add Goal</button>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default addGoal;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/fullpic.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/homeworked.js",["569"],"import React, { Component } from \"react\";\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass Homeworkes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.wrapperRef = React.createRef();\r\n        \r\n        this.more = this.more.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChanges = this.handleChanges.bind(this);\r\n        this.handleChanges1 = this.handleChanges1.bind(this);\r\n\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n\r\n        this.state = {\r\n\r\n            type: \"\",\r\n            more: false,\r\n            yesnoCheckbox: false,\r\n            yesnoTimes: false,\r\n            time: false,\r\n            link: false,\r\n            hwdailytimebiao: false,\r\n            hwtimew: false,\r\n            tooSmall: false,\r\n            class: \"homeworkScroll\",\r\n            height: \"auto\",\r\n        }\r\n\r\n    };\r\n    handleChange = (event) => {\r\n\r\n        const { name, value } = event.target\r\n\r\n        if (value === \"true\") {\r\n            this.setState({\r\n                [name]: true,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                [name]: false,\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    more(){\r\n        this.setState({\r\n            more: !this.state.more,\r\n            class: \"homeworkScroll1\"\r\n        })\r\n    }\r\n    handleChanges1 = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        if (value === \"true\") {\r\n            this.setState({\r\n                [name]: true,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                [name]: false,\r\n            })\r\n        }\r\n        this.props.handleChange(event);\r\n      \r\n    }\r\n    handleChanges = (event) => {\r\n        \r\n        \r\n\r\n        this.props.handleChange(event);\r\n        if(this.state.tooSmall){\r\n            this.setState({\r\n                height: \"85%\"\r\n            });\r\n\r\n        }\r\n        else{\r\n            this.setState({\r\n                height: \"70%\"\r\n            });\r\n\r\n        }\r\n        \r\n    }\r\n  \r\n    componentDidMount() {\r\n\r\n        if(parseInt(window.innerWidth) <= 550){\r\n            this.setState({ tooSmall: true });\r\n            }\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClosing();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup-box\" style={{ zIndex: \"1010\" }}>\r\n                <div ref={this.wrapperRef} className=\"boxforhw \" style={{ height:  this.state.height  }}>\r\n                    \r\n                    <span className=\"close-icon-2\" onClick={this.props.handleClosing}>x</span>\r\n                    <div className= {this.state.class}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\"><b>Homework Name:</b></label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"homework\"\r\n                            style={{width:\"95%\"}}\r\n                            onChange={this.props.handleChange}\r\n                            name=\"homework\"\r\n                        />\r\n                    </div>\r\n                        <div style={{marginBottom:\"15px\", marginTop:\"10px\"}}>\r\n\r\n                            <p className=\"rowss3a huv\" onClick={this.more}>Advanced Options</p>\r\n                    </div>\r\n\r\n                    {this.state.more ?\r\n                        (<div>\r\n                            <div>\r\n                                <label htmlFor=\"hwtype\">What Type of Homework is This?</label>\r\n                                    <select htmlfor=\"hwtype\" onChange={this.handleChanges } name=\"hwtype\" id=\"hwtype\">\r\n                                    \r\n                                    <option  value=\"assignment\">Assignment</option>\r\n                                    <option value=\"practice\">Practice</option>\r\n                                    \r\n                                    \r\n                                    <option  value=\"research\">Research</option>\r\n                                    \r\n\r\n                                </select>\r\n                            </div>\r\n                        \r\n                            <div style={{width:\"95%\"}}>\r\n                                {\r\n                                    this.props.practice ?\r\n                                        (\r\n                                            <div>\r\n                                                \r\n                                                <div className=\"form-group\">\r\n                                                    <label>Describe the practice assignment.</label>\r\n                                                    <textarea\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        rows=\"3\"\r\n                                                        id=\"hwdescription\"\r\n                                                        \r\n                                                        onChange={this.props.handleChange}\r\n                                                        name=\"hwdescription\"\r\n                                                    ></textarea>\r\n\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Do you want to use checkboxes to track this practice assignment's progress? </label>\r\n                                                    <select htmlfor=\"yesnoCheckbox\" onChange={this.handleChange} name=\"yesnoCheckbox\" id=\"yesnoCheckbox\">\r\n                                                        <option value=\"\"></option>\r\n                                                        <option value={true}>yes</option>\r\n                                                        <option value={false}>no</option>\r\n                                                       \r\n                                                    </select>\r\n                                                </div>\r\n                                                {this.state.yesnoCheckbox ? (<div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label>How many days should the student practice this assignment?</label>\r\n                                                        <select htmlfor=\"hwcheckboxes\" onChange={this.props.handleChange} name=\"hwcheckboxes\" id=\"hwcheckboxes\">\r\n                                                            <option value=\"\"></option>\r\n                                                            <option value=\"1\">1</option>\r\n                                                            <option value=\"2\">2</option>\r\n                                                            <option value=\"3\">3</option>\r\n                                                            <option value=\"4\">4</option>\r\n                                                            <option value=\"5\">5</option>\r\n                                                            <option value=\"6\">6</option>\r\n                                                            <option value=\"7\">7</option>\r\n                                                            <option value=\"0\">Does Not Apply</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label>Display practice checkboxes with days of the week?</label>\r\n                                                        <select htmlfor=\"hwsynccheck\" onChange={this.props.handleChange} name=\"hwsynccheck\" id=\"hwsynccheck\">\r\n                                                            <option value=\"\"></option>\r\n                                                            <option value={true}>yes</option>\r\n                                                            <option value={false}>no</option>\r\n\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>) : (<div></div>)}\r\n                                                \r\n                                                <div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label>How many times should this student complete this practice assignment per day? </label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"daily\"\r\n                                                            required\r\n                                                            onChange={this.props.handleChange}\r\n                                                            name=\"daily\"\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                  {/*\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Should this student be required to practice a certain amount of time for this assignment every week?</label>\r\n                                                        <select htmlfor=\"hwtimew\" onChange={this.handleChange} name=\"hwtimew\" id=\"hwtimew\">\r\n                                                        <option value=\"\"></option>\r\n                                                        <option value={true}>yes</option>\r\n                                                        <option value={false}>no</option>\r\n\r\n                                                    </select>\r\n                                                </div>\r\n                                                  {this.state.hwtimew ? (*/}\r\n                                                  <div> \r\n                                                    <div className=\"form-group\" >\r\n                                                        <label htmlFor=\"HWweeklytimebiao\">How much time should this student practice per week?</label>\r\n                                                        <input\r\n\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"HWweeklytimebiao\"\r\n                                                            style={{ width: \"60px\" }}\r\n                                                            onChange={this.props.handleChange}\r\n                                                            name=\"HWweeklytimebiao\"\r\n                                                        /><p>Minutes</p>\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className=\"form-group\" >\r\n                                                            <label htmlFor=\"hwdmin\">How much time should this student practice per day?</label>\r\n                                                            <input\r\n\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                id=\"hwdmin\"\r\n                                                                style={{ width: \"60px\" }}\r\n                                                                onChange={this.props.handleChange}\r\n                                                                name=\"hwdmin\"\r\n                                                            /><p>Minutes</p>\r\n\r\n\r\n                                                        </div>\r\n                                                         {/*\r\n                                                        <div className=\"form-group\" >\r\n                                                        <label>Do you want this practice synced to the day on which it was practiced? </label>\r\n                                                        <select style={{ width: \"40%\" }} htmlFor=\"hwtimesync\" onChange={this.props.handleChange} name=\"hwtimesync\" id=\"hwtimesync\">\r\n                                                            <option value=\"\"></option>\r\n                                                            <option value={true}>Yes</option>\r\n                                                            <option value={false}>No</option>\r\n\r\n                                                        </select>\r\n                                                         </div> */}\r\n\r\n                                                    \r\n                                                </div>{/*) : (<div></div>)}\r\n                                                    \r\n                                                    <div className=\"form-group\" >\r\n                                                        <label>Would you like to set a daily time goal?</label>\r\n                                                        <select htmlFor=\"hwdailytimebiao\" onChange={this.handleChanges1} name=\"hwdailytimebiao\" id=\"hwdailytimebiao\">\r\n                                                            <option value=\"\"></option>\r\n                                                            <option value={true}>yes</option>\r\n                                                            <option value={false}>no</option>\r\n                                                            <option value={false}>Not Sure Yet</option>\r\n\r\n\r\n                                                        </select>\r\n                                                    </div>*/}\r\n                                                    \r\n                                                        \r\n                                                   \r\n\r\n                                                   \r\n                                                    {/*}\r\n                                                <div className=\"form-group\" >\r\n                                                    <label>Is there a website link you would like to add for this assignment </label>\r\n                                                    <select style={{ width: \"40%\" }} htmlFor=\"link\" onChange={this.handleChange} name=\"link\" id=\"link\">\r\n                                                        <option value=\"\"></option>\r\n                                                        <option value={true}>Yes</option>\r\n                                                        <option value={false}>No</option>\r\n\r\n                                                    </select>\r\n                                                    </div> */}\r\n                                                <div>\r\n                                                    <div className=\"form-group\" >\r\n                                                        <label htmlFor=\"hwlink\">Add a link for this homework:</label>\r\n                                                        <input\r\n                                                            style={{ width: \"40%\" }}\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"hwlink\"\r\n\r\n                                                            onChange={this.props.handleChange}\r\n                                                            name=\"hwlink\"\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                                {/** \r\n                                                <div className=\"form-group\" >\r\n                                                    <label>Would you like to add a feild for students to ask questions and you to respond? </label>\r\n                                                    <select style={{ width: \"40%\" }} htmlFor=\"hwQuestions\" onChange={this.props.handleChange} name=\"hwQuestions\" id=\"hwQuestions\">\r\n                                                        <option value=\"\"></option>\r\n                                                        <option value={true}>Yes</option>\r\n                                                        <option value={false}>No</option>\r\n\r\n                                                    </select>\r\n                                                </div>\r\n                                                */}\r\n                                               \r\n                                            </div>\r\n                                        ) :\r\n                                        (<div>{\r\n                                            this.props.assignment ?\r\n                                                (<div>\r\n                                                    <div className=\"form-group\">\r\n                                                    <label>When is the assignment due?</label>\r\n                                                    <input\r\n                                                    id=\"hwdate\"\r\n                                                    name=\"hwdate\"\r\n                                                    \r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n\r\n\r\n                                                    onChange={this.props.handleChange}\r\n\r\n                                                />\r\n                                                    \r\n                                                    {/*<input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                            id=\"hwdate\"\r\n                                                        required\r\n                                                        onChange={this.props.handleChange}\r\n                                                            name=\"hwdate\"\r\n                                                    />*/}\r\n\r\n                                                    </div>\r\n                                                   \r\n                                                    <div className=\"form-group\">\r\n                                                        <label>Describe the assignment.</label>\r\n                                                        <textarea\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        rows=\"3\"\r\n                                                        id=\"hwdescription\"\r\n                                                        \r\n                                                        onChange={this.props.handleChange}\r\n                                                        name=\"hwdescription\"\r\n                                                    ></textarea>\r\n\r\n                                                        </div>\r\n                                                        <div>\r\n                                                    <div className=\"form-group\" >\r\n                                                        <label htmlFor=\"hwlink\">Add a link for this homework:</label>\r\n                                                        <input\r\n                                                            style={{ width: \"40%\" }}\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"hwlink\"\r\n\r\n                                                            onChange={this.props.handleChange}\r\n                                                            name=\"hwlink\"\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                        {/** \r\n                                                        <div className=\"form-group\" >\r\n                                                            <label>Would you like to add a feild for students to ask questions and you to respond? </label>\r\n                                                            <select style={{ width: \"40%\" }} htmlFor=\"hwQuestions\" onChange={this.props.handleChange} name=\"hwQuestions\" id=\"hwQuestions\">\r\n                                                                <option value=\"\"></option>\r\n                                                                <option value={true}>Yes</option>\r\n                                                                <option value={false}>No</option>\r\n\r\n                                                            </select>\r\n                                                        </div> */}\r\n                                                </div>)\r\n                                                :\r\n                                                (<div>{this.props.research ?\r\n                                                    (<div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>When is the research due?</label>\r\n                                                            <input\r\n                                                    id=\"hwdate\"\r\n                                                    name=\"hwdate\"\r\n                                                    \r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n\r\n\r\n                                                    onChange={this.props.handleChange}\r\n\r\n                                                />\r\n                                                           {/*} <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                id=\"hwdate\"\r\n                                                                required\r\n                                                                onChange={this.props.handleChange}\r\n                                                                name=\"hwdate\"\r\n                                                    />*/}\r\n\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>Describe the research.</label>\r\n                                                            <textarea\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        rows=\"3\"\r\n                                                        id=\"hwdescription\"\r\n                                                        \r\n                                                        onChange={this.props.handleChange}\r\n                                                        name=\"hwdescription\"\r\n                                                    ></textarea>\r\n\r\n                                                            </div>\r\n                                                            <div>\r\n                                                    <div className=\"form-group\" >\r\n                                                        <label htmlFor=\"hwlink\">Add a link for this homework:</label>\r\n                                                        <input\r\n                                                            style={{ width: \"40%\" }}\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"hwlink\"\r\n\r\n                                                            onChange={this.props.handleChange}\r\n                                                            name=\"hwlink\"\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                            {/** \r\n                                                            <div className=\"form-group\" >\r\n                                                                <label>Would you like to add a feild for students to ask questions and you to respond? </label>\r\n                                                                <select style={{ width: \"40%\" }} htmlFor=\"hwQuestions\" onChange={this.props.handleChange} name=\"hwQuestions\" id=\"hwQuestions\">\r\n                                                                    <option value=\"\"></option>\r\n                                                                    <option value={true}>Yes</option>\r\n                                                                    <option value={false}>No</option>\r\n\r\n                                                                </select>\r\n                                                            </div>*/}\r\n                                                    </div>)\r\n                                                    :\r\n                                                    (<div></div>)}\r\n                                                </div>)}</div>\r\n                                        )}\r\n                            </div></div>\r\n                    ) : (<div></div>)\r\n                    }\r\n\r\n                        <div style={{ marginTop: \"20px\", }}>\r\n\r\n                            <button className=\"btn btn-block\" style={{ background: \"#696eb5\",  color: \"#F0F2EF\", }} onClick={this.props.handleClose}>Add Homework</button>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Homeworkes;\r\n/* for all three.\r\n <div className=\"form-group\" >\r\n                                                            <label>Would you like to add a text box for students to express where they are struggling with this assignment? </label>\r\n                                                            <select style={{ width: \"40%\" }} htmlFor=\"struggles\" onChange={this.props.handleChange} name=\"struggles\" id=\"struggles\">\r\n                                                                <option value=\"\"></option>\r\n                                                                <option value={true}>Yes</option>\r\n                                                                <option value={false}>No</option>\r\n\r\n                                                            </select>\r\n                                                        </div>\r\n */","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/student_profile.js",["570","571","572","573"],"import React, { Component } from \"react\";\r\nimport background from \"./music.png\";\r\nimport Pic from \"../components/diapicture\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport \"./pages.css\"\r\nimport edit from \"./edit.png\";\r\nimport Editing from \"../components/editing\";\r\nimport EditBack from \"../components/editBackground\";\r\nimport Checkboxnum from \"../components/practice.js\";\r\nimport axios from \"axios\";\r\n//import Goals from \"./goals\";\r\n//import Goals from \"./goals1\";\r\nimport Goals from \"./goals2\";\r\nimport Timess from \"../components/timess.js\"\r\nimport leaf from \"./leaf.png\";\r\nimport ShowHomework from \"../components/showHomework\"\r\nimport Goal from \"../components/showgoal.js\";\r\nimport Checkboxnum3 from \"../components/practice3.js\";\r\nimport bullet from \"./bulletarrow.png\"\r\n\r\nimport Checkboxnum2 from \"../components/practice2.js\";\r\nimport authService from \"../services/auth.service\";\r\nimport Starpointz from \"../components/starpointz.js\";\r\nimport Splashscreen  from \"../components/splashscreen.js\";\r\n\r\n\r\n\r\n\r\nexport default class Student_profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.openPic = this.openPic.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleEditClose = this.handleEditClose.bind(this);\r\n        this.editMe = this.editMe.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.editBackground = this.editBackground.bind(this);\r\n        this.handleBackClose = this.handleBackClose.bind(this);\r\n        this.handleSub = this.handleSub.bind(this);\r\n        this.getCurrentUserinRealTime = this.getCurrentUserinRealTime.bind(this);\r\n        this.practice = this.practice.bind(this);\r\n        this.showHomework = this.showHomework.bind(this);\r\n        this.hideHomeworkClose = this.hideHomeworkClose.bind(this);\r\n        this.showGoal = this.showGoal.bind(this);\r\n        this.handlegoalClose = this.handlegoalClose.bind(this);\r\n        this.handletimesClose = this.handletimesClose.bind(this);\r\n        this.changeweek = this.changeweek.bind(this);\r\n        this.hwpractice = this.hwpractice.bind(this);\r\n        this.starpointz = this.starpointz.bind(this);\r\n        this.handletimesOpen = this.handletimesOpen.bind(this);\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n\r\n        \r\n        this.changetimes = this.changetimes.bind(this);\r\n\r\n        this.state = {\r\n            diaPic: false,\r\n            edit: false,\r\n            picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            newPic: \"\",\r\n            currentUser: AuthService.getCurrentUser(),\r\n            realtimeusr: undefined,\r\n            realtimeusr0: undefined,\r\n            back: background,\r\n            about: \"this is how you learn\",\r\n            first: \"\",\r\n            last: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            edittheBackground: false,\r\n            background: background,\r\n            currentStudent: undefined,\r\n            day: \"\",\r\n            time: \"\",\r\n            checkboxes: \"\",\r\n            homework: \"\",\r\n            hwpractice: 0,\r\n            practice: 0,\r\n            daysPracticed: 0,\r\n            totalDays: 0,\r\n            homeworks: \"\",\r\n            currentHomework: undefined,\r\n            showGoal: false,\r\n            newcheck: false,\r\n            changetime: \"\",\r\n            minedit: \"\",\r\n            timeedit: \"\",\r\n            timesedit: false,\r\n            weeklyTimeEdit: \"\",\r\n            c: false,\r\n            t: false,\r\n            starpointz: false,\r\n            timecheck: false,\r\n            timedaycheck: false,\r\n            statsmargin: \"60px\",\r\n            timepracmargin: \"40%\",\r\n            timepracmarginr: \"40%\",\r\n            dayspracmargin: \"40%\",\r\n            splashscreen:false,\r\n            pracgoalmargin: \"40%\",\r\n            amarginLeft: \"30px\",\r\n            aheight:\"140px\",\r\n            tmarginTop:\"25px\",\r\n            widthforedit: \"80%\",\r\n            sp: \"0\",\r\n            main: undefined\r\n            \r\n        }\r\n\r\n    };\r\n    async Splashscreen(){\r\n        this.setState({\r\n            splashscreen:!this.state.splashscreen\r\n        })\r\n        \r\n        const delay = ms => new Promise(res => setTimeout(res, ms));\r\n        await delay(650)\r\n            window.location.reload();\r\n\r\n        \r\n\r\n    }\r\n\r\n    starpointz() {\r\n        if(this.state.realtimeusr.starPoints){\r\n        this.setState({\r\n            starpointz: !this.state.starpointz\r\n        })\r\n    }\r\n        this.props.props.show();\r\n    }\r\n    showGoal(goal, main) {\r\n        \r\n        this.setState({\r\n            showGoal: true,\r\n            currentgoal: goal,\r\n            main: main\r\n        });\r\n        this.props.props.show();\r\n\r\n    }\r\n    handlegoalClose() {\r\n        this.setState({\r\n            showGoal: false,\r\n            main: false,\r\n        });\r\n        this.props.props.show();\r\n    }\r\n\r\n    practice(sign, sync, day) {\r\n        \r\n        if (sync) {\r\n            let sp= \"\";\r\n            let pass = false;\r\n            let npass= false;\r\n            let daystreak = parseInt(this.state.realtimeusr.daystreak);\r\n            let x = parseInt(this.state.practice);\r\n            let xx = parseInt(this.state.daysPracticed);\r\n            if (sign) {\r\n                daystreak++;\r\n                x++;\r\n                xx++;\r\n                sp = ((parseInt(this.state.realtimeusr.starpoints)) + (20*daystreak)).toString();\r\n\r\n\r\n            \r\n            if (parseInt(sp) >= parseInt(this.state.realtimeusr.starpointsGoal)){\r\n                pass= true;\r\n            \r\n\r\n            }\r\n            if(this.state.realtimeusr.edityesnoWeek){\r\n                this.setState({   timesedit:true, timecheck:true});\r\n\r\n            }\r\n            if(this.state.realtimeusr.timeday){\r\n                console.log(daystreak, this.state.realtimeusr.timeday, sp)\r\n                let nday ={\r\n                    M: \"mon\",\r\n                    T: \"tues\",\r\n                    W: \"wed\",\r\n                    R: \"thur\",\r\n                    F: \"fri\",\r\n                    S: \"sat\",\r\n                    s: \"sun\",\r\n\r\n                    \r\n                }\r\n                let theday= nday[day];\r\n                this.setState({timesedit:true, timecheck:true, timedaycheck: true, timeedit: theday  });\r\n            }\r\n            else{\r\n                if(this.state.realtimeusr.starPoints){\r\n                    this.setState({sp: sp});\r\n                this.setState({  starpointz: true, });\r\n                }\r\n                this.props.props.show();\r\n            }\r\n            this.setState({ practice: x.toString(), daysPracticed: xx.toString(), });\r\n\r\n\r\n            }\r\n            else {\r\n                sp = ((parseInt(this.state.realtimeusr.starpoints)) - (20*daystreak)).toString();\r\n                \r\n\r\n\r\n            \r\n                if (parseInt(sp) <= 0){\r\n                    \r\n                    pass= true;\r\n                    npass= true;\r\n    \r\n                }\r\n\r\n                \r\n                \r\n                daystreak--;\r\n                x--;\r\n                xx--;\r\n                \r\n\r\n\r\n            \r\n               \r\n                \r\n               \r\n                this.setState({ practice: x.toString(), daysPracticed: xx.toString(), });\r\n\r\n            }\r\n            console.log(this.props.props.props.currentPage._id, day, sign, this.state.practice, this.state.daysPracticed, this.state.realtimeusr.level, sp, this.state.realtimeusr.starpointsGoal, pass, daystreak, npass )\r\n            \r\n            AuthService.syncedchecking(this.props.props.props.currentPage._id, day, sign, this.state.practice, this.state.daysPracticed, this.state.realtimeusr.level, sp, this.state.realtimeusr.starpointsGoal, pass, daystreak, npass )\r\n        }\r\n        else {\r\n            let sp= \"\";\r\n            let pass = false;\r\n            let npass= false;\r\n            let daystreak = parseInt(this.state.realtimeusr.daystreak);\r\n\r\n            let x = this.state.practice;\r\n            let xx = this.state.daysPracticed;\r\n            if (sign) {\r\n                daystreak++;\r\n                x++;\r\n                xx++;\r\n                sp = ((parseInt(this.state.realtimeusr.starpoints)) + (20*daystreak)).toString();\r\n\r\n\r\n            \r\n                if (parseInt(sp) >= parseInt(this.state.realtimeusr.starpointsGoal)){\r\n                    pass= true;\r\n                \r\n    \r\n                }\r\n                if(this.state.realtimeusr.edityesnoWeek){\r\n                    this.setState({   timesedit:true, timecheck:true});\r\n    \r\n                }\r\n                if(this.state.realtimeusr.timeday){\r\n                    let nday ={\r\n                        1: \"mon\",\r\n                        2: \"tues\",\r\n                        3: \"wed\",\r\n                        4: \"thur\",\r\n                        5: \"fri\",\r\n                        6: \"sat\",\r\n                        7: \"sun\",\r\n    \r\n                        \r\n                    }\r\n                    console.log(x);\r\n                    let theday= nday[x];\r\n                    console.log(theday);\r\n                    this.setState({timesedit:true, timecheck:true, timedaycheck: true, timeedit: theday  });\r\n                }\r\n                else{\r\n                    if(this.state.realtimeusr.starPoints){\r\n                        this.setState({sp:sp})\r\n                    this.setState({  starpointz: true, });\r\n                    }\r\n                    this.props.props.show();\r\n                }\r\n                this.setState({ practice: x.toString(), daysPracticed: xx.toString(), });\r\n\r\n            }\r\n            else {\r\n                \r\n                sp = ((parseInt(this.state.realtimeusr.starpoints)) - (20*daystreak)).toString();\r\n                console.log(sp)\r\n                \r\n\r\n\r\n            \r\n                if (parseInt(sp) <= 0){\r\n                    \r\n                    pass= true;\r\n                    npass= true;\r\n    \r\n                }\r\n\r\n                \r\n                \r\n                daystreak--;\r\n                x--;\r\n                xx--;\r\n               \r\n                this.setState({ practice: x, daysPracticed: xx, });\r\n\r\n            }\r\n            \r\n            AuthService.checked(this.props.props.props.currentPage._id, this.state.practice, this.state.realtimeusr.level, sp, this.state.realtimeusr.starpointsGoal, pass, daystreak, npass);\r\n            AuthService.daysPracticed(this.props.props.props.currentPage._id, this.state.daysPracticed,);\r\n        }\r\n    }\r\n\r\n    hwpractice(sign, sync, day, practice) {\r\n        if (sync) {\r\n            console.log(practice);\r\n            let x = practice;\r\n            if (sign) {\r\n                x++;\r\n                this.setState({ hwpractice: x,  });\r\n\r\n            }\r\n            else {\r\n                x--;\r\n                this.setState({ hwpractice: x,  });\r\n\r\n            }\r\n            AuthService.hwsyncedchecking(this.props.props.props.currentPage._id, day, sign, this.state.hwpractice, this.state.currentHomework._id, this.state.currentHomework.syncedCheckboxes)\r\n        }\r\n        else {\r\n            console.log(practice);\r\n            let x;\r\n            if (!practice) {\r\n                x = 0;\r\n            }\r\n            else {\r\n                x = practice;\r\n            }\r\n            if (sign) {\r\n                x++;\r\n                this.setState({ hwpractice: x, });\r\n\r\n            }\r\n            else {\r\n                x--;\r\n                this.setState({ hwpractice: x, });\r\n\r\n            }\r\n            AuthService.hwchecked(this.props.props.props.currentPage._id, this.state.currentHomework._id, this.state.hwpractice,);\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentUserinRealTime(currentStudent) {\r\n        \r\n\r\n        console.log(currentStudent._id);\r\n        let id = currentStudent._id;\r\n                const API_URL = \"https://legato.flinnapps.com/api/auth/\";\r\n\r\n        //const API_URL = \"http://localhost:8080/api/auth/\";\r\n        console.log(id);\r\n\r\n        console.log(this.props);\r\n\r\n            axios.post(API_URL + \"getstudent\", {\r\n                id,\r\n\r\n            }).then(response => {\r\n                console.log(\"I ran this\");\r\n                this.setState({ realtimeusr: response.data.student });\r\n\r\n                if (this.state.realtimeusr.profilepic) {\r\n\r\n                                        const porfilePic = this.state.realtimeusr.profilepic;\r\n\r\n                    //const porfilePic = 'http://localhost:8080' + this.state.realtimeusr.profilepic;\r\n                    this.setState({ picture: porfilePic });\r\n                }\r\n                else {\r\n                    const porfilePic = \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\";\r\n                    this.setState({ picture: porfilePic });\r\n                }\r\n                if (this.state.realtimeusr.backgroundpic) {\r\n                                        const background = this.state.realtimeusr.backgroundpic;\r\n\r\n                    //const background = 'http://localhost:8080' + this.state.realtimeusr.backgroundpic;\r\n                    this.setState({ background: background });\r\n                }\r\n                else {\r\n                    const background = this.state.back;\r\n\r\n                    this.setState({ background: background });\r\n                }\r\n\r\n                var ar = \"\";\r\n                let ampm = false;\r\n                for (let i = 0, j = i + 1; i < this.state.realtimeusr.scheduling.length; i++, j++) {\r\n\r\n                    if (i === 0) {\r\n\r\n\r\n                        if (this.state.realtimeusr.scheduling.length === 4) {\r\n\r\n                            if (this.state.realtimeusr.scheduling[0] === \"1\") {\r\n                                \r\n                                if (this.state.realtimeusr.scheduling[1] === \"0\") {\r\n                                    ar = ar + \"10\";\r\n                                    ampm = true;\r\n\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"1\") {\r\n                                    ar = ar + \"11\";\r\n                                    ampm = true;\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"2\") {\r\n                                    ar = ar + \"12\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"3\") {\r\n                                    ar = ar + \"1\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"4\") {\r\n                                    ar = ar + \"2\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"5\") {\r\n                                    ar = ar + \"3\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"6\") {\r\n                                    ar = ar + \"4\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"7\") {\r\n                                    ar = ar + \"5\";\r\n\r\n                                    console.log(ar);\r\n\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"8\") {\r\n                                    ar = ar + \"6\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"9\") {\r\n                                    ar = ar + \"7\";\r\n                                }\r\n\r\n                            } else if (this.state.realtimeusr.scheduling[0] === \"2\") {\r\n                                if (this.state.realtimeusr.scheduling[1] === \"0\") {\r\n                                    ar = ar + \"8\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"1\") {\r\n                                    ar = ar + \"9\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"2\") {\r\n                                    ar = ar + \"10\";\r\n                                }\r\n                                if (this.state.realtimeusr.scheduling[1] === \"3\") {\r\n                                    ar = ar + \"11\";\r\n                                }\r\n                            }\r\n                            else if (this.state.realtimeusr.scheduling[0] === \"0\") {\r\n                                if (this.state.realtimeusr.scheduling[1] === \"0\") {\r\n                                    ar = ar + \"12\";\r\n                                    ampm = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            ar = ar + this.state.realtimeusr.scheduling[i];\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    else {\r\n                        if (this.state.realtimeusr.scheduling.length === 3) {\r\n                            if (i === 1) {\r\n                                ar = ar + \":\";\r\n\r\n                            }\r\n                            ar = ar + this.state.realtimeusr.scheduling[i];\r\n\r\n                            if (i === 2) {\r\n                                ar = ar + \" AM\";\r\n                            }\r\n\r\n\r\n                        }\r\n                        else {\r\n                            if (this.state.realtimeusr.scheduling[j]) {\r\n                                if (i === 1) {\r\n                                    ar = ar + \":\";\r\n                                }\r\n                                ar = ar + this.state.realtimeusr.scheduling[j];\r\n                                if (i === 2) {\r\n                                    if (ampm) {\r\n                                        ar = ar + \" AM\";\r\n                                    }\r\n                                    else { ar = ar + \" PM\"; }\r\n\r\n                                }\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n                let prac = this.state.realtimeusr.checked;\r\n                let days = this.state.realtimeusr.daysPracticed;\r\n                let totaldays = this.state.realtimeusr.totalDays;\r\n                if (this.state.realtimeusr.checked === undefined) {\r\n                    prac = 0;\r\n                }\r\n                if (this.state.realtimeusr.daysPracticed === undefined) {\r\n                    days = 0;\r\n                }\r\n                if (this.state.realtimeusr.totalDays === undefined) {\r\n                    totaldays = 0;\r\n                }\r\n                if (this.state.realtimeusr.syncedCheckbox) {\r\n                    this.setState({\r\n                        c: true,\r\n                    })\r\n                }\r\n                if (this.state.realtimeusr.checkboxes !== \"0\") {\r\n                    this.setState({\r\n                        c: true,\r\n                    })\r\n\r\n                }\r\n                if (this.state.realtimeusr.edityesnoWeek) {\r\n                    this.setState({\r\n                        t: true,\r\n                    })\r\n                }\r\n                if (this.state.realtimeusr.timeday) {\r\n                    this.setState({\r\n                        t: true,\r\n                    })\r\n                }\r\n                this.setState({\r\n                    about: this.state.realtimeusr.about,\r\n                    first: this.state.realtimeusr.firstName,\r\n                    last: this.state.realtimeusr.lastName,\r\n                    email: this.state.realtimeusr.email,\r\n                    phone: this.state.realtimeusr.phone,\r\n                    day: this.state.realtimeusr.day,\r\n                    time: ar,\r\n                    checkboxes: this.state.realtimeusr.checkboxes,\r\n                    homework: this.state.realtimeusr.homework,\r\n                    homeworks: this.state.realtimeusr.homeworks,\r\n                    daysPracticed: days,\r\n                    totalDays: totaldays,\r\n                    practice: prac,\r\n                })\r\n                this.props.props.currentUserChange(this.state.realtimeusr.firstName, this.props.props.props.currentPage._id);\r\n\r\n            });\r\n        \r\n    }\r\n     async componentDidMount() {\r\n        \r\n        if(parseInt(window.innerWidth) <= 550){\r\n            this.setState({ tooSmall: true, \r\n                statsmargin: \"45px\",\r\n                timepracmargin: \"48%\",\r\n                timepracmarginr: \"37%\",\r\n                dayspracmargin: \"43%\",\r\n                amarginLeft: \"10px\",\r\n                aheight:\"200px\",\r\n                tmarginTop:\"50px\",\r\n                \r\n                pracgoalmargin: \"42%\",\r\n                \r\n                \r\n            });\r\n        }\r\n\r\n        \r\n         \r\n\r\n         await this.setState({\r\n             currentStudent: this.props.props.props.currentPage,\r\n         })\r\n\r\n         console.log(this.props.props.props.currentPage);\r\n\r\n\r\n        \r\n                \r\n         await this.getCurrentUserinRealTime(this.props.props.props.currentPage);\r\n\r\n        \r\n\r\n    }\r\n\r\n    async componentDidUpdate(prep, pres) {\r\n        console.log(prep);\r\n        console.log(this.props);\r\n        if (prep.props.props.currentPage._id !== this.props.props.props.currentPage._id) {\r\n            await this.setState({\r\n                currentStudent: this.props.props.props.currentPage,\r\n                picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n                newcheck: !this.state.newcheck,\r\n            })\r\n            if (this.props.props.props.currentPage.profilepic)\r\n                await this.setState({\r\n                    picture: this.props.props.props.currentPage.profilepic,\r\n                })\r\n            await this.getCurrentUserinRealTime(this.props.props.props.currentPage);\r\n\r\n        }\r\n    }\r\n\r\n    handleBackClose() {\r\n        this.setState({\r\n            edittheBackground: false\r\n        });\r\n    }\r\n    editBackground() {\r\n        this.setState({\r\n            edittheBackground: true,\r\n        })\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    editMe() {\r\n        this.setState({\r\n            edit: true\r\n        })\r\n        this.props.props.show()\r\n    }\r\n\r\n    handleEditClose() {\r\n        this.setState({\r\n            edit: false\r\n        });\r\n        this.props.props.show();\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            diaPic: false\r\n        });\r\n        this.props.props.show();\r\n    };\r\n\r\n    changePic(pic) {\r\n        this.setState({\r\n            diaPic: pic.toString()\r\n        });\r\n    };\r\n\r\n    openPic = (event) => {\r\n        this.setState(\r\n            {\r\n                diaPic: true\r\n            });\r\n            this.props.props.show();\r\n\r\n\r\n    };\r\n    handleSub(e) {\r\n        e.preventDefault();\r\n       \r\n        \r\n        AuthService.changeStudentinfo(\r\n            this.props.props.props.currentPage._id,\r\n            this.state.currentUser.id,\r\n            this.state.first,\r\n            this.state.last,\r\n            this.state.about,\r\n            this.state.email,\r\n            this.state.phone,\r\n            this.props.props.props.currentPage.scheduling,\r\n            this.state.checkboxes,\r\n            this.state.day\r\n        ).then(response => {\r\n            console.log(response.data.changed);\r\n            this.setState({\r\n                about: response.data.changed.about,\r\n                first: response.data.changed.firstName,\r\n                last: response.data.changed.lastName,\r\n                email: response.data.changed.email,\r\n                phone: response.data.changed.phone,\r\n                edit: false,\r\n                realtimeusr0: response.data.changed,\r\n                \r\n            });\r\n\r\n        })\r\n        \r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n       //window.location.reload();\r\n       this.Splashscreen();\r\n\r\n\r\n        this.props.props.show();\r\n\r\n    }\r\n    showHomework(homework) {\r\n        this.setState({\r\n            showHomework: true,\r\n            currentHomework: homework,\r\n        })\r\n        this.props.props.show();\r\n\r\n\r\n\r\n    }\r\n    hideHomeworkClose() {\r\n        this.setState({\r\n            showHomework: false\r\n        });\r\n        this.props.props.show();\r\n\r\n    };\r\n    handletimesOpen() {\r\n        this.setState({\r\n            timesedit: true\r\n        });\r\n    };\r\n    handletimesClose(stars) {\r\n        \r\n        this.setState({\r\n            timesedit: false\r\n        });\r\n        if(stars){\r\n            if(this.state.realtimeusr.starPoints){\r\n            this.setState({\r\n                starpointz: true\r\n            }); \r\n        }\r\n            this.props.props.show();\r\n        }\r\n    };\r\n    changetimes() {\r\n        let sp = this.state.realtimeusr.starpoints;\r\n        let daystreak = parseInt(this.state.realtimeusr.daystreak)\r\n        let pass = false;\r\n        let npass= false;\r\n        if(!this.state.realtimeusr.syncedCheckbox){\r\n            if(parseInt(this.state.realtimeusr.checkboxes)=== 0){\r\n               \r\n                if(parseInt(this.state.realtimeusr.hwtime[this.state.timeedit]) ===0)\r\n                {\r\n                if(parseInt(this.state.minedit)===0){\r\n                    \r\n                    sp = (parseInt(this.state.realtimeusr.starpoints) - (20*daystreak)).toString();\r\n                    if (parseInt(sp) <= 0){\r\n                    \r\n                        pass= true;\r\n                        npass= true;\r\n        \r\n                    }\r\n                    daystreak --;\r\n\r\n                }\r\n                else{\r\n                \r\n                daystreak = parseInt(this.state.realtimeusr.daystreak) + 1;\r\n            sp = (parseInt(this.state.realtimeusr.starpoints) + (20*daystreak)).toString();\r\n\r\n\r\n           \r\n            if (parseInt(sp) >= parseInt(this.state.realtimeusr.starpointsGoal)){\r\n                pass= true;\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n            }\r\n        else{\r\n            if(parseInt(this.state.minedit)===0){\r\n                    \r\n                sp = (parseInt(this.state.realtimeusr.starpoints) - (20*daystreak)).toString();\r\n                if (parseInt(sp) <= 0){\r\n                \r\n                    pass= true;\r\n                    npass= true;\r\n    \r\n                }\r\n                daystreak --;\r\n\r\n            }\r\n        }\r\n        \r\n    }\r\n        }\r\n        \r\n        if(!this.state.realtimeusr.syncedCheckbox){        authService.changetimes(this.props.props.props.currentPage._id, this.state.timeedit, this.state.minedit, this.state.realtimeusr.level, sp, this.state.realtimeusr.starpointsGoal, pass, daystreak.toString(), this.state.realtimeusr.timeTotal, npass   );\r\n        }\r\n        else{\r\n            authService.changetimes(this.props.props.props.currentPage._id, this.state.timeedit, this.state.minedit, this.state.realtimeusr.level, false, this.state.realtimeusr.starpointsGoal, pass, daystreak.toString(), this.state.realtimeusr.timeTotal, npass   );\r\n\r\n        }\r\n        \r\n         \r\n        \r\n\r\n       \r\n\r\n        if(!this.state.realtimeusr.syncedCheckbox){\r\n            if(parseInt(this.state.realtimeusr.checkboxes) === 0){\r\n                if(parseInt(this.state.realtimeusr.hwtime[this.state.timeedit]) ===0){\r\n                    if(this.state.realtimeusr.starPoints){\r\n                    this.setState({\r\n                    starpointz:true,\r\n\r\n                })\r\n            }\r\n                this.setState({\r\n                    timesedit: false,\r\n                })\r\n                this.props.props.show();\r\n            }\r\n            else{\r\n                if(this.state.timecheck){\r\n                    if(this.state.realtimeusr.starPoints){\r\n                    this.setState({\r\n                        starpointz: true,\r\n\r\n                    })\r\n                }\r\n                    this.setState({timesedit:false})\r\n                    this.props.props.show();\r\n                }\r\n                else{\r\n                //window.location.reload();\r\n                this.Splashscreen();\r\n            }\r\n\r\n\r\n            }\r\n                \r\n            \r\n            \r\n        }\r\n        else{\r\n            if(this.state.timecheck){\r\n                if(this.state.realtimeusr.starPoints){\r\n                this.setState({\r\n                    starpointz: true,\r\n\r\n                })\r\n            }\r\n            this.setState({timesedit:false})\r\n                this.props.props.show();\r\n            }\r\n            else{\r\n            //window.location.reload();\r\n            this.Splashscreen();\r\n        }\r\n        }\r\n\r\n\r\n\r\n\r\n            }\r\n         else{\r\n            if(this.state.timecheck){\r\n                if(this.state.realtimeusr.starPoints){\r\n                this.setState({\r\n                    starpointz: true,\r\n\r\n                })\r\n            }\r\n            this.setState({\r\n                timesedit:false\r\n            })\r\n                this.props.props.show();\r\n            }\r\n            else{\r\n           // window.location.reload();\r\n            this.Splashscreen();\r\n        }\r\n         }      \r\n            \r\n            \r\n        \r\n        \r\n    }\r\n    changeweek() {\r\n        console.log(\"iget here\")\r\n        let sp = this.state.realtimeusr.starpoints\r\n        let pass = false;\r\n\r\n\r\n        if(parseInt(this.state.realtimeusr.totalWeekTime.total) < parseInt(this.state.realtimeusr.min)){\r\n            if((parseInt(this.state.realtimeusr.totalWeekTime.total)+parseInt(this.state.weeklyTimeEdit)) >= parseInt(this.state.realtimeusr.min))\r\n\r\n            sp = (parseInt(this.state.realtimeusr.starpoints) + 100).toString();\r\n\r\n            \r\n            if (parseInt(sp) >= parseInt(this.state.realtimeusr.starpointsGoal)){\r\n                pass= true;\r\n\r\n            }\r\n        }\r\n\r\n       \r\n\r\n        authService.changeweek(this.props.props.props.currentPage._id, this.state.weeklyTimeEdit, this.state.realtimeusr.level, sp, this.state.realtimeusr.starpointsGoal, pass, this.state.realtimeusr.timeTotal, this.state.realtimeusr.totalWeekTime.total);\r\n\r\n        \r\n        if ((parseInt(this.state.realtimeusr.totalWeekTime.total)+parseInt(this.state.weeklyTimeEdit)) >= parseInt(this.state.realtimeusr.min)){\r\n            if (parseInt(this.state.realtimeusr.totalWeekTime.total) <  parseInt(this.state.realtimeusr.min)){\r\n                if(this.state.realtimeusr.starPoints){\r\n                this.setState({\r\n               starpointz: true,\r\n            });\r\n        }\r\n            this.props.props.show();\r\n        }\r\n        else{\r\n            if(this.state.timecheck){\r\n                if(this.state.realtimeusr.starPoints){\r\n                this.setState({\r\n                    starpointz:true,\r\n                })\r\n            }\r\n                this.props.props.show();\r\n            }\r\n            else{\r\n            //window.location.reload();\r\n            this.Splashscreen();\r\n            }\r\n\r\n        }\r\n    }\r\n        else{\r\n            if(this.state.timecheck){\r\n                if(this.state.realtimeusr.starPoints){\r\n                this.setState({\r\n                    starpointz:true,\r\n                })\r\n            }\r\n                this.props.props.show();\r\n            }\r\n            else{\r\n            //window.location.reload();\r\n            this.Splashscreen();\r\n            }\r\n    }\r\n       \r\n        \r\n\r\n        //window.location.reload();\r\n        this.setState({\r\n            timesedit: false,\r\n        });\r\n    }\r\n    \r\n    //render student information.  \r\n    render() {\r\n        \r\n        return (\r\n\r\n\r\n            <div className=\"z2 fill1 example\" >\r\n                {this.state.splashscreen && (<Splashscreen closesplash={this.Splashscreen}/>)}\r\n                <div className=\"columbized card-container0 \" style={{marginTop:this.state.tmarginTop}}>\r\n                    {this.state.diaPic && (<Pic handleClose={this.handleClose} realusr={this.state.realtimeusr} />)}\r\n\r\n                    {this.state.timesedit && (<Timess timedaycheck={this.state.timedaycheck} timecheck={this.state.timecheck} handleClose={this.handletimesClose} handleChange={this.handleChange} change={this.changetimes} changeweek={this.changeweek} weekly={this.state.realtimeusr.timeday } syncedCheckbox={this.state.realtimeusr.syncedCheckbox} checkboxes={this.state.realtimeusr.checkboxes}/>)}\r\n\r\n                {this.state.edittheBackground && (<EditBack handleBackClose={this.handleBackClose} realusr={this.state.realtimeusr} />)}\r\n\r\n                {this.state.edit && (<Editing state={this.state} handleSub={this.handleSub} handleEditClose={this.handleEditClose} handleChange={this.handleChange} currentUser={this.state.currentUser.role}/>)}\r\n                    {this.state.showHomework && (<ShowHomework homework={this.state.currentHomework} hideHomework={this.hideHomeworkClose} student={this.props.props.props.currentPage._id} role=\"student\" practice={this.hwpractice}/> )}\r\n                    {this.state.showGoal && (<Goal main={this.state.main} Goal={this.state.currentgoal} handleClose={this.handlegoalClose} role=\"student\" handletheclose={this.handlegoalsClose}/>)}\r\n                    {this.state.starpointz && (<Starpointz handleClose={this.starpointz} sp ={this.state.sp}/>)}\r\n\r\n\r\n                    \r\n                    <div className=\"front1 centerized\" style={{ position: \"relative\" }}>\r\n\r\n\r\n\r\n                            <div className=\"overlap\">\r\n\r\n                                <img\r\n                                    src={this.state.background}\r\n                                    alt=\"music\"\r\n                                    className=\"back-screen  cropped1\"\r\n                                    \r\n                                />\r\n                            </div>\r\n\r\n\r\n                        <div className=\"overlapsaab\" style={{marginTop: \"8%\"}} >\r\n\r\n                                <img\r\n                                src={this.state.picture}\r\n                                alt=\"profile-img\"\r\n                                className=\"profile-img-cardabc huv cropped1 centerized\"\r\n                                onClick={this.openPic}\r\n                                style={{position:\"relative\"}}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                     \r\n                \r\n                    <div className=\"makeitwork0abc\">\r\n\r\n                    <div className=\"makeitworkagain\">\r\n                        <h2>{this.state.first} {this.state.last}</h2>\r\n\r\n                    </div>\r\n                    <div className=\"makeitworkagain\" style={{width:this.state.widthforedit, display:\"flex\", justifyContent:\"center\"}}>\r\n\r\n                        {this.state.about}\r\n\r\n                    </div>\r\n                    <div>\r\n                        {this.state.email}\r\n                    </div>\r\n                    <div>\r\n                        {this.state.phone}\r\n                    </div>\r\n                    <div>\r\n                    Scheduled Time: {this.state.time} {this.state.day}\r\n                        </div>\r\n                        <div onClick={this.editMe} className=\"huv \">\r\n                                <p className=\"huv rowss3\">Edit Profile</p>\r\n\r\n\r\n                            </div>\r\n                    \r\n\r\n                </div>\r\n                \r\n\r\n               \r\n                </div>\r\n                <div className=\"columbized2a\" style={{marginTop:\"25px\"}}>\r\n                <div className=\"proStud5 \">\r\n                    <div className=\" card-container5ab\">\r\n                        {this.state.realtimeusr ? (<div className=\"fill1\">{\r\n                                this.state.realtimeusr ?\r\n                                (<div className=\"fill1\">\r\n                                        {this.state.realtimeusr ? (<Goals goalss={false} role={\"student\"} main={this.state.realtimeusr.mainGoals} goals={this.state.realtimeusr.goals} student={this.state.realtimeusr._id} \r\n                                        daysPracticed={this.props.props.props.currentPage.daysPracticed} totalDays={this.props.props.props.currentPage.totalDays} starpoints={this.state.realtimeusr.starpoints} \r\n                                        starpointsGoal={this.state.realtimeusr.starpointsGoal} level = {this.state.realtimeusr.level}  totalTime={this.state.realtimeusr.wmin} timePracticed={this.state.realtimeusr.timeTotal}\r\n                                        checkboxes={this.state.realtimeusr.checkboxes} wmin={this.state.realtimeusr.wmin} starPointz={this.state.realtimeusr.starPoints} show={this.props.props.show}\r\n                                        splashscreen={this.Splashscreen} MainGoals={this.state.realtimeusr.mainGoals}/>\r\n                                    ) : (<div> </div>\r\n                                        )}\r\n                                    {this.state.realtimeusr.goals[100] ? (<Goals goals={this.state.realtimeusr.goals} student={this.state.realtimeusr._id} />\r\n                                    ) : (<div> </div>\r\n                                        )}</div>\r\n                                    ) : (<div className=\"fill2 centerized\"><h6 style={{  color: \"gray\", height: \"40px\", marginTop:\"20%\"}} >No Goals assigned yet! </h6></div>)\r\n                            }</div>) : (<div className=\"fill2 centerized\"><h6 style={{  color: \"gray\", height: \"40px\", marginTop:\"20%\" }} >No Goals assigned yet! </h6> </div>)}\r\n                    \r\n\r\n                        </div>\r\n\r\n                        <div className=\" card-container5abc\">\r\n                            {this.state.realtimeusr ? (<div className=\"fill1\">{\r\n                                this.state.realtimeusr.mainGoal ?\r\n                                    (<div className=\"fill1\">\r\n                                        {this.state.realtimeusr ? (<Goals goalss={true} role={\"student\"} main={this.state.realtimeusr.mainGoal} goals={this.state.realtimeusr.goals} student={this.state.realtimeusr._id} daysPracticed={this.props.props.props.currentPage.daysPracticed} \r\n                                        totalDays={this.props.props.props.currentPage.totalDays} show={this.props.props.show}  \r\n                                        starpoints={this.state.realtimeusr.starpoints} starpointsGoal={this.state.realtimeusr.starpointsGoal} level = {this.state.realtimeusr.level}\r\n                                         daystreak={this.state.realtimeusr.daystreak} starPointz={this.state.realtimeusr.starPoints}\r\n                                         splashscreen={this.Splashscreen} MainGoals={this.state.realtimeusr.mainGoals}\r\n                                         />\r\n                                        ) : (<div> </div>\r\n                                            )}\r\n                                        {this.state.realtimeusr.goals[100] ? (<Goals goals={this.state.realtimeusr.goals} student={this.state.realtimeusr._id} />\r\n                                        ) : (<div> </div>\r\n                                            )}</div>\r\n                                    ) : (<div>\r\n                                        {this.state.realtimeusr.goals.length !==0?(\r\n                                            <div className=\"fill1\">\r\n                                            {this.state.realtimeusr ? (<Goals goalss={true} role={\"student\"} main={this.state.realtimeusr.mainGoal} goals={this.state.realtimeusr.goals} student={this.state.realtimeusr._id} daysPracticed={this.props.props.props.currentPage.daysPracticed} \r\n                                            totalDays={this.props.props.props.currentPage.totalDays} show={this.props.props.show} starpoints={this.state.realtimeusr.starpoints} starPointz={this.state.realtimeusr.starPoints} starpointsGoal={this.state.realtimeusr.starpointsGoal} level = {this.state.realtimeusr.level} daystreak={this.state.realtimeusr.daystreak}/>\r\n                                            ) : (<div> </div>\r\n                                                )}\r\n                                            {this.state.realtimeusr.goals[100] ? (<Goals goals={this.state.realtimeusr.goals} student={this.state.realtimeusr._id} />\r\n                                            ) : (<div> </div>\r\n                                                )}</div>\r\n\r\n\r\n                                        ):(<div className=\"fill2 centerized\"><h5 style={{  color: \"gray\", height: \"40px\", marginTop: \"20%\" }} >No Goals assigned yet! </h5> </div>)}\r\n                                    </div>\r\n                                    \r\n                                        )\r\n                            }</div>) : (<div className=\"fill2 centerized\"><h5 style={{  color: \"gray\", height: \"40px\", marginTop: \"20%\" }} >No Goals assigned yet! </h5> </div>)}\r\n\r\n\r\n                        </div>\r\n\r\n            \r\n                        <div className=\"card-container5ab \">\r\n                                    <div className=\"fill1\" >\r\n                                <div className=\"fill2 centerized\" style={{ marginBottom: \"5px\" }}><h2>Homework</h2></div>\r\n                                <div className=\" fill2\">\r\n                                    {this.state.currentStudent ? (<div className=\"checkboxstuff centerized fill2\">\r\n\r\n                                        <div className=\"fill2\">{this.state.realtimeusr ? (\r\n                                            <div className=\"checkboxstuff1 fill2 \" style={{ marginBottom: \"10px\", flexDirection: \"column\" }}>\r\n\r\n                                                {this.state.realtimeusr.timeday ? (\r\n                                                    <div className=\" centerized\">\r\n                                                        {!this.state.c ? (\r\n                                                            <div className=\" centerized\" style={{marginRight:\"5px\"}}>\r\n                                                                <div className=\"checkboxstuff1 centerized\" style={{fontSize:\"13px\"}}>\r\n                                                                    <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                        <div className=\" centerized\">Mon</div>\r\n                                                                        <div className=\" centerized\">{this.state.realtimeusr.hwtime.mon} M</div>\r\n                                                                    </div>\r\n                                                                    <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                        <div className=\" centerized\">Tues</div>\r\n                                                                        <div className=\" centerized\">{this.state.realtimeusr.hwtime.tues} M</div>\r\n                                                                    </div>\r\n                                                                    <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                        <div className=\" centerized\">Wed</div>\r\n                                                                        <div className=\" centerized\">{this.state.realtimeusr.hwtime.wed} M</div>\r\n                                                                    </div>\r\n                                                                    <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                        <div className=\" centerized\">Thurs</div>\r\n                                                                        <div className=\" centerized\">{this.state.realtimeusr.hwtime.thur} M</div>\r\n                                                                    </div>\r\n                                                                    <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                        <div className=\" centerized\">Fri</div>\r\n                                                                        <div className=\" centerized\">{this.state.realtimeusr.hwtime.fri} M</div>\r\n                                                                    </div>\r\n                                                                    <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                        <div className=\" centerized\">Sat</div>\r\n                                                                        <div className=\" centerized\">{this.state.realtimeusr.hwtime.sat} M</div>\r\n                                                                    </div>\r\n                                                                    <div style={{ flexDirection: \"column\", marginRight: \"15px\" }}>\r\n                                                                        <div className=\" centerized\">Sun</div>\r\n                                                                        <div className=\" centerized\">{this.state.realtimeusr.hwtime.sun} M</div>\r\n                                                                    </div>\r\n                                                                    <div style={{ flexDirection: \"column\", marginRight: \"0px\" }}>\r\n                                                                        <div className=\" centerized\">Total</div>\r\n                                                                        <div className=\" centerized\"> {parseInt(this.state.realtimeusr.hwtime.mon) + parseInt(this.state.realtimeusr.hwtime.tues) + parseInt(this.state.realtimeusr.hwtime.wed) + parseInt(this.state.realtimeusr.hwtime.thur) + parseInt(this.state.realtimeusr.hwtime.fri) + parseInt(this.state.realtimeusr.hwtime.sat) + parseInt(this.state.realtimeusr.hwtime.sun) } M</div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                        ) : (<div>\r\n\r\n\r\n                                                        </div>)}\r\n\r\n                                                    </div>\r\n\r\n                                                ) : (\r\n                                                        <div className=\"centerized\">\r\n                                                            {this.state.realtimeusr.edityesnoWeek ? (<div className=\"centerized\">\r\n                                                                {!this.state.c ? (<h6>Weekly Time Total:  {this.state.realtimeusr.totalWeekTime.total}/{this.state.realtimeusr.min} Minutes  </h6>) : (\r\n                                                                    <div>\r\n                                                                    </div>\r\n\r\n                                                                )\r\n                                                                }\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            ) : (<div>\r\n\r\n\r\n                                                            </div>)}\r\n\r\n\r\n\r\n\r\n                                                        </div>)}\r\n\r\n                                                <div className=\"checkboxstuff1a centerized\" >\r\n\r\n                                                    {this.state.realtimeusr.syncedCheckbox ? (<Checkboxnum2 checkboxes={7} prac={this.state.currentStudent.checked} practice={this.practice} synced={true} sync={this.state.currentStudent.syncedCheckboxes} times={this.state.realtimeusr.hwtime} synctimes={this.state.currentStudent.timeday} />\r\n                                                    ) : (\r\n\r\n                                                            <Checkboxnum checkboxes={this.state.realtimeusr.checkboxes} prac={this.state.realtimeusr.checked} practice={this.practice} times={this.state.realtimeusr.hwtime} synctimes={this.state.realtimeusr.timeday} />\r\n                                                        )}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        ) : (<div></div>)}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n                                    </div>) : (<div></div>)}\r\n                                    {this.state.t ? (\r\n                                        <div className=\"fill2 centerized\">\r\n                                            <div style={{ width: \"125px\", height: \"40px\", marginTop: \"5px\", marginBottom: \"7px\" }} ><button style={{ height: \"30px\", background: \"#696eb5\", color: \"#F0F2EF\" }} className=\"btn btn-block centerized\" onClick={this.handletimesOpen}>Submit Time</button></div>\r\n                                        </div>\r\n                                    ) : (<div></div>)}\r\n                                   \r\n\r\n                                    <div className=\" fill2\">\r\n                                        <table className=\"fill2\" >\r\n                                            <tr className=\"fill2\">\r\n                                                \r\n                                                <div className=\"centerized fill2\" style={{ height: \"200px\", marginBottom: \"15px\" }}>\r\n                                                    <td style={{ width: \"75%\", height: \"100%\", border: \"2px solid green\", borderRadius:\"3%\" }}>\r\n                                                        <div style={{ width: \"100%\", height: \"98%\",  }}>\r\n                                                            {this.state.homeworks[0] ? (<div className=\"homeworkScroll1\" style={{ width: \"100%\", marginTop:\"6px\"}} >\r\n                                                        {\r\n                                                            this.state.homeworks.map((homework, index) =>\r\n\r\n                                                                <div className=\"checkboxstuff1  rowss\" key={index} style={{marginBottom:\"7px\"}}>\r\n                                                                    <div><img src={leaf} style={{ width: \"22px\", hieght: \"22px\", marginRight: \"10px\", marginLeft: \"5px\" }} /></div>\r\n                                                                    <div className=\"huv checkboxstuff2 \" onClick={this.showHomework.bind(this, homework)}>{homework.title}</div>\r\n\r\n                                                                    \r\n                                                                </div>\r\n\r\n                                                            )\r\n                                                }\r\n\r\n                                                    </div>) : (\r\n                                                                <div>No Homework assigned yet!</div>)}\r\n                                                    </div>\r\n                                                            </td>\r\n                                                        \r\n                                                  \r\n                                                </div>\r\n                                            </tr>\r\n                                            </table>\r\n                                    </div>\r\n                                    \r\n                            \r\n\r\n                                    \r\n                                   \r\n\r\n                                   \r\n                                    \r\n                                            \r\n\r\n                                        </div>\r\n                                        {this.state.realtimeusr?(<div>\r\n                                            {this.state.realtimeusr.edityesnoWeek ? (<div style={{marginLeft:\"15px\"}}>\r\n                                                                {this.state.c ? (<p>Weekly Time Total:  {this.state.realtimeusr.totalWeekTime.total}/{this.state.realtimeusr.min} Minutes  </p>) : (\r\n                                                                    <div>\r\n                                                                        {this.state.realtimeusr.timeday?(\r\n                                                                            <div style={{marginLeft:\"15px\"}}>\r\n                                                                                <p>Weekly Time Total:  {this.state.realtimeusr.totalWeekTime.total}/{this.state.realtimeusr.min} Minutes  </p>\r\n                                                                            </div>\r\n                                                                        ):(<div></div>)}\r\n                                                                    </div>\r\n\r\n                                                                )\r\n                                                                }\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            ) : (<div>\r\n\r\n\r\n                                                            </div>)}\r\n\r\n\r\n                                        </div>):(<div></div>)}\r\n                                        \r\n                                       \r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                    </div>\r\n                    \r\n                        \r\n                            \r\n\r\n                    \r\n                    \r\n\r\n\r\n                </div>\r\n                    <div className=\"proStud5a \">\r\n                        <div className=\" card-container5ab1 \" >\r\n                            {this.state.realtimeusr ? (<div className=\"centerized fill2\" style={{ height: \"200px\" }}>\r\n                                <div className=\"fill2 \" style={{ alignSelf: \"flex-start\" }}>\r\n                                    <h2 className=\"centerized fill2\">Stats</h2>\r\n                                    <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\"}}>\r\n                                    {!this.state.c || !this.state.realtimeusr.dayStreak || this.state.realtimeusr.starPoints || this.state.realtimeusr.wmin ?(<div ></div>):(<div style={{ marginTop:\"20px\"}}>No Results</div>) }\r\n</div>\r\n                                    <div className=\"homeworkScroll fill2 centerized\">\r\n                                        <div className=\"centerized columbized \" style={{ marginTop: \"25px\", width: \"90%\", marginLeft: this.state.statsmargin }}>\r\n\r\n\r\n                                        {this.state.realtimeusr.starPoints?(\r\n                                            <div className=\"centerized fill2\" style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n\r\n                                            <div style={{ width: \"43%\" }}> <b>Student Level:</b> </div>\r\n                                    <div style={{ width: \"40%\" }} className=\"centerized \">  {this.state.realtimeusr.level}</div>\r\n\r\n\r\n                                </div>\r\n                                        ):(<div></div>)}\r\n                                        {this.state.realtimeusr.wmin !== \"\" ?(\r\n\r\n<div className=\"centerized fill2\" style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n<div style={{ width: this.state.timepracmargin  }}><b>Time Practiced:</b></div>\r\n<div style={{ width: this.state.timepracmarginr  }} className=\"centerized \"> {this.state.realtimeusr.timeTotal} min</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n                                        ):(<div></div>)}\r\n                                        \r\n\r\n                                           \r\n                                        {this.state.c ? (\r\n                                            <div className=\"centerized fill2\" style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n                                            <div style={{ width: this.state.dayspracmargin  }}> <b>Practice Days:</b> </div>\r\n                                        {this.state.realtimeusr.daysPracticed?(<div style={{ width: \"40%\" }} className=\"centerized \">{this.state.realtimeusr.daysPracticed}</div>):(<div style={{ width: \"40%\" }} className=\"centerized \">0</div>)}\r\n                                            \r\n\r\n                                        \r\n                                        </div>\r\n\r\n\r\n                                        ):(<div></div>)}\r\n                                        {this.state.realtimeusr.dayStreak ?(\r\n                                              <div className=\"centerized fill2\" style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n                                              <div style={{ width: \"40%\" }}> <b>Streak:</b> </div>\r\n                                      <div style={{ width: \"40%\" }} className=\"centerized \">  x{this.state.realtimeusr.daystreak}</div>\r\n\r\n\r\n                                  </div>\r\n                                        ):(<div></div>)}\r\n                                            \r\n\r\n\r\n                                            {/*{this.state.realtimeusr.totalDays !== \"\" ? (\r\n                                           <div className=\"centerized fill2\" style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n                                           <div style={{ width: this.state.pracgoalmargin }}> <b> Practice Goal:</b> </div>\r\n                                           <div style={{ width: \"40%\" }} className=\"centerized \">  {this.state.realtimeusr.checked}/{this.state.realtimeusr.totalDays}</div>\r\n\r\n\r\n                                       </div>\r\n\r\n                                        \r\n                                        \r\n\r\n\r\n                                            ):(<div></div>)}*/}\r\n                                            \r\n                                        \r\n\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>) : (<div></div>)}\r\n                        </div>\r\n\r\n                        <div className=\" card-container5ab1 \" >\r\n                            {this.state.realtimeusr ? (<div className=\"centerized\" style={{ height: \"75%\" }}>\r\n                                <div style={{ alignSelf: \"flex-start\" }}>\r\n                                    <h2 style={{ marginBottom: \"20px\" }} className=\"centerized\">Accomplished Goals</h2>\r\n                                    <div style={{height: this.state.aheight,}}>\r\n                                    {this.state.realtimeusr.archive[0] ? (\r\n                                        <div className=\"homeworkScroll \">\r\n                                            {this.state.realtimeusr.archive.map((goal, index) =>\r\n                                                <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", }} >\r\n                                                    <span><img alt = \"leaf\" src = {leaf} style={{ width: \"22px\", hieght: \"22px\", }}/></span>\r\n                                                    <div key={index} onClick={this.showGoal.bind(this, goal, true)} className=\"huv  rowss\" style={{width:\"50%\", color: \"#696eb5\", marginLeft:this.state.amarginLeft}}>{goal.mainGoal.title}</div><div>{goal.mainGoal.completed?(<div>{goal.mainGoal.completed}</div>):(<div style={{opacity:\"0\"}}>12/21/2021</div>)}</div>\r\n                                                </div>\r\n\r\n                                            )}</div>\r\n                                    ) : (<div className=\"centerized\">No Accomplished Goals Yet!</div>)}\r\n                                    </div>\r\n\r\n                                \r\n\r\n\r\n                            </div>\r\n                            </div>) : (<div></div>)}\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                   \r\n                    \r\n                    \r\n                    \r\n                   \r\n\r\n                </div>\r\n\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n/*\r\n  <div className=\"proStud5ab \" style={{ opacity: \"0\" }}>\r\n                        <div className=\" card-container5ab1 \" >\r\n                            {this.state.realtimeusr ? (<div className=\"centerized fill2\" style={{ height: \"200px\" }}>\r\n                                <div className=\"fill2\" style={{ alignSelf: \"flex-start\" }}>\r\n                                    <h2 className=\"centerized fill2\">Stats</h2>\r\n                                    <div className=\"homeworkScroll fill2\">\r\n                                        <div className=\"centerized columbized \" style={{ marginTop: \"25px\", width: \"75%\" }}>\r\n\r\n\r\n                                            <div className=\"centerized fill2\" style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n                                                <div>Week Streak</div>\r\n                                                <div className=\"centerized \" > 0</div>\r\n\r\n\r\n                                            </div>\r\n\r\n                                            <div className=\"centerized fill2\" style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n                                                <div>Time Practiced</div>\r\n                                                <div className=\"centerized \"> 2 hr 40 min</div>\r\n\r\n\r\n\r\n\r\n                                            </div>\r\n\r\n                                            <div className=\"centerized fill2\" style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n                                                <div> Practice Days </div>\r\n                                                <div className=\"centerized \">50</div>\r\n\r\n\r\n                                            </div>\r\n                                           \r\n                                            \r\n\r\n                                            \r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>) : (<div></div>)}\r\n                        </div>\r\n\r\n                       \r\n\r\n                    </div>\r\n * */","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/timess.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/messageStudenthw.js",["574"],"import React, { Component } from 'react';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nimport authService from \"../services/auth.service\";\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n//import PropTypes from 'prop-types';\r\n\r\n\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nexport default class Hwmessage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.message = this.message.bind(this);\r\n\r\n\r\n        \r\n        this.state = {\r\n            firstMessage: this.props.firstMessage,\r\n            messages: this.props.messages,\r\n            message: \"\",\r\n            placeholder:\"\",\r\n            picture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            tpicture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            spicture: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\r\n            placeholder: \"Message this student about this homework\",\r\n            currentUser: AuthService.getCurrentUser(),\r\n\r\n        }\r\n       \r\n\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.role===\"student\"){\r\n        this.setState({placeholder:\"Message your teacher\"})\r\n        let id = this.state.currentUser.account[0].userID;\r\n        //console.log(id);\r\n\r\n        const API_URL = \"https://legato.flinnapps.com/api/auth/\";\r\n       \r\n        axios.post(API_URL + \"getuser\", {\r\n            id,\r\n\r\n        }).then(response => {\r\n            //console.log(response.data);\r\n\r\n            this.setState({ realtimeusr: response.data.user })\r\n            \r\n            if (this.state.realtimeusr.profilepic) {\r\n                const porfilePic = this.state.realtimeusr.profilepic;\r\n                this.setState({ tpicture: porfilePic });\r\n            }\r\n            \r\n            \r\n        });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    message() {\r\n        var m1 = moment().format('MMMM Do YYYY, h:mm:ss a');\r\n\r\n        if (this.state.message !== '') {\r\n            let M = this.state.messages;\r\n                let J = {\r\n                    m: this.state.message,\r\n                    date: m1,\r\n                    role: this.props.role,\r\n                }\r\n            \r\n            \r\n            \r\n            M.push(J);\r\n            this.setState({\r\n                firstMessage: false,\r\n                messages:M,\r\n            })\r\n            authService.hwmessage(this.props.id, this.state.message, m1, this.props.role);\r\n        }\r\n\r\n        this.setState({\r\n            message:\"\",\r\n        })\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n           \r\n                    \r\n\r\n                        <div style={{ borderTop: \"1px solid gray\" }} >\r\n                           \r\n\r\n                <div style={{ marginTop: \"15px\", }}>\r\n                    {this.props.role===\"teacher\"?(<p style={{ marginBottom: \"10px\" }}> <b>Message Student:</b> </p>):(<p style={{ marginBottom: \"10px\" }}> <b>Message Teacher:</b> </p>)}\r\n\r\n                    \r\n                    {this.state.firstMessage ? (\r\n\r\n                        < div style={{ height: \"200px\", borderTop: \"1px solid green\", borderLeft: \"1px solid green\", borderRight: \"1px solid green\" }}>\r\n                                    <div style={{ flexDirection: \"column\" }}>\r\n                        <div style={{ width: \"100%\", height: \"100px\", }}>\r\n                            <div style={{ width: \"100px\", height: \"100px\", float: \"left\", marginLeft: \"10px\", marginTop: \"10px\" }}>\r\n                                <img\r\n                                    src={this.state.picture}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-card cropped1\"\r\n                                    style={{ alignSelf: \"flex-start\" }}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {this.props.role===\"teacher\"?(<p style={{ marginLeft: \"20px\", marginTop: \"20px\", color: \"gray\" }}>This is your first message about this homework to this student. </p>)\r\n                        :(<p style={{ marginLeft: \"20px\", marginTop: \"20px\", color: \"gray\" }}>This is your first message about this homework to your teacher. </p>)}\r\n\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                    ): (\r\n                <div style={{ height: \"200px\", borderTop: \"1px solid green\", borderLeft: \"1px solid green\", borderRight: \"1px solid green\", display:\"flex\", flexDirection:\"column\"}}>\r\n                                \r\n                                {this.props.role===\"teacher\"?(<div className=\"homeworkScroll\">\r\n\r\n                                    {this.state.messages.map((message, index) =>\r\n                                    <div key={index} style={{width:\"100%\", display:\"flex\",flexDirection:\"column\", }}>\r\n                                        {message.role === \"teacher\" ? (\r\n                                        <div style={{ width:\"50%\",alignSelf:\"flex-end\"}}>\r\n                                                <div style={{  marginRight:\"15px\", marginTop:\"7px\", background:\"#C8CAE4\", padding:\"5px\", paddingLeft:'15px', paddingRight:'10px', borderRadius:\"20px\" }}>{message.m}</div> </div>\r\n                                            \r\n                                        ) : (\r\n                                            <div style={{display:\"flex\", flexDirection:'row', marginTop:\"10px\", width:\"50%\"}}>\r\n                                            <img src = {this.state.spicture} alt=\"teacher\" className=\"proStudpicturemessage\"/>\r\n                                            <div style={{alignSelf:\"flex-start\" ,  background:\"#696eb5\", color:\"#F0F2EF\", padding:\"5px\", paddingLeft:'15px', paddingRight:'10px', borderRadius:\"20px\"}}>{message.m}</div>\r\n                                        </div>)}\r\n                                    </div>\r\n                                    )\r\n\r\n                                }\r\n                                </div>):(<div className=\"homeworkScroll\">\r\n\r\n\r\n                                    {this.state.messages.map((message, index) =>\r\n                                    <div key={index} style={{width:\"100%\", display:\"flex\", flexDirection:\"column\", }}>\r\n                                        {message.role === \"teacher\" ? (<div style={{display:\"flex\", flexDirection:'row', marginTop:\"10px\", width:\"50%\"}}>\r\n                                            <img src = {this.state.tpicture} alt=\"teacher\" className=\"proStudpicturemessage\"/>\r\n                                            <div style={{alignSelf:\"flex-start\" ,  background:\"#696eb5\", color:\"#F0F2EF\", padding:\"5px\", paddingLeft:'15px', paddingRight:'10px', borderRadius:\"20px\"}}>{message.m}</div>\r\n                                        </div>) : (<div style={{ width:\"50%\",alignSelf:\"flex-end\"}}>\r\n                                                <div style={{  marginRight:\"15px\", marginTop:\"7px\", background:\"#C8CAE4\", padding:\"5px\", paddingLeft:'15px', paddingRight:'10px', borderRadius:\"20px\" }}>{message.m}</div> </div>)}\r\n                                    </div>\r\n                                    )\r\n\r\n                                }\r\n                                </div>)}\r\n                                \r\n                                \r\n\r\n\r\n                </div>\r\n                \r\n                \r\n                \r\n                )}\r\n                                \r\n                               <div style={{ display:\"flex\", flexDirection:\"row\", marginBottom:\"20px\", }}> <div className=\"fill2\">\r\n                                    <div className=\"form-group\" >\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            rows=\"1\"\r\n                                id=\"message\"\r\n                                value={this.state.message}\r\n                                            placeholder={this.state.placeholder}\r\n                                            onChange={this.handleChange}\r\n                                name=\"message\"\r\n                                        />\r\n                                    </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-block\" style={{ background: \"#696eb5\", color: \"#F0F2EF\", width: \"60px\", }} onClick={this.message}>Send</button>\r\n\r\n                        </div>\r\n                        </div>\r\n\r\n                            </div>\r\n\r\n                        \r\n                   \r\n                    \r\n                </div>\r\n            \r\n            \r\n\r\n        )\r\n\r\n    }\r\n}\r\n//Homeworking.propTypes = {\r\n //   children: PropTypes.element.isRequired,\r\n//};\r\n\r\n","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/practice3.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/components/times.js",["575"],"import React, { Component } from \"react\";\r\n//allows me to create a dialog box to pop up for adding students with names and emails.\r\nexport default class Times extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //this.more = this.more.bind(this);\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        this.wrapperRef = React.createRef();\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n\r\n        this.state = {\r\n            stupidTime: [],\r\n            one: \"mon\",\r\n            two: \"tues\",\r\n            three: \"wed\",\r\n            four: \"thur\",\r\n            five: \"fri\",\r\n            six: \"sat\",\r\n            seven: \"sun\",\r\n            Monday: \"mon\",\r\n            Tuesday: \"tues\",\r\n            Wednesday: \"wed\",\r\n            Thursday: \"thur\",\r\n            Friday: \"fri\",\r\n            Saturday: \"sat\",\r\n            Sunday: \"sun\",\r\n            checkbox: true\r\n\r\n\r\n        }\r\n\r\n    };\r\n    componentDidMount() {\r\n\r\n        var ob = {\r\n            0: \"one\",\r\n            1: \"two\",\r\n            2: \"three\",\r\n            3: \"four\",\r\n            4: \"five\",\r\n            5: \"six\",\r\n            6: \"seven\",\r\n        }\r\n        var obj = {\r\n            0: \"Monday\",\r\n            1: \"Tuesday\",\r\n            2: \"Wednesday\",\r\n            3: \"Thursday\",\r\n            4: \"Friday\",\r\n            5: \"Saturday\",\r\n            6: \"Sunday\",\r\n        }\r\n\r\n        let arr= [];\r\n        if(this.props.checkboxes > 0){\r\n            this.setState({\r\n                checkbox:true\r\n            })\r\n        for (let i=0; i<this.props.checkboxes; i++){\r\n            arr.push(ob[i])\r\n        }\r\n    }\r\n    else{\r\n        for(let i=0; i<7; i++){\r\n            arr.push(obj[i])\r\n        }\r\n    }\r\n        this.setState({\r\n            stupidTime: arr\r\n        })\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            if(this.props.timecheck){\r\n                this.props.handleClose(this.props.timecheck);\r\n            }\r\n            else{\r\n                this.props.handleClose(false);\r\n\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div style={{ zIndex: \"1005\" }}>\r\n\r\n                <div className=\"popup-box\" style={{ zIndex: \"1010\", width: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                    <div className=\"card-container5ab121 centerized\" style={{ zIndex: \"1010\", flexDirection: \"column\"}} ref={this.wrapperRef}>\r\n                        <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                        <h2 className=\"centerized\" style={{ alignSelf: \"flex-start\", marginBottom: \"15px\"}} >Log Time</h2>\r\n                        {this.props.weekly ? (\r\n\r\n                            <div className=\"centerized\">\r\n                                <div className=\"centerized\" style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                                    {!this.props.timedaycheck?(<div>\r\n\r\n                                        {this.props.syncedCheckbox ? (<div>\r\n                                        <div>For which day are you submitting?</div>\r\n                                    <div className=\"form-group\" >\r\n                                        <select style={{ width: \"100%\", marginBottom: \"10px\" }} htmlFor=\"timeedit\" onChange={this.props.handleChange} name=\"timeedit\" id=\"timeedit\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value={\"mon\"}>Monday</option>\r\n                                            <option value={\"tues\"}>Tuesday</option>\r\n                                            <option value={\"wed\"}>Wednesday</option>\r\n                                            <option value={\"thur\"}>Thursday</option>\r\n                                            <option value={\"fri\"}>Friday</option>\r\n                                            <option value={\"sat\"}>Saturday</option>\r\n                                            <option value={\"sun\"}>Sunday</option>\r\n\r\n                                           \r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    </div>):(\r\n                                        <div>\r\n                                            <div>For which of the following boxes would you like to submit?</div>\r\n                                    <div className=\"form-group\" >\r\n                                        <select style={{ width: \"100%\", marginBottom: \"10px\" }} htmlFor=\"timeedit\" onChange={this.props.handleChange} name=\"timeedit\" id=\"timeedit\">\r\n                                            <option value=\"\"></option>\r\n                                            {this.state.stupidTime.map((checkbox, index) =>\r\n                                             <option key ={index} value={this.state[checkbox]} style={{display:\"flex\", flexDirection:\"row\"}}> \r\n                                             {checkbox}</option>\r\n\r\n\r\n                                                            )\r\n                                                }\r\n                                           \r\n\r\n                                           \r\n                                          \r\n                                            \r\n\r\n\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                        </div>\r\n                                    )}\r\n                                    </div>):(<div> <div>How much time would you like to submit today?</div></div>)}\r\n                                    \r\n                                    \r\n                                    <div className=\"form-group\" style={{ display: \"flex\", flexDirection: \"row\", marginBottom: \"17px\" }}  >\r\n                                        <input\r\n\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"minedit\"\r\n                                            style={{ width: \"60px\" }}\r\n                                            onChange={this.props.handleChange}\r\n                                            name=\"minedit\"\r\n                                        /><p>Minutes</p>\r\n\r\n\r\n                                    </div>\r\n                                    <div>\r\n\r\n                                        <button className=\"btn \" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.props.change}>Submit Time</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) : (<div className=\"centerized\" style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                                <div style={{ marginBottom: \"10px\"}}>How much did you practice?</div>\r\n\r\n                            <div className=\"form-group\" >\r\n                                <input\r\n\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"weeklyTimeEdit\"\r\n                                    style={{ width: \"60px\" }}\r\n                                    onChange={this.props.handleChange}\r\n                                    name=\"weeklyTimeEdit\"\r\n                                /><p>Minutes</p>\r\n\r\n\r\n                            </div>\r\n                            <div>\r\n\r\n                                    <button className=\"btn\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"125px\" }} onClick={this.props.changeweek}>Submit Time</button>\r\n                            </div>\r\n                        </div>\r\n                            \r\n\r\n                        )}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/pages/goals2.js",["576","577","578","579"],"import React, { Component } from \"react\";\r\nimport Progress from \"../components/progress.js\";\r\nimport Day from \"../components/moreProgress.js\";\r\nimport Points from \"../components/moreProgress.js\";\r\nimport GoalEdit from \"../components/diagoal.js\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Goal from \"../components/showgoal.js\";\r\nimport Checkedd2 from \"../components/checkbox2.js\";\r\nimport save from \"../components/save.png\";\r\nimport trash from \"./trash.png\";\r\nimport SetDay from \"../components/setday.js\";\r\nimport Short from \"../components/short.js\";\r\nimport moment from 'moment';\r\nimport leaf from \"./leaf.png\";\r\nimport Starpointz from \"../components/starpointz.js\";\r\n\r\n//not much here but functionality will be added for the goals.\r\nexport default class Goals extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.AddGoal = this.AddGoal.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.goalClose = this.goalClose.bind(this);\r\n        this.showGoal = this.showGoal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlegoal = this.handlegoal.bind(this);\r\n        this.completeGoal = this.completeGoal.bind(this);\r\n        this.starpointz = this.starpointz.bind(this);\r\n\r\n        this.showMainGoal = this.showMainGoal.bind(this);\r\n        \r\n        this.AddmainGoal = this.AddmainGoal.bind(this);\r\n        this.saveGoal = this.saveGoal.bind(this);\r\n        this.deleteGoal = this.deleteGoal.bind(this);\r\n        this.setday = this.setday.bind(this);\r\n        this.setDays = this.setDays.bind(this);\r\n        this.handlesetdayclose = this.handlesetdayclose.bind(this);\r\n        \r\n        this.handlegoalsClose = this.handlegoalsClose.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            progress: 5,\r\n            style: \"rotate(180deg)\",\r\n            Goal: false,\r\n            showGoal: false,\r\n            goals: [],\r\n            description: \"\",\r\n            goal: \"\",\r\n            date: \"\",\r\n            currentgoal: undefined,\r\n            mainGoal: \"\",\r\n            main:false,\r\n            setdays: false,\r\n            totalDays: this.props.totalDays,\r\n            startpointz: false,\r\n            Starpointz: false,\r\n            margin: \"20px\",\r\n            width:\"100%\"\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if(parseInt(window.innerWidth) <= 600){\r\n\r\n        this.setState({ \r\n            width: \"75%\"\r\n\r\n\r\n         });\r\n        }\r\n        if(this.props.starpointsGoal===\"0\"){\r\n            if(this.props.wmin===\"\"){\r\n                if(this.props.totalDays===\"\"){\r\n                    this.setState({\r\n                        margin: \"65px\"\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    saveGoal(goal, main) {\r\n        \r\n        AuthService.savegoal(this.props.student, goal, main);\r\n        window.location.reload();\r\n\r\n    }\r\n    deleteGoal(goal, main) {\r\n        AuthService.deletegoal(this.props.student, goal, main);\r\n        window.location.reload();\r\n    }\r\n    completeGoal(check, goal,main) {\r\n        let sp = \"\";\r\n        let pass = false;\r\n        let npass= false;\r\n        let daystreak= parseInt(this.props.daystreak)+1;\r\n        let complete = moment().subtract(10, 'days').calendar();\r\n        if(check){\r\n        \r\n        if(main){\r\n            \r\n            sp = (parseInt(this.props.starpoints) + (100* daystreak)).toString();\r\n\r\n            \r\n            if (parseInt(sp) >= parseInt(this.props.starpointsGoal)){\r\n                pass= true;\r\n\r\n            }\r\n        }\r\n        else{\r\n            sp =(parseInt(this.props.starpoints) + (50* daystreak)).toString();\r\n\r\n            \r\n            if (parseInt(sp) >= parseInt(this.props.starpointsGoal)){\r\n                pass= true;\r\n\r\n            }\r\n        }\r\n        let goalcomplete;\r\n        let ar=[]\r\n        if(main){\r\n            \r\n            goalcomplete = {mainGoal:{\r\n                complete: true,\r\n                completed: complete,\r\n                title: goal.mainGoal.description,\r\n                description: goal.mainGoal.description,\r\n                goals: goal.mainGoal.goals\r\n\r\n            },\r\n            _id: goal._id\r\n        }\r\n        \r\n        for(let i =0;i< this.props.MainGoals.length; i++){\r\n            if(this.props.MainGoals[i]._id===goalcomplete._id){\r\n                ar.push(goalcomplete)\r\n            }\r\n            else{\r\n                ar.push(this.props.MainGoals[i])\r\n            }\r\n            \r\n        }\r\n        }\r\n        else{\r\n            goalcomplete={\r\n                complete: true,\r\n                completed: complete,\r\n                title: goal.title,\r\n                description: goal.description,\r\n                _id: goal._id\r\n            }\r\n            for (let i =0; i<this.props.MainGoals.length; i++){\r\n                let maingoal = this.props.MainGoals[i];\r\n                let arr = [];\r\n                for (let i =0; i < maingoal.mainGoal.goals.length; i++){\r\n                    if( maingoal.mainGoal.goals[i]._id === goal._id){\r\n                        arr.push(goalcomplete)\r\n                    }\r\n                    else{\r\n                        arr.push(maingoal.mainGoal.goals[i])\r\n                    }\r\n\r\n                }\r\n                maingoal.mainGoal.goals= arr;\r\n                ar.push(maingoal);\r\n               \r\n\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n\r\n        AuthService.newMainGoal(\r\n            this.props.student,\r\n            ar\r\n        )\r\n    }\r\n    else{\r\n        let goalcomplete;\r\n        let ar=[]\r\n        if(main){\r\n            \r\n            sp = (parseInt(this.props.starpoints) - (100* daystreak)).toString();\r\n\r\n            \r\n            if (parseInt(sp) <= 0){\r\n                pass= true;\r\n                npass=true;\r\n\r\n            }\r\n        }\r\n        else{\r\n            console.log(this.props.starpoints)\r\n            sp =(parseInt(this.props.starpoints) - (50* daystreak)).toString();\r\n            console.log(sp)\r\n\r\n            \r\n            if (parseInt(sp) <= 0){\r\n                pass= true;\r\n                npass=true;\r\n\r\n            }\r\n        }\r\n        if(main){\r\n            console.log(goal);\r\n            goalcomplete = {mainGoal:{\r\n                complete: false,\r\n                completed: \"\",\r\n                title: goal.mainGoal.description,\r\n                description: goal.mainGoal.description,\r\n                goals: goal.mainGoal.goals\r\n\r\n            },\r\n            _id: goal._id\r\n        }\r\n        console.log(goalcomplete);\r\n        \r\n        for(let i =0;i< this.props.MainGoals.length; i++){\r\n            if(this.props.MainGoals[i]._id===goalcomplete._id){\r\n                ar.push(goalcomplete)\r\n            }\r\n            else{\r\n                ar.push(this.props.MainGoals[i])\r\n            }\r\n            \r\n        }\r\n        }\r\n        else{\r\n            goalcomplete={\r\n                complete: false,\r\n                completed: \"\",\r\n                title: goal.title,\r\n                description: goal.description,\r\n                _id: goal._id\r\n            }\r\n            for (let i =0; i<this.props.MainGoals.length; i++){\r\n                let maingoal = this.props.MainGoals[i];\r\n                let arr = [];\r\n                for (let i =0; i < maingoal.mainGoal.goals.length; i++){\r\n                    if( maingoal.mainGoal.goals[i]._id === goal._id){\r\n                        arr.push(goalcomplete)\r\n                    }\r\n                    else{\r\n                        arr.push(maingoal.mainGoal.goals[i])\r\n                    }\r\n\r\n                }\r\n                maingoal.mainGoal.goals= arr;\r\n                ar.push(maingoal);\r\n               \r\n\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n        console.log(ar);\r\n\r\n         AuthService.newMainGoal(\r\n            this.props.student,\r\n            ar\r\n        )\r\n    }\r\n        \r\n            AuthService.goalStatusChange(\r\n                this.props.student,\r\n                check,\r\n                goal,\r\n                main,\r\n                complete,\r\n                this.props.level, sp, this.props.starpointsGoal, pass, npass\r\n                \r\n\r\n            )\r\n            if(check){\r\n            if(this.props.starPointz){\r\n            this.starpointz();\r\n            }\r\n            else{\r\n                window.location.reload();\r\n            }\r\n        }\r\n        //\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n       \r\n        \r\n\r\n    }\r\n    AddmainGoal(e) {\r\n        this.setState({\r\n            Goal: true,\r\n            main: true,\r\n        });\r\n\r\n    }\r\n    setday(e) {\r\n        this.setState({\r\n            setdays: true,\r\n        });\r\n\r\n    }\r\n    AddGoal(e) {\r\n        this.setState({\r\n            Goal: true\r\n        });\r\n\r\n    }\r\n\r\n    showGoal(goal, main) {\r\n        this.setState({\r\n            showGoal: true,\r\n            currentgoal: goal,\r\n            main: main\r\n        });\r\n        this.props.show();\r\n\r\n    }\r\n    showMainGoal() {\r\n        this.setState({\r\n            showGoal: true,\r\n            currentgoal: this.props.main,\r\n        });\r\n        this.props.show();\r\n\r\n    }\r\n    \r\n    goalClose() {\r\n        this.setState({\r\n            Goal: false,\r\n            main: false,\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            showGoal: false,\r\n        });\r\n        this.props.show();\r\n    }\r\n\r\n  \r\n    handlegoalsClose(id, title, description) {\r\n\r\n        let goalz = {\r\n            title: title,\r\n            description: description,\r\n            _id: this.state.currentgoal._id\r\n        }\r\n\r\n        let ar = [];\r\n        for (let i = 0; i < this.props.goals.length; i++) {\r\n            if (this.props.goals[i]._id === goalz._id) {\r\n\r\n                ar.push(goalz);\r\n            }\r\n            else {\r\n                ar.push(this.props.goals[i]);\r\n\r\n            }\r\n\r\n        }\r\n        console.log(ar);\r\n        \r\n        AuthService.AddGoals\r\n            (\r\n                this.props.student,\r\n                false,\r\n                ar\r\n            );\r\n            \r\n        window.location.reload();\r\n\r\n\r\n        \r\n\r\n\r\n\r\n    };\r\n    async handlegoal(e) {\r\n\r\n        console.log(\"igothere\");\r\n        e.preventDefault();\r\n        this.setState({\r\n            Goal: false,\r\n        });\r\n\r\n\r\n        AuthService.AddGoal(\r\n            this.props.student,\r\n            this.state.main,\r\n            this.state.goal,\r\n            this.state.description,\r\n            this.state.date,\r\n        );\r\n\r\n        this.setState({\r\n            main: false,\r\n        });\r\n\r\n\r\n        window.location.reload();\r\n    }\r\n    handlesetdayclose() {\r\n        this.setState({\r\n            setdays: false,\r\n        });\r\n    }\r\n\r\n    setDays() {\r\n        this.setState({\r\n            setdays: false,\r\n            \r\n        });\r\n        AuthService.updateSetDays(this.props.student, this.state.totalDays);\r\n        window.location.reload();\r\n        \r\n    }\r\n    starpointz(){\r\n        this.setState({\r\n            Starpointz: !this.state.Starpointz\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"fill1\">\r\n                {this.state.Starpointz && (<Starpointz handleClose={this.starpointz} main={this.state.main} role=\"student\" />)}\r\n\r\n                {this.state.Goal && (<GoalEdit handlegoal={this.handlegoal} handleChange={this.handleChange} handleClose={this.goalClose} main={this.state.main} role=\"student\"/>)}\r\n                {this.state.showGoal && (<Goal main={this.state.main} Goal={this.state.currentgoal} handleClose={this.handleClose} role=\"student\" handletheclose={this.handlegoalsClose} />)}\r\n\r\n                {this.state.setdays && (<SetDay handleChange={this.handleChange} handleClose={this.setDays} handleClosing={this.handlesetdayclose} />)}\r\n                {this.props.goalss ? (\r\n\r\n\r\n\r\n                    <div className=\" columbized4\" style={{ width: \"100%\", height: \"100%\" }} >\r\n\r\n\r\n\r\n\r\n\r\n                        {\r\n                            this.props.main ?\r\n                                (\r\n                                    <div className=\"columbized fill1\">\r\n\r\n                                        <h2 className=\"centerized\" style={{ marginBottom: \"15px\", marginTop: \"5px\", }}>Goals</h2>\r\n                                        {this.props.MainGoals.length > 0 ?(<div className=\"homeworkScroll1\" >\r\n                                            {this.props.MainGoals.map((main, index) =>\r\n                                            <div key={index} >\r\n                                                <div >\r\n                        <div className=\"checkboxstuff2\" style={{display:'flex', flexDirection:\"row\", justifyContent:\"space-between\", justifyContent:\"center\"}}>\r\n                            <div style={{display:'flex', flexDirection:\"row\", alignItems:\"center\"}}>\r\n                        <Checkedd2 goal={main} goalStatusChange={this.completeGoal} main={true}  />\r\n                        \r\n                        {this.props.tooSmall?(<h4 style={{marginBottom:\"10px\"}} className=\"huv rowss\" onClick={this.showGoal.bind(this, main, true)}><span>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</span></h4>):(<h2 className=\"huv rowss\" onClick={this.showGoal.bind(this, main, true)}><div>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h2>)}\r\n                        </div>\r\n                        <div className=\"checkboxstuff1\">\r\n                               {/* <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={save}\r\n                                        alt=\"download\"\r\n                                        onClick={this.archiving.bind(this, main, true )}\r\n\r\n                                        //onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={trash}\r\n                                        alt=\"delete\"\r\n                                        onClick={this.deleteGoal.bind(this, main, true)}\r\n                                        style={{ width: \"15px\", height: \"15px\", opacity: \".5\" }}\r\n\r\n\r\n                                    />\r\n                                            </div>*/}\r\n                            </div>\r\n                            \r\n\r\n\r\n                    </div>\r\n                    </div>\r\n                    {main.mainGoal.goals.map((goal, index) =>\r\n                    <div className=\"checkboxstuff1 fill2\" key={index}  style={{ width: this.state.widthgoal, }}  >\r\n                        \r\n\r\n                    <div className=\"checkboxstuff2 \" style={{display:'flex', flexDirection:\"row\", justifyContent:\"center\", marginLeft:\"15px\"}}>\r\n                        <div >\r\n                            <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                        </div>\r\n                        <div className=\"huv rowss\" style={{marginBottom:\"7px\"}} onClick={this.showGoal.bind(this, goal, false)}><div>{goal.title.length > 35 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n                    \r\n                    )}\r\n                   \r\n                    </div>\r\n                        \r\n                        )\r\n                        }\r\n                            \r\n                            </div>):(<div style={{display:\"flex\", flexDirection:\"row\", justifyContent: \"center\", marginTop:\"27px\"}}>No goals assinged yet!</div>)}\r\n\r\n                                        {/* <div className=\"checkboxstuff1  centerized\" style={{  width: this.state.width, marginLeft:\"10%\"  }} >\r\n\r\n                                            <div className=\"checkboxstuff2 \">\r\n                                                <Checkedd2 main={true} goal={this.props.main} goalStatusChange={this.completeGoal} main={true} />\r\n                                                <h3 className=\"huv rowss1\" onClick={this.showMainGoal}><div>{this.props.main.title.length > 20 ? (<div className=\"huv rowss1\" ><Short word={this.props.main.title} wordtype=\"Goal\" /></div>) : (<div className=\"huv rowss1\" >{this.props.main.title}</div>)}</div></h3>\r\n                                            </div>\r\n                                            {this.props.role === \"student\" ? (\r\n                                                <div >\r\n                                                </div>) : (<div className=\"checkboxstuff1\">\r\n                                                    <div className=\"huv edit3b\">\r\n                                                        <img\r\n                                                            src={save}\r\n                                                            alt=\"download\"\r\n                                                            onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                                        />\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"huv edit3b\">\r\n                                                        <img\r\n                                                            src={trash}\r\n                                                            alt=\"delete\"\r\n                                                            onClick={this.deleteGoal.bind(this, this.props.main, true)}\r\n\r\n\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>)}\r\n\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"  \" style={{ width: this.state.width , marginLeft:\"29%\" }}>\r\n                                            <div className=\" fill2 \" style={{}}>\r\n                                                {this.props.role === \"student\" ? (<div style={{ height: \"250px\" }}>\r\n                                                    {this.props.goals ? (<div className=\"homeworkScroll\">\r\n                                                        {\r\n                                                            this.props.goals.map((goal, index) =>\r\n\r\n                                                                <div className=\"checkboxstuff1 \" key={index} >\r\n\r\n                                                                    <div className=\"checkboxstuff2\">\r\n                                                                        <div >\r\n                                                                            <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                                        </div>\r\n                                                                        <div style={{ marginBottom: \"7px\" }} className=\"huv rowss\" onClick={this.showGoal.bind(this, goal)}> <div>{goal.title.length > 14 ? (<div style={{ fontSize: \"20px\" }}><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div style={{ fontSize: \"20px\" }}>{goal.title}</div>)}</div></div>\r\n\r\n                                                                    </div>\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                    </div>) : (\r\n                                                            <div></div>)}\r\n\r\n                                                </div>) : (<div style={{ height: \"250px\" }}>{this.props.goals ? (<div className=\"homeworkScroll\">\r\n                                                    {\r\n                                                        this.props.goals.map((goal, index) =>\r\n\r\n                                                            <div className=\"checkboxstuff1 \" key={index} style={{ width: \"350px\" }} >\r\n\r\n                                                                <div className=\"checkboxstuff2\">\r\n                                                                    <div >\r\n                                                                        <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                                                                    </div>\r\n                                                                    <div style={{ marginBottom: \"5px\" }}   onClick={this.showGoal.bind(this, goal)}><div>{goal.title.length > 14 ? (<div ><p className=\"huv rowss\"><Short word={goal.title} wordtype=\"goal\" /></p></div>) : (<div ><p className=\"huv rowss\">{goal.title}</p></div>)}</div></div>\r\n\r\n                                                                </div>\r\n                                                                <div className=\"checkboxstuff1\">\r\n                                                                    <div className=\"huv edit3b\">\r\n                                                                        <img\r\n                                                                            src={save}\r\n                                                                            alt=\"download\"\r\n                                                                            onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                    <div className=\"huv edit3b\">\r\n                                                                        <img\r\n                                                                            src={trash}\r\n                                                                            alt=\"delete\"\r\n                                                                            onClick={this.deleteGoal.bind(this, goal, false)}\r\n\r\n\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                    <div>\r\n                                                        {this.props.role === \"student\" ? (<div></div>) : (<div style={{ width: \"270px\" }}>\r\n                                                            <div className=\"btn  btn-block\" style={{ marginTop: \"10px\", marginLeft: \"20px\" }} value=\"submit\" onClick={this.AddGoal}><span className=\"checkboxstuff1\" style={{ width: \"250\" }}>\r\n                                                                <img\r\n                                                                    src={leaf}\r\n                                                                    className=\"edita\"\r\n\r\n                                                                />\r\n                                                                <p>+</p><p className=\"rowss huv\">Supporting Goal</p>\r\n                                                            </span></div>\r\n                                                        </div>)}\r\n\r\n                                                    </div>\r\n                                                </div>) : (\r\n                                                        <div></div>)}</div>)}\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </div> */}\r\n\r\n\r\n                                    </div>\r\n\r\n                                ) : (\r\n\r\n                                    <div>\r\n                                        {this.props.MainGoals.length > 0 ?(<div className=\"homeworkScroll1\" >\r\n                                            {this.props.MainGoals.map((main, index) =>\r\n                                            <div key={index} >\r\n                                                <div >\r\n                        <div className=\"checkboxstuff2\" style={{display:'flex', flexDirection:\"row\", justifyContent:\"space-between\",}}>\r\n                            <div style={{display:'flex', flexDirection:\"row\", alignItems:\"center\"}}>\r\n                        <Checkedd2 goal={main} goalStatusChange={this.completeGoal} main={true}  />\r\n                        \r\n                        {this.props.tooSmall?(<h4 style={{marginBottom:\"10px\"}} className=\"huv rowss\" onClick={this.showMainGoal.bind(this, main)}><span>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</span></h4>):(<h2 className=\"huv rowss\" onClick={this.showMainGoal.bind(this, main)}><div>{main.mainGoal.title.length > 35 ? (<div><Short word={main.mainGoal.title} wordtype=\"Goal\" /></div>) : (<div>{main.mainGoal.title}</div>)}</div></h2>)}\r\n                        </div>\r\n                        <div className=\"checkboxstuff1\">\r\n                               {/* <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={save}\r\n                                        alt=\"download\"\r\n                                        onClick={this.archiving.bind(this, main, true )}\r\n\r\n                                        //onClick={this.saveGoal.bind(this, this.props.main, true)}\r\n\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"huv edit3\">\r\n                                    <img\r\n                                        src={trash}\r\n                                        alt=\"delete\"\r\n                                        onClick={this.deleteGoal.bind(this, main, true)}\r\n                                        style={{ width: \"15px\", height: \"15px\", opacity: \".5\" }}\r\n\r\n\r\n                                    />\r\n                                            </div>*/}\r\n                            </div>\r\n                            \r\n\r\n\r\n                    </div>\r\n                    </div>\r\n                    {main.mainGoal.goals.map((goal, index) =>\r\n                    <div className=\"checkboxstuff1 \" key={index}  style={{ width: this.state.widthgoal, marginLeft: \"30px\" }} >\r\n                        \r\n\r\n                    <div className=\"checkboxstuff2\">\r\n                        <div >\r\n                            <Checkedd2 goal={goal} goalStatusChange={this.completeGoal} main={false} />\r\n                        </div>\r\n                        <div className=\"huv rowss\" style={{marginBottom:\"7px\"}} onClick={this.showGoal.bind(this, goal, false)}><div>{goal.title.length > 35 ? (<div><Short word={goal.title} wordtype=\"goal\" /></div>) : (<div>{goal.title}</div>)}</div></div>\r\n\r\n                    </div>\r\n                    <div className=\"\" style={{width:\"25%\", flexDirection:\"row\", justifyContent:\"flex-end\", display:\"flex\", }}>\r\n                        {/*<div className=\"huv edit3b1\">\r\n                             <img\r\n                                src={save}\r\n                                alt=\"download\"\r\n                                onClick={this.archiving.bind(this, goal, false)}\r\n                                //onClick={this.saveGoal.bind(this, goal, false)}\r\n\r\n                            /> \r\n                        </div>\r\n                        <div className=\"huv edit3b1\">\r\n                            <img\r\n                                src={trash}\r\n                                alt=\"delete\"\r\n                                onClick={this.deleteGoal.bind(this, goal, false)}\r\n                                style={{ width: \"15px\", height: \"15px\", opacity:\".5\" }}\r\n\r\n\r\n                            />\r\n                        </div>\r\n                        */}\r\n                    </div>\r\n\r\n                </div>\r\n                    \r\n                    )}\r\n                    \r\n                    </div>\r\n                        \r\n                        )\r\n                        }\r\n                            \r\n                            </div>):(<div style={{display:\"flex\", flexDirection:\"row\", justifyContent: \"center\", marginTop:\"20px\"}}>No goals assinged yet!</div>)}</div>\r\n                                    \r\n                                )\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                ) : (\r\n                        <div className=\"fill1\">\r\n                        {\r\n                            this.props.student ? (\r\n                                <div className=\"fill1 checkboxstuff3\" style={{ padding: \"10px\", paddingTop:\"15px\"}}>\r\n\r\n                                    <div className=\"centerized\" style={{ marginBottom: \"10px\", width: \"100%\", height: \"100%\" }}>\r\n                                        {this.props.student ?\r\n\r\n                                            (<div style={{ width: \"100%\", height: \"100%\" }} ><div className=\"centerizeaa homeworkScroll\" >\r\n                                                    <div className=\"centerized\"><h2 style={{ marginBottom: \"15px\" }}>Progress</h2></div>\r\n                                                    <div style={{ marginBottom: \"7px\", marginTop: this.state.margin }}>\r\n                                                        {this.props.MainGoals.length > 0?(<div>\r\n\r\n                                                            <div className=\"centerized\" >\r\n                                                            <Progress goals={this.props.MainGoals} main={this.props.main}  />\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                        <div className=\"centerized\" style={{ marginTop: \"23px\" }}>Goal Progress</div>\r\n                                                        </div>):(<div>{this.props.goals.length !== 0? (\r\n                                                            <div>\r\n\r\n                                                            <div className=\"centerized\" >\r\n                                                            <Progress goals={this.props.goals} main={this.props.main} />\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                        <div className=\"centerized\" style={{ marginTop: \"23px\" }}>Goal Progress</div>\r\n                                                        </div>\r\n                                                        \r\n                                                        ):\r\n                                                        (<div className=\"centerized\">No goals assigned yet!</div>)}\r\n                                                        </div>)}\r\n                                                        \r\n\r\n\r\n                                                </div>\r\n                                                {this.props.starPointz? (\r\n                                                                                                        <div className=\"centerized\"style={{ width: \"200px\" }}><Points day={false} role={this.props.role} spGoal={this.props.starpointsGoal} starpoints={this.props.starpoints}/> </div>\r\n\r\n                                                ):(<div></div>)}\r\n\r\n\r\n                                                <div>\r\n                                                    {this.props.totalDays !== \"\" ?\r\n                                                            (<div  style={{ width: \"100%\" }}>\r\n                                                                <div className=\"centerized\" style={{ width: \"100%\" }}>\r\n                                                            <Day role={this.props.role} day={true} daysPracticed={this.props.daysPracticed} totalDays={this.props.totalDays}  />\r\n                                                                </div>\r\n                                                                </div>\r\n                                                                \r\n                                                                )\r\n                                                        \r\n                                                                :\r\n\r\n                                                            (<div className=\"centerized\">\r\n                                                            \r\n                                                                <div style={{opacity:\"0\"}}>space</div> \r\n                                                                \r\n                                                            \r\n                                                        </div>)}\r\n                                                        {this.props.wmin !== \"\" ?(\r\n                                                            <div className=\"centerized\" style={{ width: \"100%\" }}>\r\n                                                                <Day role={this.props.role}  day={false} time={true} timePracticed={this.props.timePracticed} totaltime={this.props.totalTime} />\r\n\r\n\r\n                                                                    </div>\r\n\r\n                                                        ):(<div></div>)}\r\n                                                        \r\n\r\n                                                </div>\r\n                                            </div></div>) : (<div></div>)\r\n\r\n                                        }\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            ) : (\r\n                                    <div className=\" centerized\" style={{ height: \"100%\", width: \"200px\" }}>\r\n                                        \r\n                                    </div>)\r\n                        }\r\n\r\n                        \r\n                        </div>\r\n\r\n                        )}\r\n                \r\n\r\n              \r\n                \r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n            \r\n        );\r\n    }\r\n}","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/newapp.js",["580"],"import React, { Component } from 'react';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//uploade above stuff from npm.\r\nimport \"./App.css\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Register from \"./pages/usersignup\";\r\nimport Login from \"./pages/signin\";\r\nimport Home from \"./pages/home\";\r\nimport About from \"./pages/about\";\r\nimport Metro from \"./pages/metro\";\r\nimport Contact from \"./pages/contact\";\r\nimport UsrProfile from \"./pages/userProfile\";\r\nimport Profile from \"./pages/profile\";\r\nimport Calendar from \"./pages/calendar\";\r\nimport StudentsTeacher from \"./pages/students.teacher\";\r\nimport legato from \"./legato.png\";\r\nimport Admin from \"./services/admin.js\";\r\nimport Menu from \"./menu.png\";\r\n\r\n//import BoardUser from \"./components/board-user.component\";\r\nimport Student from \"./pages/student\";\r\nimport student_routes from \"./components/student_routes\";\r\n\r\n//nav bar helps to navigate from page to page with authorizations to login or sign up etc. \r\nclass App extends Component {\r\n    constructor(props) {\r\n        //create state\r\n        super(props);\r\n        this.logOut = this.logOut.bind(this);\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.menu = this.menu.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            currentUser: undefined,\r\n            tooSmall: false,\r\n            menu: false\r\n        };\r\n    }\r\n    menu(){\r\n        this.setState({menu:!this.state.menu})\r\n    }\r\n    updateWindowDimensions() {\r\n        if(parseInt(window.innerWidth) <= 600){\r\n        this.setState({ tooSmall: true });\r\n        }\r\n     }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    }\r\n    //get user if it exists from the jwt.sign for browser history. I don't use cookies for this app.\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            this.setState({\r\n                currentUser: user,\r\n            \r\n            });\r\n        }\r\n    }\r\n    //logout\r\n    logOut() {\r\n        AuthService.logout();\r\n    }\r\n\r\n    render() {\r\n        const align = {\r\n            paddingRight: \"30px\",\r\n            position: \"absolute\",\r\n            right: 0,\r\n            top: 0,\r\n\r\n\r\n        };\r\n        \r\n        \r\n        //render navbar and pages according to information sent from backend and jwt.\r\n        const { currentUser} = this.state;\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"fullhouse\">\r\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n\r\n                    {currentUser ? (\r\n                    \r\n\r\n                        <div className=\"navbar-nav\">\r\n                            \r\n                            {currentUser.role === \"student\" ?\r\n                                (\r\n                                    <div>\r\n                                        {this.state.tooSmall?(<div><img className=\"huv\" onClick={this.menu} alt=\"\" src={Menu} style={{width:\"40px\", marginLeft:\"20px\"}}/></div>):(\r\n                                    <div className=\"navbar-nav\">\r\n                                <li className=\"nav-item\">\r\n\r\n\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: \"/student_routes\",\r\n\r\n                                            state: { current: currentUser }\r\n                                        }}\r\n                                        className=\"nav-link\"   >\r\n\r\n                                            Dashboard\r\n                                    </Link>\r\n                                    </li>\r\n                                   \r\n\r\n                                    <div className=\"navbar-nav\">\r\n\r\n\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/metro\"} className=\"nav-link\">\r\n                                                Metronome\r\n                </Link>\r\n                                </li>\r\n\r\n                                        </div>\r\n                                        <div className=\"navbar-nav\">\r\n\r\n\r\n\r\n                                            <li className=\"nav-item\">\r\n                                                <Link to={\"/students.teacher\"} className=\"nav-link\">\r\n                                                    My Teacher\r\n                </Link>\r\n                                            </li>\r\n\r\n                                        </div>\r\n                                        </div>)}\r\n\r\n                                        </div>\r\n\r\n                                ) : (\r\n                                    <div>\r\n                                    {this.state.tooSmall?(<div><img className=\"huv\" onClick={this.menu} alt=\"\" src={Menu} style={{width:\"40px\", marginLeft:\"20px\"}}/></div>):(\r\n\r\n                                    <div className=\"navbar-nav\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/userProfile\"} className=\"nav-link\" >\r\n                                        {currentUser.firstname}\r\n                                    </Link>\r\n                                </li>\r\n                            \r\n                            \r\n                            <div className=\"navbar-nav\">\r\n\r\n\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/profile\"} className=\"nav-link\">\r\n                                                Students\r\n                </Link>\r\n                                </li>\r\n\r\n                            </div>\r\n                            <div className=\"navbar-nav\">\r\n\r\n\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/metro\"} className=\"nav-link\">\r\n                                                Metronome\r\n                </Link>\r\n                                </li>\r\n\r\n                            </div>\r\n                            <div className=\"navbar-nav\">\r\n\r\n\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/calendar\"} className=\"nav-link\">\r\n                                                Calendar\r\n                </Link>\r\n                                </li>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    )}</div>\r\n                                )\r\n                                        }\r\n                            <div className=\"navbar-nav\" style={{ marginRight:\"300px\"}}>\r\n                                {currentUser.role === \"admin\" ? (<div className=\"navbar-nav\" >\r\n                                    <li className=\"nav-item\">\r\n                                        <a href=\"/admin\" className=\"nav-link\" >\r\n                                            Admin\r\n                </a>\r\n                                    </li>\r\n                                </div>\r\n                                    )\r\n                                    :\r\n                                    (<div></div>)}\r\n                            </div>\r\n                            {this.state.tooSmall?(<div></div>):(\r\n\r\n<div className=\"navbar-nav\" style={align}>\r\n<li className=\"nav-item\">\r\n    <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n        LogOut\r\n</a>\r\n</li>\r\n        </div>\r\n                            )}\r\n                            \r\n                                \r\n                    </div>\r\n                    ) : (\r\n                            <div className=\"navbar-nav\">\r\n                            <div className=\"navbar-nav\">\r\n\r\n                \r\n                                    {/* <Link to={\"/\"} className=\"navbar-brand\">\r\n                                        <img\r\n                                            src={legato}\r\n                                            alt=\"profile-img\"\r\n                                            width=\"50px\"\r\n                                            height=\"50px\"\r\n\r\n\r\n                                        />\r\n\r\n                                    </Link>*/}\r\n                    <div className=\"navbar-nav\">\r\n                        \r\n\r\n                        \r\n                                        {/*<li className=\"nav-item\">\r\n                                <Link to={\"/about\"} className=\"nav-link\">\r\n                                    About\r\n                </Link>\r\n                            </li>*/}\r\n                        \r\n                    </div>\r\n                    <div className=\"navbar-nav\">\r\n\r\n\r\n\r\n                        {/*<li className=\"nav-item\">\r\n                            <Link to={\"/contact\"} className=\"nav-link\">\r\n                                Contact\r\n                </Link>\r\n                        </li>*/}\r\n\r\n                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"navbar-nav ml-auto\" style={align}  >\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/login\"} className=\"nav-link\">\r\n                                        Login\r\n                </Link>\r\n                                    </li>\r\n                                    {/* \r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/register\"} className=\"nav-link\">\r\n                                        Sign Up\r\n                </Link>\r\n                                    </li>*/}\r\n\r\n                            </div>\r\n                            </div>\r\n                        )}\r\n                        \r\n                    \r\n                            \r\n                </nav>\r\n                {this.state.menu?(<div style={{display: \"flex\", flexDirection:\"column\", position: \"absolute\", zIndex:\"2000\", background:\"white\", color:\"#696eb5\", border:\"1px solid gray\", borderRadius: \"0px 0px 5px 5px\", }}>\r\n                    {currentUser.role === \"student\"?(<div><div onClick={this.menu} >\r\n\r\n\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: \"/student_routes\",\r\n\r\n                                            state: { current: currentUser }\r\n                                        }}\r\n                                        className=\"nav-link\"   style={{ color:\"#696eb5\"}}>\r\n\r\n                                            Dashboard\r\n                                    </Link>\r\n                                    </div>\r\n                                   \r\n\r\n                                    <div >\r\n\r\n\r\n\r\n                                    <div onClick={this.menu}>\r\n                                    <Link to={\"/metro\"} className=\"nav-link\" style={{ color:\"#696eb5\"}}>\r\n                                                Metronome\r\n                </Link>\r\n                </div>\r\n\r\n                                        </div>\r\n                                        <div >\r\n\r\n\r\n\r\n                                        <div onClick={this.menu}>\r\n                                                <Link to={\"/students.teacher\"} className=\"nav-link\" style={{ color:\"#696eb5\"}}>\r\n                                                    My Teacher\r\n                </Link>\r\n                </div>\r\n\r\n                                        </div>\r\n                                        \r\n<div style={{ color:\"#696eb5\"}}>\r\n                        <div onClick={this.menu}>\r\n                            <a href=\"/login\" className=\"nav-link\" onClick={this.logOut} style={{ color:\"#696eb5\"}}>\r\n                                LogOut\r\n                </a>\r\n                        </div>\r\n                                </div>\r\n                                        </div>):(<div>\r\n                                            <div >\r\n                                            <div >\r\n\r\n\r\n\r\n<div onClick={this.menu}>\r\n<Link to={\"/userProfile\"} className=\"nav-link\" style={{ color:\"#696eb5\"}}>\r\n                                        {currentUser.firstname}\r\n                                    </Link>\r\n</div>\r\n\r\n</div>\r\n                                        \r\n                                \r\n                            \r\n<div >\r\n\r\n\r\n\r\n<div onClick={this.menu}>\r\n<Link to={\"/profile\"} className=\"nav-link\" style={{ color:\"#696eb5\"}}>\r\n                                                Students\r\n                </Link>\r\n</div>\r\n\r\n</div>\r\n<div >\r\n\r\n\r\n\r\n<div onClick={this.menu}>\r\n<Link to={\"/metro\"} className=\"nav-link\" style={{ color:\"#696eb5\"}}>\r\n                                                Metronome\r\n                </Link>\r\n</div>\r\n\r\n</div>\r\n<div >\r\n\r\n\r\n\r\n<div onClick={this.menu}>\r\n<Link to={\"/calendar\"} className=\"nav-link\" style={{ color:\"#696eb5\"}}>\r\n                                                Calendar\r\n                </Link>\r\n</div>\r\n\r\n</div>\r\n<div style={{ color:\"#696eb5\"}}>\r\n                        <div onClick={this.menu}>\r\n                            <a href=\"/login\" className=\"nav-link\" onClick={this.logOut} style={{ color:\"#696eb5\"}}>\r\n                                LogOut\r\n                </a>\r\n                        </div>\r\n                                </div>\r\n                        \r\n                           \r\n\r\n\r\n\r\n                                \r\n                            \r\n                                \r\n\r\n                                       \r\n                                    </div>\r\n                                        </div>)}\r\n                                </div>):(<div></div>)}\r\n\r\n                \r\n                <div className=\"myContainer\">\r\n                    \r\n\r\n                    <Switch >\r\n                        <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n                        <Route exact path=\"/login\" component={Login} />\r\n                        <Route exact path=\"/register\" component={Register} />\r\n                        <Route exact path=\"/profile\" component={Profile} />\r\n                       \r\n                        <Route path=\"/student/\" component={Student} />\r\n                        <Route exact path=\"/admin\" component={Admin} />\r\n\r\n                        <Route exact path=\"/student_routes\" component={student_routes} />\r\n                        <Route exact path=\"/metro\" component={Metro} />\r\n                        <Route exact path=\"/userProfile\" component={UsrProfile} />\r\n                        <Route exact path=\"/about\" component={About} />\r\n                        <Route exact path=\"/contact\" component={Contact} />\r\n                        <Route exact path=\"/calendar\" component={Calendar} />\r\n                        <Route exact path=\"/students.teacher\" component={StudentsTeacher} />\r\n\r\n                    \r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/dashboard.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/sidemenu.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/profilepic.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/menu.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/logout.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/mystudents.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/chat.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/todaycomponent.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/metro.js",["581"],"import React, { Component } from \"react\";\r\nimport Slider from './slider.js';\r\nimport '../pages/pages.css';\r\n\r\n\r\nclass Metro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bpm: 100,\r\n            playing: false,\r\n            count: 0,\r\n            tooSmall: false,\r\n            marginTop: \"200px\",\r\n            margint: \"\",\r\n            screensize: \"\",\r\n            maxHeight:\"700px\",\r\n            splashscreen:true,\r\n\r\n        }\r\n        this.click1 = new Audio(\"https://daveceddia.com/freebies/react-metronome/click1.wav\");\r\n        this.click2 = new Audio(\"https://daveceddia.com/freebies/react-metronome/click1.wav\");\r\n        this.handleBPM = this.handleBPM.bind(this);\r\n        this.updateInterval = this.updateInterval.bind(this);\r\n        this.startStop = this.startStop.bind(this);\r\n        this.playClick = this.playClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.Splashscreen = this.Splashscreen.bind(this);\r\n\r\n        \r\n    }\r\n    Splashscreen(){\r\n        this.setState({splashscreen:false})\r\n    }\r\n    updateWindowDimensions() {\r\n        this.setState({screensize: window.innerWidth})\r\n        if(parseInt(window.innerWidth) <= 800)\r\n        this.setState({ \r\n            tooSmall: true,\r\n            marginTop: \"20px\",\r\n        margint: \"00px\", \r\n        maxHeight:\"400px\",\r\n        margint: \"50px\",\r\n    });\r\n     }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\r\n    } \r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n\r\n    updateInterval() {\r\n        const bmpSpeed = 60 * 1000 / this.state.bpm;\r\n        this.timer = setInterval(this.playClick, bmpSpeed);\r\n    }\r\n\r\n    handleBPM(event) {\r\n        const bpm = event.target.value;\r\n        if (this.state.playing) {\r\n            clearInterval(this.timer);\r\n            this.updateInterval();\r\n            this.setState({\r\n                count: 0,\r\n                bpm\r\n            });\r\n        } else {\r\n            this.setState({\r\n                bpm\r\n            });\r\n        };\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n\r\n        \r\n        \r\n\r\n\r\n    }\r\n\r\n    playClick() {\r\n        if (this.state.count === 0) this.click2.play();\r\n        else this.click1.play();\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n\r\n    startStop() {\r\n        if (this.state.playing) {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                playing: false\r\n            });\r\n        } else {\r\n            this.updateInterval();\r\n            this.setState({\r\n                count: 0,\r\n                playing: true\r\n            }, this.playClick)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n            \r\n            \r\n\r\n            <div className= \"smallcard\" style={{marginTop:this.props.state.styles.margins.margin1, display:\"flex\", flexDirection:\"column\", padding:\"5px\" }}>\r\n                <div style={{display:\"flex\", flexDirection:\"column\", }}>                \r\n                        <div><Slider bpm={this.state.bpm} handleChange={this.handleBPM} handleChanges={this.handleChange} tooSmall={this.state.screensize}/>\r\n                        <button className=\"centerized btn\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"85px\", marginTop: \"50px\"  }} onClick={this.startStop} >\r\n                {this.state.playing ? \"Stop\" : \"Start\"}\r\n            </button>\r\n                        </div></div>\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Metro;\r\n","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/dash.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/studentDash.js",["582"],"import React, { Component } from 'react';\r\nimport Studentinfo from './studentinfo.js';\r\nimport Homework from \"./homework.js\";\r\nimport Progress from \"./progress.js\";\r\nimport Goals from './goals.js';\r\nimport Notes from './notes.js';\r\nimport Stats from './stats.js';\r\n\r\nimport \"../view.css\"\r\nclass Studentview extends Component {\r\n    constructor(props) {\r\n        //create state\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n    }\r\n    \r\n\r\n    render() {\r\n       \r\n\r\n        return (\r\n\r\n                <div style={{display:\"flex\", flexDirection:\"column\", justifycontent:\"center\", marginLeft:this.props.state.styles.margins.margin3}}>\r\n                    <h1 style={{marginTop:this.props.state.styles.margins.margin4}}>Student dash</h1>\r\n                    <div style={{display:\"flex\", flexDirection:\"row\",  }}>\r\n                    <Progress state={this.props.state} handleChange={this.props.handleChange} dispatch={this.props.dispatch}/>\r\n                        <Homework state={this.props.state} handleChange={this.props.handleChange} dispatch={this.props.dispatch} />\r\n                    </div>\r\n                    <div style={{display:\"flex\", flexDirection:\"row\", }}>\r\n                    <Stats state={this.props.state} handleChange={this.props.handleChange} dispatch={this.props.dispatch}/>\r\n                        <Goals state={this.props.state} handleChange={this.props.handleChange} dispatch={this.props.dispatch}/>\r\n                        <Notes state={this.props.state} handleChange={this.props.handleChange} dispatch={this.props.dispatch}/>\r\n                    </div>\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Studentview;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/goals.js",["583"],"import React, { Component } from 'react';\r\nimport leaf from \"./leaf.png\"\r\nimport Checkedd2 from './components/checkbox2';\r\nimport authService from '../services/auth.service';\r\nimport studentService from '../services/studentService';\r\nimport Addgoal from './popups/addGoal.js';\r\nimport Archive from './archive';\r\nclass Goals extends Component {\r\n    constructor(props) {\r\n        //create state\r\n        super(props);\r\n        this.AddUpdateDeleteArchiveGoal=this.AddUpdateDeleteArchiveGoal.bind(this);\r\n        this.state = {\r\n            \r\n        };\r\n    }\r\n    /**\r\n     * add goals.\r\n     * @param {*} main \r\n     * @param {*} maingoal \r\n     */\r\n    async AddUpdateDeleteArchiveGoal(goal, maingoal, myswitch){\r\n        let currentmains = await studentService.updateAddGoals(goal, this.props.state.currentstudent.mainGoals, maingoal, myswitch, this.props.state.currentstudent.archive)\r\n        this.props.dispatch({[this.props.state.currentstudent.mainGoals]:currentmains, updatecircle: true, [this.props.state.currentstudent.mainGoals]: currentmains.archive?currentmains.archive:this.props.state.currentstudent.archive, goals:false, showgoal:false, title:\"\", description:\"\"})\r\n        let myob= myswitch=== \"archivegoal\" ||myswitch=== \"delarchivegoal\"? {mainGoals: currentmains.currentmains, archive: currentmains.archive,}: {mainGoals: currentmains,}\r\n        authService.changeData(\"student\", this.props.state.currentstudent._id, this.props.state.currentuser._id, myob, )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"smallcardleft\" style={{ marginTop: this.props.state.styles.margins.margin1 }}>\r\n                {this.props.state.goals && (<Addgoal state={this.props.state} AddUpdateDeleteArchiveGoal={this.AddUpdateDeleteArchiveGoal} handleClose={this.props.dispatch.bind(this, {goals:false, showgoal:false, title:\"\", description:\"\"})} handleChange={this.props.handleChange} dispatch={this.props.dispatch}/>)}\r\n                <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}><h3 onClick={this.props.dispatch.bind(this, {archive:false})}>Goals</h3><div onClick={this.props.dispatch.bind(this, {archive:true})}>completed goals</div><button  className=\"btn  btn-block\"  onClick={this.props.dispatch.bind(this, {goals:true, main: true})} style={{ background: \"#696eb5\", height: \"30px\", color: \"#F0F2EF\", width: \"100px\", display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>+ Goal</button></div>\r\n                {this.props.state.archive?(<Archive AddUpdateDeleteArchiveGoal ={this.AddUpdateDeleteArchiveGoal} state={this.props.state} handleChange={this.props.handleChange} dispatch={this.props.dispatch}/>):(\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    {this.props.state.currentstudent.mainGoals.map((main, index) =>\r\n                        <div key={index} >\r\n                            <div>\r\n                                <div style={{ display: 'flex', flexDirection: \"row\", justifyContent: \"space-between\", }}>\r\n                                    <div style={{ display: 'flex', flexDirection: \"row\", alignItems: \"center\" }}>\r\n                                        <Checkedd2 myswitch=\"updatemain\" size= {this.props.state.styles.checkbox.size1} maingoal={main} state={this.props.state} main={true} AddUpdateDeleteArchiveGoal={this.AddUpdateDeleteArchiveGoal}/>\r\n                                        <h4 style={{ marginBottom: \"10px\" }} className=\"huv rowss\" ><span onClick={this.props.dispatch.bind(this, {goals:true, showgoal:true, main: true, maingoal:main,  })}>{main.mainGoal.title} </span></h4>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div onClick={this.AddUpdateDeleteArchiveGoal.bind(this, false, main, \"archivegoal\")}>archive</div>\r\n                                        <div onClick={this.AddUpdateDeleteArchiveGoal.bind(this, false, main, \"delmain\")} >delete</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {main.mainGoal.goals.map((goal, index) =>\r\n                                <div key={index} style={{ marginLeft: \"30px\" }} >\r\n                                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                            <Checkedd2 myswitch=\"updategoal\" size= {this.props.state.styles.checkbox.size1} goal={goal} maingoal={main} state={this.props.state} main={false} AddUpdateDeleteArchiveGoal={this.AddUpdateDeleteArchiveGoal}/>\r\n                                        <span  onClick={this.props.dispatch.bind(this, {goals:true, main: false, maingoal: main, goal:goal, showgoal:true})}>{goal.title}</span>\r\n                                    </div>\r\n                                    <div style={{ width: \"25%\", flexDirection: \"row\", justifyContent: \"flex-end\", display: \"flex\", }}>\r\n                                        <div onClick={this.AddUpdateDeleteArchiveGoal.bind(this, goal, main, \"delgoal\")}>delete</div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"btn  btn-block\" style={{ margin: \"0 auto\", marginTop: \"10px\", display: 'flex', flexDirection: 'row', justifyContent: 'center' }} value=\"submit\" onClick={this.props.dispatch.bind(this, {goals:true, main: false, maingoal: main})} >\r\n                                <span className=\"checkboxstuff1\" style={{ width: \"250\" }}><img src={leaf} style={{ width: \"20px\", height: \"20px\" }} /><p>+</p><p className=\"rowss huv\">Supporting Goal</p></span></div>\r\n                        </div>)}\r\n                </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Goals;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/studentinfo.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/homework.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/notes.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/progress.js",["584"],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/slider.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/calendar.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/signin.js",["585"],"import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Student from \"./mystudents\";\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n    async componentDidMount() {\r\n        let auth = await AuthService.getCurrentUser();\r\n        if (auth) {\r\n            console.log(auth)\r\n            if (auth.role === \"teacher\") {\r\n                this.props.handleLogin({currentuser:auth, role:auth.role, })\r\n            }\r\n            if (auth.role === \"student\") {\r\n                this.props.handleLogin({\r\n                    myswitch:\"viewstudent\",  \r\n                    currentstudent:auth, \r\n                    currentuser:auth})\r\n\r\n            }\r\n            if(auth.role===\"admin\"){\r\n                this.props.handleLogin({currentuser:auth, role:auth.role, })\r\n\r\n            }\r\n        }\r\n    }\r\n    //state creation and binding.\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        //this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            \r\n           \r\n        };\r\n    }\r\n    //handles all changes with state.\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    //submites for login using the controller to connect with backend. Sends to the teacher profile if teacher or the student if back end spits out student.\r\n    async handleLogin(e,) {\r\n        e.preventDefault();\r\n\r\n            // if (!this.state.email || !this.state.password) {\r\n            //     this.setState({\r\n            //         message:\"Please include correct email and password\"\r\n            //     })\r\n            // } \r\n                var lower = this.props.state.email.toLowerCase();\r\n            let data = await AuthService.login(lower, this.props.state.password)\r\n            let myswitch= data.role===\"student\"? \"viewstudent\": \"dash\"\r\n                this.props.handleLogin({\r\n                    currentstudent:data.role===\"student\"?data:undefined, \r\n                    myswitch: myswitch,\r\n                    currentuser:data,})\r\n               \r\n                \r\n              \r\n    \r\n    }\r\n\r\n    render() {\r\n        //login page for the screen. \r\n        return (\r\n            <div >\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" alt=\"profile-img\" className=\"profile-img-card\"/>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Email\">Email</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        value={this.props.state.email}\r\n                                        onChange={this.props.handleChange}\r\n                                        maxLength=\"30\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.props.state.password}\r\n                                        onChange={this.props.handleChange}\r\n                                        maxLength=\"20\"\r\n\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\" style={{marginTop:\"37px\"}}>\r\n                                    <button className=\"btn  btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\", width: \"85spx\" }} onClick={this.handleLogin} >\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                   \r\n                    \r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/admin.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/addStudent.js",["586","587"],"import React, { Component } from \"react\";\r\n// import Form from \"react-validation/build/form\";\r\n// import Input from \"react-validation/build/input\";\r\n// import { isEmail } from \"validator\";\r\nimport Dropdown from \"./dropdown.js\"\r\nimport Down from \"./downarrow.png\"\r\nimport authService from \"../../services/auth.service.js\";\r\nimport \"../../App.css\"\r\nimport \"../../pages/pages.css\"\r\nimport \"../../components/components.css\"\r\n\r\nimport clock from \"./clock.png\"\r\nimport calendarService from \"../../services/calendarService.js\";\r\n//this component details my dialog help component\r\n\r\nclass Addstudent extends Component{\r\n    //using the functions sent from the profile page allows me to send back student information typed in to profile and then to the backend. \r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.selectDay = this.selectDay.bind(this);\r\n        this.selectDays = this.selectDays.bind(this);\r\n        this.selectTime = this.selectTime.bind(this);\r\n        this.closedrop = this.closedrop.bind(this);\r\n        this.changeTime = this.changeTime.bind(this);\r\n        this.handleChange= this.handleChange.bind(this);\r\n        this.addstudent=this.addstudent.bind(this);\r\n\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.state = {\r\n            homeworks: [],\r\n            main: true,\r\n            maingoal: \"Change this\",\r\n            goal: \"\",\r\n            loading: false,\r\n            message: \"\",\r\n            goals: [],\r\n            Goal: false,\r\n            description: \"\",\r\n            maindescription:\"You should change this to be a goal that you would like this student to have.\",\r\n            next: false,\r\n            maindate: \"\",\r\n            checkbox: \"5\",\r\n            Homework: false,\r\n            hwchecked: \"\",\r\n            hwdescription: \"\",\r\n            hwcheckboxes: \"0\",\r\n            hwdate: \"\",\r\n            hwreasearch: \"\",\r\n            assignment: false,\r\n            research: false,\r\n            practice: false,\r\n            daily: \"100\",\r\n            hwtype: \"\",\r\n            days: \"100\",\r\n            showHomework: false,\r\n            currentHomework: undefined,\r\n            currentgoal: undefined,\r\n            showGoals: false,\r\n            tempID: 1,\r\n            HWtempID:1,\r\n            tempGoal: \"\",\r\n            tempDescription: \"\",\r\n            tempday: \"\",\r\n            tempcheckboxes: \"\",\r\n            tempHW: \"\",\r\n            edited: false,\r\n            edit: \"\",\r\n            editedd: \"\",\r\n            val: false,\r\n            yesnoCheckboxes: true,\r\n            yesnoTime: true,\r\n            timeframePractice: true,\r\n            starPoints: true,\r\n            manualsetup: false,\r\n            syncCheckbox: true,\r\n            dayorweekTime: \"\",\r\n            timeSync: true,\r\n            daysbool: true,\r\n            timebool: true,\r\n            smonths: \"\",\r\n            emonths: \"\",\r\n            temonths: \"\",\r\n            tsmonths: \"\",\r\n            Supporting_Goal: \"\",\r\n            Homework_Practiced: \"\",\r\n            timeframePracticebiao: true,\r\n            min: \"100\",\r\n            weeklytimebiao: \"60\",\r\n            dailytimebiao: true,\r\n            dmin: \"20\",\r\n            weekStreak: true,\r\n            dayStreak: true,\r\n            done: 0,\r\n            hwsynccheck: true,\r\n            hwdmin: \"\",\r\n            HWweeklytimebiao: \"\",\r\n            hwtimesync: true,\r\n            hwlink: \"\",\r\n            struggles: true,\r\n            hwQuestions: true,\r\n            yesnoday: true,\r\n            yesnoweek: true,\r\n            marginTop: \"\",\r\n            marginLeft: \"55px\",\r\n            selectDay: false,\r\n            selectTime: false,\r\n            day: \"\",\r\n            time: \"\",\r\n            first:\"\",\r\n            last: \"\",\r\n            time: \"\",\r\n            toosmall: false\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n   \r\n    \r\n    selectDay() {\r\n        this.setState({\r\n            selectDay: !this.state.selectDay,\r\n        })\r\n    }\r\n    closedrop() {\r\n        this.setState({\r\n            selectDay: false,\r\n            selectTime: false,\r\n\r\n        })\r\n    }\r\n    selectTime() {\r\n        this.setState({\r\n            selectTime: !this.state.selectTime,\r\n            \r\n        })\r\n    }\r\n    async addstudent(){\r\n        console.log(this.props.state)\r\n        let student= await authService.addStudent(\r\n            this.props.state.currentuser, this.state.first, this.state.last,  this.state.time, this.state.day,\r\n            /*this is everything for checkboxes*//*done*/ this.state.yesnoCheckboxes, this.state.syncCheckbox, this.state.checkbox,\r\n            /*this is everything for time. timebool is conditional clause if I want*/ this.state.yesnoTime, /*done*/ this.state.timeSync,/*done*/ this.state.weeklytimebiao,/*done*/ this.state.dailytimebiao,/*done*/ this.state.dmin,/*done*/ this.state.timebool, /*done*/ \"0\", /*done*/\r\n        /*this is days practiced. daybool also conditional */ this.state.daysbool,/*done*/ \"0\",/*done*/\r\n        /*updating time frame practiced for days.*/  this.state.days,/*done*/ this.state.smonths,/*done*/ this.state.emonths,/*done*/ this.state.timeframePracticebiao,/*done*/ this.state.min,/*done*/ this.state.tsmonths,/*done*/ this.state.temonths,/*done*/\r\n        /*updating streak info and star points (last two)*/ this.state.dayStreak,/*done*/ this.state.weekStreak,/*done*/ this.state.starPoints,/*done*/ this.state.manualsetup,/*done*/\r\n        /*add the goals first one is for conditional clause if I want.*/ this.state.goals[0],/*done*/ this.state.goals,/*done*/ this.state.maingoal,/*done*/  this.state.maindescription,/*done*/  this.state.maindate,/*done*/ \r\n        /*add the homeworks*/ this.state.homeworks,/*done*/ \r\n        /*done updating new student.*/ true, /*done*/ \r\n\r\n\r\n        )\r\n        let current = this.props.state.currentuser\r\n        console.log(current)\r\n        console.log(student)\r\n\r\n        let ar = current.students?current.students:[]\r\n        ar.push(student.student);\r\n        current.students=ar;\r\n        let myappointments= await calendarService.getOrganizedCalendar(current.students)\r\n        this.props.dispatch({currentuser:current, addstudent:false, appointments:myappointments })\r\n    }\r\n    selectDays(day) {\r\n        this.setState({\r\n            day: day\r\n        })\r\n        this.selectDay();\r\n    }\r\n    changeTime(time, showtime) {\r\n        this.setState({\r\n            time: showtime\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup-box\">\r\n                <div className=\"box_add\" ref={this.wrapperRef}>\r\n                    <span className=\"close-icon-2\" style= {{color:\"#8C6057\"}} onClick={this.props.handleClose}>x</span>\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstName\"><b>Student First Name:</b>*</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"first\"\r\n                                onChange={this.handleChange}\r\n                                name=\"first\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\"><b>Student Last Name:</b>*</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"last\"\r\n                                onChange={this.handleChange}\r\n                                name=\"last\"\r\n                            />\r\n                        </div>\r\n                            <div className=\"form-group forfiles\" >\r\n                                <div>\r\n                                    <label htmlfor=\"time\"><b>Scheduled Time:</b></label>\r\n                                    <div className=\"form-control\" id=\"time\" onClick={this.selectTime} style={{ width: \"120px\", height: \"30px\", flexDirection: \"row\", display: \"flex\" }}>\r\n                                        <div style={{ width: \"90px\", alignSelf: \"center\" }}>{this.state.time}</div>\r\n                                        <img src={clock} alt=\"clock\" style={{ width: \"15px\", height: \"15px\", }} />\r\n                                    </div>\r\n                                    {this.state.selectTime ? (<Dropdown selectDay={this.selectDays} clock={true} closedrop={this.closedrop} changeTime={this.changeTime}/>) : (<div></div>)}\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlfor=\"day\"><b>Day: </b></label>\r\n                                    <div className=\"form-control\"nid=\"day\" onClick={this.selectDay}style={{ width: \"110px\", height: \"30px\", flexDirection: \"row\", display:\"flex\" }}>\r\n                                        <div style={{width:\"90px\", alignSelf:\"center\"}}>{this.state.day}</div>\r\n                                        <img src={Down} alt=\"arrowdow\" style={{ width: \"17px\", height: \"17px\",  }} />\r\n                                    </div>\r\n                                    {this.state.selectDay ? (<Dropdown selectDay={this.selectDays} clock={false} closedrop={this.closedrop} />) : (<div></div>)}\r\n                                </div>\r\n                                {this.state.toosmall?(<div >\r\n                                </div>):(<div style={{opacity:\"0\"}}>\r\n                                thanks!\r\n                                </div>)}\r\n                        </div>\r\n                        <div style={{ marginTop: \"50px\" }}>\r\n                                <button className=\"btn \" style={{background:\"#696eb5\", color:\"#F0F2EF\" }} onClick={this.addstudent}>Add Student</button>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Addstudent;\r\n","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/dropdown.js",["588"],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/calendarService.js",["589"],"\r\nclass calendarService {\r\n   /**\r\n    * \r\n    * @param {*} students \r\n    * @returns sorted schedule of students\r\n    */\r\ngetOrganizedCalendar(students) {\r\n    let myob={\r\n        Monday: [],\r\n        Tuesday: [],\r\n        Wednesday:[],\r\n        Thursday:[],\r\n        Friday:[],\r\n        Saturday:[],\r\n        Sunday: [],\r\n    }\r\n    for(let i =0; i<students?.length; i++){ \r\n        if(students[i].day){\r\n            \r\n            let ar =myob[students[i].day]\r\n\r\n            \r\n            let schedule = students[i].scheduling[3]===\" \"? students[i].scheduling[0]+\":\"+students[i].scheduling.substr(1): students[i].scheduling.substr(0, 1)+\":\"+students[i].scheduling.substr(2)\r\n    ar.push({firstName: students[i].firstName,firstName: students[i].firstName,scheduling: schedule, schedule: \"\"})\r\n    \r\n    ar.sort(function (a, b) {\r\n        \r\n        a.schedule = a.scheduling[4]===\" \"? parseInt((a.scheduling[0]+a.scheduling.substr(2, 3))): parseInt((a.scheduling.substr(0, 1)+a.scheduling.substr(3, 4)))\r\n        b.schedule = b.scheduling[4]===\" \"? parseInt((b.scheduling[0]+b.scheduling.substr(2, 3))): parseInt((b.scheduling.substr(0, 1)+b.scheduling.subsstr(3, 4)))\r\n        return a.schedule - b.schedule;\r\n    });\r\n    ar.sort(function (a, b) {\r\n        \r\n        a.schedule = a.scheduling.endsWith(\"am\")? 1: 0\r\n        b.schedule = b.scheduling.endsWith(\"am\")? 1: 0\r\n        return b.schedule - a.schedule;\r\n    });\r\n    myob[students[i].day]=ar\r\n        }\r\n}\r\nreturn myob\r\n}\r\n}\r\n\r\nexport default new calendarService();","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/stats.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/components/progresscircle.js",["590","591","592","593"],"import React, { Component } from \"react\";\r\nimport \"./progress_circle.css\";\r\n//not much here but functionality will be added for the goals.\r\nexport default class Progress_circle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            stylel: \"rotate(180deg)\",\r\n            styler: \"rotate(180deg)\",\r\n            completedGoals: 0,\r\n            incompletGoals: 0,\r\n            totalGoals: 0,\r\n            percent: \"\",\r\n\r\n        };\r\n    }\r\n    componentDidUpdate(props, state){\r\n        if (this.props.updatecircle && !props.updatecircle){\r\n            debugger\r\n            this.componentDidMount()\r\n            this.props.dispatch({updatecircle:false})\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.goals)\r\n        var totalgoals= this.props.goals?.length\r\n        for (let i=0; i<this.props.goals?.length; i++){\r\n            console.log(this.props.goals[i].mainGoal);\r\n            let goalz= this.props.goals[i]\r\n            for(let i=0; i<goalz.mainGoal.goals.length; i++){\r\n                \r\n                totalgoals++\r\n            }\r\n        }\r\n        if(this.props.main){\r\n            this.setState({\r\n                totalGoals: totalgoals\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                totalGoals: totalgoals\r\n            })\r\n        }\r\n   \r\n        this.progressCalc();\r\n\r\n       \r\n        \r\n            \r\n        \r\n    }\r\n    async progressCalc() {\r\n\r\n        let completedGoals = 0;\r\n        let goals = 0;\r\n\r\n        for (let i = 0; i < this.props.goals?.length; i++) {\r\n\r\n            if (this.props.goals[i].mainGoal.complete) {\r\n                completedGoals += 1;\r\n            }\r\n            else {\r\n                goals += 1;\r\n            }\r\n            let goalz= this.props.goals[i]\r\n            for(let i=0; i<goalz.mainGoal.goals.length; i++){\r\n                if(goalz.mainGoal.goals[i]){\r\n                if(goalz.mainGoal.goals[i].complete){\r\n                    console.log(goalz.mainGoal.goals[i].complete);\r\n                    completedGoals += 1;\r\n                }\r\n                else {\r\n                    goals += 1;\r\n                }\r\n            }\r\n            }\r\n        }\r\n        if (this.props.main) {\r\n            if (this.props.main.complete) {\r\n                completedGoals += 1;\r\n            }\r\n        }\r\n        \r\n        await this.setState({\r\n            completedGoals: completedGoals,\r\n            incompletGoals: goals,\r\n        })\r\n        \r\n        console.log(this.state.totalGoals);\r\n        let calc = 100 / this.state.totalGoals;\r\n        let percentage = calc * this.state.completedGoals;\r\n        let calculate = 360 / this.state.totalGoals;\r\n        let calculated = calculate * this.state.completedGoals;\r\n        let overcalc =0;\r\n        \r\n\r\n        if (calculated > 180) {\r\n            overcalc = calculated - 180;\r\n            calculated = 180;\r\n\r\n        } \r\n        console.log(calculated);\r\n\r\n        console.log(overcalc);\r\n        const stylel = \"rotate(\" + calculated.toString() + \"deg)\";\r\n        const styler = \"rotate(\" + overcalc.toString() + \"deg)\";\r\n\r\n        \r\n        let percent = percentage.toString();\r\n        let perc = \"\";\r\n        if (percent.length > 4) {\r\n\r\n            for (let i = 0; i < 4; i++) {\r\n                perc += percent[i];\r\n            }\r\n        }\r\n        else {\r\n            perc = percent;\r\n        }\r\n\r\n        this.setState({\r\n            percent: perc,\r\n            stylel: stylel,\r\n            styler: styler,\r\n\r\n        });\r\n\r\n        if(!this.props.main){\r\n            if(this.props.goals.length===0){\r\n                this.setState({\r\n                    percent: \"0\",\r\n                    stylel: \"rotate(\" + \"0\" + \"deg)\",\r\n                    styler: \"rotate(\" + \"0\" + \"deg)\"\r\n\r\n                })\r\n            }\r\n        }\r\n    \r\n    }\r\n    /*\r\n     \r\n     */\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                {this.props.profile ? (\r\n                    <div>\r\n                        {this.props.userProfile?(\r\n                        \r\n                        <div  >\r\n                            {this.state.percent===\"0\"?(<div>\r\n                                <div className=\"circlesI\">\r\n                            <div className=\"inner\">\r\n                                <img\r\n                                    src={this.props.pic}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-carda  cropped1 \"\r\n\r\n                                />\r\n                            </div>\r\n                           \r\n                                \r\n\r\n                            \r\n                           \r\n                        \r\n                            <div className=\"circleI\">\r\n                            <div className=\"bar left\">\r\n                                <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                            </div>\r\n                            <div className=\"bar right\">\r\n                                <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                            </div>):(<div>\r\n\r\n                                <div className=\"circles5\">\r\n                            <div className=\"inner\">\r\n                                <img\r\n                                    src={this.props.pic}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-carda  cropped1 \"\r\n\r\n                                />\r\n                            </div>\r\n                           \r\n                                \r\n\r\n                            \r\n                           \r\n                        \r\n                            <div className=\"circle5\">\r\n                            <div className=\"bar left\">\r\n                                <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                            </div>\r\n                            <div className=\"bar right\">\r\n                                <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                            </div>)}\r\n                            \r\n                        \r\n\r\n\r\n                        </div>):(<div>\r\n\r\n                            {this.state.percent===\"0\"?(<div className=\"circlesIa\">\r\n                            <div className=\"inner\">\r\n                                <img\r\n                                    src={this.props.pic}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-carda  cropped1 \"\r\n\r\n                                />\r\n                            </div>\r\n                           \r\n                                \r\n\r\n                            \r\n                           \r\n                        \r\n                            <div className=\"circleIa\">\r\n                            <div className=\"bar left\">\r\n                                <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                            </div>\r\n                            <div className=\"bar right\">\r\n                                <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>):(<div className=\"circles4\">\r\n                            <div className=\"inner\">\r\n                                <img\r\n                                    src={this.props.pic}\r\n                                    alt=\"profile-img\"\r\n                                    className=\"profile-img-carda  cropped1 \"\r\n\r\n                                />\r\n                            </div>\r\n                           \r\n                                \r\n\r\n                            \r\n                           \r\n                        \r\n                            <div className=\"circle4\">\r\n                            <div className=\"bar left\">\r\n                                <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                            </div>\r\n                            <div className=\"bar right\">\r\n                                <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>)}\r\n                            \r\n                        <div className=\"number2\" style={{marginTop:\"25px\"}}>{this.state.percent}% Towards Goal</div>\r\n                            \r\n                        </div>)}\r\n                        \r\n                    </div>\r\n\r\n                ) : (<div>\r\n                    {this.state.percent===\"0\"?(\r\n\r\n                        <div className=\"circlesI3 \">\r\n                            <div className=\"inner \"></div><div className=\" innera\"></div>\r\n                    <div className=\"number\">{this.state.percent}%</div>\r\n                            <div className=\"circleI3\">\r\n                                <div className=\"bar left\">\r\n                                    <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                                </div>\r\n                                <div className=\"bar right\">\r\n                                    <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ):(\r\n\r\n                        <div className=\"circles3 \">\r\n                            <div className=\"inner \"></div><div className=\" innera\"></div>\r\n                    <div className=\"number\">{this.state.percent}%</div>\r\n                            <div className=\"circle3\">\r\n                                <div className=\"bar left\">\r\n                                    <div className=\"progress\" style={{ transform: this.state.stylel }}></div>\r\n                                </div>\r\n                                <div className=\"bar right\">\r\n                                    <div className=\"progress\" style={{ transform: this.state.styler }}></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                        \r\n\r\n                    </div>)}\r\n            \r\n                \r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n/*\r\n \r\n */","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/components/moreProgress.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/components/checkbox.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/teacher.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/components/checkbox2.js",["594"],"import React, { Component } from 'react';\r\nimport \"./checkbox.css\"\r\nimport authService from '../../services/auth.service';\r\nclass Checkedd2 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.markcheckbox = this.markcheckbox.bind(this);\r\n        this.state = {}\r\n    }\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} day \r\n     * check the box send to backend.\r\n     */\r\n    async markcheckbox() {\r\n            \r\n        let mygoal = this.props.main? false: this.props.goal\r\n        let maingoal=this.props.maingoal\r\n        maingoal.mainGoal.complete= this.props.main? !this.props.maingoal.mainGoal.complete: this.props.maingoal.mainGoal.complete;\r\n        if(mygoal){mygoal.complete= !mygoal.complete}\r\n        this.props.AddUpdateDeleteArchiveGoal(mygoal, maingoal, this.props.myswitch);\r\n\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n\r\n            <div style={{display:\"flex\", flexDirection:\"row\", }}>\r\n                <input type=\"checkbox\"  checked={this.props.main?this.props.maingoal?.mainGoal?.complete: this.props.goal?.complete  }/>\r\n                <label onClick={this.markcheckbox} className={this.props.size} style={{cursor:\"pointer\"}}>\r\n                <div className=\"csyncbox\">\r\n                <p style={{ position: \"absolute\", marginLeft: \"-3px\", marginTop: \"-3px\", fontSize: \"13px\" }}>M</p>\r\n                </div>\r\n                <div className=\"tick\"></div>\r\n                        </label>  \r\n           </div>\r\n            )\r\n}\r\n}\r\n\r\nexport default Checkedd2;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/services/studentService.js",["595","596","597"],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/addGoal.js",["598"],"import React, { Component } from \"react\";\r\n//details my existingEmail.js component. creates some buttons that use methods embedded in props from the profile page. Choice will update the backend.\r\nclass addGoal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.AddUpdateDeleteArchiveGoal= this.AddUpdateDeleteArchiveGoal.bind(this);\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\"\r\n        }\r\n    };\r\n    async componentDidMount() {\r\n        if(this.props.state.showgoal){\r\n            await this.setState({\r\n                title: this.props.state.main? this.props.state.maingoal.mainGoal.title : this.props.state.goal.title,\r\n                description: this.props.state.main? this.props.state.maingoal.mainGoal.description : this.props.state.goal.description\r\n            })\r\n            this.props.dispatch({title:this.state.title, description:this.state.description})\r\n        }\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n    AddUpdateDeleteArchiveGoal(){\r\n        \r\n        if(this.props.state.showgoal){\r\n            let ob = this.props.state.main? {mainGoal:{id: this.props.state.maingoal.mainGoal.id, complete:this.props.state.maingoal.mainGoal.complete, \r\n                completed: this.props.state.maingoal.mainGoal.completed, date: this.props.state.maingoal.mainGoal.date, \r\n                description: this.state.description !== this.props.state.description? this.props.state.description: this.state.description , \r\n                goals:this.props.state.maingoal.mainGoal.goals, title:this.state.title !== this.props.state.title? this.props.state.title: this.state.title} ,_id: this.props.state.maingoal._id}: \r\n                {_id:this.props.state.goal._id, id:this.props.state.goal.id, complete:this.props.state.goal.complete, completed: this.props.state.goal.completed, description:  this.props.state.description, title:this.props.state.title}\r\n        this.props.AddUpdateDeleteArchiveGoal(this.props.state.main?false:ob, this.props.state.main? ob: this.props.state.maingoal , this.props.state.main?\"updatemain\":\"updategoal\")\r\n        }\r\n        else{\r\n        let ob = this.props.state.main? {mainGoal:{id: Date.now(), complete:false, completed: \"\", date:\"\", description: this.props.state.description, goals:[], title:this.props.state.title}}: {id: Date.now(), complete:false, completed: \"\",description: this.props.state.description,title:this.props.state.title}\r\n        this.props.AddUpdateDeleteArchiveGoal(this.props.state.main?false:ob, this.props.state.main? ob: this.props.state.maingoal , this.props.state.main?\"addmain\":\"addgoal\")\r\n    }\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup-box\" style={{ zIndex: \"1010\" }}>\r\n                <div ref={this.wrapperRef}  className=\"diapicboxa\" style={{ zIndex: \"1010\" }}>\r\n                    <span className=\"close-icon-2\" onClick={this.props.handleClose}>x</span>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\"><h5>Add Goal</h5></label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"goal\"\r\n                            placeholder= {this.state.title!==\"\"? this.state.title: \"\"}\r\n                            onChange={this.props.handleChange}\r\n                            name=\"title\"\r\n                        />\r\n                    </div>\r\n                    <div >\r\n                        <label htmlFor=\"description\"><h5>Description</h5></label>\r\n                        <div className=\"form-group\" >\r\n                            <textarea\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                rows=\"4\"\r\n                                id=\"description\"\r\n                                placeholder= {this.state.description!==\"\"? this.state.description: \"\"}\r\n                                onChange={this.props.handleChange}\r\n                                name=\"description\"\r\n\r\n                            ></textarea>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n\r\n                    <div>\r\n\r\n                        <button className=\"btn  btn-block\" style={{ background: \"#696eb5\", height: \"35px\", color: \"#F0F2EF\" }}  onClick={this.AddUpdateDeleteArchiveGoal}>Add Goal</button>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default addGoal;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/archive.js",["599"],"import React, { Component } from 'react';\r\nimport leaf from \"./leaf.png\"\r\n\r\nclass Archive extends Component {\r\n    constructor(props) {\r\n        //create state\r\n        super(props);\r\n       this.state = {\r\n        };\r\n    }\r\n    /**\r\n     * add goals.\r\n     * @param {*} main \r\n     * @param {*} maingoal \r\n     */\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n         <div>\r\n                    {this.props.state.currentstudent?.archive.map((main, index) =>\r\n                        <div key={index} >\r\n                            <div>\r\n                                <div style={{ display: 'flex', flexDirection: \"row\", justifyContent: \"space-between\", }}>\r\n                                    <div style={{ display: 'flex', flexDirection: \"row\", alignItems: \"center\" }}>\r\n                                        <h4 style={{ marginBottom: \"10px\" }} className=\"huv rowss\" ><span onClick={this.props.dispatch.bind(this, {goals:true, showgoal:true, main: true, maingoal:main,  })}>{main.mainGoal.title} </span></h4>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div onClick={this.props.AddUpdateDeleteArchiveGoal.bind(this, false, main, \"delarchivegoal\")} >delete</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {main.mainGoal.goals.map((goal, index) =>\r\n                                <div key={index} style={{ marginLeft: \"30px\" }} >\r\n                                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                        <span  onClick={this.props.dispatch.bind(this, {goals:true, main: false, maingoal: main, goal:goal, showgoal:true})}>{goal.title}</span>\r\n                                    </div>\r\n                                    <div style={{ width: \"25%\", flexDirection: \"row\", justifyContent: \"flex-end\", display: \"flex\", }}>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>)}\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Archive;","/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/newnote.js",[],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/addhomework.js",["600"],"/mnt/c/Users/taylo/source/react/Legato/sj2legato/savelegato/src/view/popups/times.js",["601"],{"ruleId":"602","replacedBy":"603"},{"ruleId":"604","replacedBy":"605"},{"ruleId":"606","severity":1,"message":"607","line":5,"column":8,"nodeType":"608","messageId":"609","endLine":5,"endColumn":19},{"ruleId":"606","severity":1,"message":"607","line":2,"column":8,"nodeType":"608","messageId":"609","endLine":2,"endColumn":19},{"ruleId":"602","replacedBy":"610"},{"ruleId":"604","replacedBy":"611"},{"ruleId":"606","severity":1,"message":"612","line":11,"column":8,"nodeType":"608","messageId":"609","endLine":11,"endColumn":12},{"ruleId":"606","severity":1,"message":"613","line":20,"column":8,"nodeType":"608","messageId":"609","endLine":20,"endColumn":15},{"ruleId":"606","severity":1,"message":"614","line":20,"column":19,"nodeType":"608","messageId":"609","endLine":20,"endColumn":26},{"ruleId":"615","severity":1,"message":"616","line":455,"column":170,"nodeType":"617","messageId":"618","endLine":455,"endColumn":200},{"ruleId":"619","severity":1,"message":"620","line":47,"column":9,"nodeType":"621","messageId":"622","endLine":47,"endColumn":16},{"ruleId":"606","severity":1,"message":"623","line":13,"column":8,"nodeType":"608","messageId":"609","endLine":13,"endColumn":12},{"ruleId":"606","severity":1,"message":"624","line":26,"column":8,"nodeType":"608","messageId":"609","endLine":26,"endColumn":18},{"ruleId":"606","severity":1,"message":"625","line":521,"column":13,"nodeType":"608","messageId":"609","endLine":521,"endColumn":18},{"ruleId":"626","severity":1,"message":"627","line":1347,"column":89,"nodeType":"628","endLine":1352,"endColumn":91},{"ruleId":"626","severity":1,"message":"627","line":1360,"column":93,"nodeType":"628","endLine":1366,"endColumn":95},{"ruleId":"629","severity":1,"message":"630","line":6,"column":5,"nodeType":"631","messageId":"632","endLine":10,"endColumn":6},{"ruleId":"606","severity":1,"message":"633","line":6,"column":8,"nodeType":"608","messageId":"609","endLine":6,"endColumn":19},{"ruleId":"606","severity":1,"message":"612","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":12},{"ruleId":"606","severity":1,"message":"634","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":16},{"ruleId":"606","severity":1,"message":"612","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":12},{"ruleId":"606","severity":1,"message":"634","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":16},{"ruleId":"606","severity":1,"message":"635","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":17},{"ruleId":"636","severity":1,"message":"637","line":33,"column":34,"nodeType":"638","messageId":"639","endLine":33,"endColumn":52},{"ruleId":"606","severity":1,"message":"640","line":19,"column":13,"nodeType":"608","messageId":"609","endLine":19,"endColumn":17},{"ruleId":"606","severity":1,"message":"641","line":80,"column":9,"nodeType":"608","messageId":"609","endLine":80,"endColumn":13},{"ruleId":"626","severity":1,"message":"627","line":388,"column":41,"nodeType":"628","endLine":394,"endColumn":43},{"ruleId":"626","severity":1,"message":"627","line":401,"column":49,"nodeType":"628","endLine":407,"endColumn":51},{"ruleId":"636","severity":1,"message":"637","line":8,"column":34,"nodeType":"638","messageId":"639","endLine":8,"endColumn":52},{"ruleId":"606","severity":1,"message":"642","line":17,"column":8,"nodeType":"608","messageId":"609","endLine":17,"endColumn":18},{"ruleId":"626","severity":1,"message":"627","line":1145,"column":1,"nodeType":"628","endLine":1150,"endColumn":3},{"ruleId":"626","severity":1,"message":"627","line":1388,"column":1,"nodeType":"628","endLine":1393,"endColumn":3},{"ruleId":"626","severity":1,"message":"627","line":1510,"column":1,"nodeType":"628","endLine":1515,"endColumn":3},{"ruleId":"626","severity":1,"message":"627","line":1793,"column":1,"nodeType":"628","endLine":1798,"endColumn":3},{"ruleId":"626","severity":1,"message":"627","line":2065,"column":45,"nodeType":"628","endLine":2070,"endColumn":47},{"ruleId":"626","severity":1,"message":"627","line":2104,"column":1,"nodeType":"628","endLine":2109,"endColumn":3},{"ruleId":"606","severity":1,"message":"643","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":12},{"ruleId":"606","severity":1,"message":"644","line":4,"column":8,"nodeType":"608","messageId":"609","endLine":4,"endColumn":13},{"ruleId":"606","severity":1,"message":"612","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":12},{"ruleId":"606","severity":1,"message":"643","line":2,"column":8,"nodeType":"608","messageId":"609","endLine":2,"endColumn":12},{"ruleId":"606","severity":1,"message":"644","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":13},{"ruleId":"606","severity":1,"message":"645","line":5,"column":8,"nodeType":"608","messageId":"609","endLine":5,"endColumn":19},{"ruleId":"606","severity":1,"message":"646","line":6,"column":8,"nodeType":"608","messageId":"609","endLine":6,"endColumn":16},{"ruleId":"606","severity":1,"message":"647","line":7,"column":8,"nodeType":"608","messageId":"609","endLine":7,"endColumn":16},{"ruleId":"606","severity":1,"message":"648","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":20},{"ruleId":"606","severity":1,"message":"649","line":9,"column":8,"nodeType":"608","messageId":"609","endLine":9,"endColumn":12},{"ruleId":"606","severity":1,"message":"650","line":10,"column":8,"nodeType":"608","messageId":"609","endLine":10,"endColumn":13},{"ruleId":"606","severity":1,"message":"651","line":11,"column":8,"nodeType":"608","messageId":"609","endLine":11,"endColumn":12},{"ruleId":"606","severity":1,"message":"652","line":22,"column":7,"nodeType":"608","messageId":"609","endLine":22,"endColumn":15},{"ruleId":"636","severity":1,"message":"637","line":30,"column":30,"nodeType":"638","messageId":"639","endLine":30,"endColumn":48},{"ruleId":"636","severity":1,"message":"637","line":14,"column":30,"nodeType":"638","messageId":"639","endLine":14,"endColumn":48},{"ruleId":"636","severity":1,"message":"637","line":13,"column":30,"nodeType":"638","messageId":"639","endLine":13,"endColumn":48},{"ruleId":"615","severity":1,"message":"616","line":18,"column":13,"nodeType":"617","messageId":"618","endLine":18,"endColumn":36},{"ruleId":"653","severity":1,"message":"654","line":127,"column":39,"nodeType":"655","messageId":"656","endLine":127,"endColumn":40},{"ruleId":"653","severity":1,"message":"654","line":127,"column":45,"nodeType":"655","messageId":"656","endLine":127,"endColumn":46},{"ruleId":"653","severity":1,"message":"654","line":128,"column":39,"nodeType":"655","messageId":"656","endLine":128,"endColumn":40},{"ruleId":"653","severity":1,"message":"654","line":128,"column":45,"nodeType":"655","messageId":"656","endLine":128,"endColumn":46},{"ruleId":"636","severity":1,"message":"637","line":17,"column":30,"nodeType":"638","messageId":"639","endLine":17,"endColumn":48},{"ruleId":"606","severity":1,"message":"657","line":2,"column":8,"nodeType":"608","messageId":"609","endLine":2,"endColumn":12},{"ruleId":"606","severity":1,"message":"635","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":17},{"ruleId":"636","severity":1,"message":"637","line":8,"column":30,"nodeType":"638","messageId":"639","endLine":8,"endColumn":48},{"ruleId":"658","severity":1,"message":"659","line":9,"column":9,"nodeType":"628","messageId":"660","endLine":16,"endColumn":11},{"ruleId":"636","severity":1,"message":"637","line":8,"column":30,"nodeType":"638","messageId":"639","endLine":8,"endColumn":48},{"ruleId":"636","severity":1,"message":"637","line":15,"column":30,"nodeType":"638","messageId":"639","endLine":15,"endColumn":48},{"ruleId":"606","severity":1,"message":"661","line":2,"column":8,"nodeType":"608","messageId":"609","endLine":2,"endColumn":19},{"ruleId":"606","severity":1,"message":"633","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":19},{"ruleId":"606","severity":1,"message":"612","line":4,"column":8,"nodeType":"608","messageId":"609","endLine":4,"endColumn":12},{"ruleId":"606","severity":1,"message":"662","line":5,"column":8,"nodeType":"608","messageId":"609","endLine":5,"endColumn":20},{"ruleId":"606","severity":1,"message":"663","line":6,"column":10,"nodeType":"608","messageId":"609","endLine":6,"endColumn":16},{"ruleId":"636","severity":1,"message":"637","line":16,"column":30,"nodeType":"638","messageId":"639","endLine":16,"endColumn":48},{"ruleId":"636","severity":1,"message":"637","line":44,"column":30,"nodeType":"638","messageId":"639","endLine":44,"endColumn":48},{"ruleId":"619","severity":1,"message":"664","line":21,"column":17,"nodeType":"621","messageId":"622","endLine":21,"endColumn":25},{"ruleId":"636","severity":1,"message":"637","line":22,"column":30,"nodeType":"638","messageId":"639","endLine":22,"endColumn":48},{"ruleId":"626","severity":1,"message":"627","line":650,"column":42,"nodeType":"628","endLine":652,"endColumn":64},{"ruleId":"606","severity":1,"message":"661","line":2,"column":8,"nodeType":"608","messageId":"609","endLine":2,"endColumn":19},{"ruleId":"636","severity":1,"message":"637","line":16,"column":30,"nodeType":"638","messageId":"639","endLine":16,"endColumn":48},{"ruleId":"626","severity":1,"message":"627","line":168,"column":48,"nodeType":"628","endLine":168,"endColumn":160},{"ruleId":"636","severity":1,"message":"637","line":9,"column":30,"nodeType":"638","messageId":"639","endLine":9,"endColumn":48},{"ruleId":"636","severity":1,"message":"637","line":15,"column":30,"nodeType":"638","messageId":"639","endLine":15,"endColumn":48},{"ruleId":"606","severity":1,"message":"612","line":6,"column":8,"nodeType":"608","messageId":"609","endLine":6,"endColumn":12},{"ruleId":"606","severity":1,"message":"665","line":18,"column":8,"nodeType":"608","messageId":"609","endLine":18,"endColumn":20},{"ruleId":"606","severity":1,"message":"666","line":19,"column":8,"nodeType":"608","messageId":"609","endLine":19,"endColumn":14},{"ruleId":"626","severity":1,"message":"627","line":1236,"column":74,"nodeType":"628","endLine":1236,"endColumn":174},{"ruleId":"619","severity":1,"message":"667","line":30,"column":13,"nodeType":"621","messageId":"622","endLine":30,"endColumn":24},{"ruleId":"636","severity":1,"message":"637","line":9,"column":30,"nodeType":"638","messageId":"639","endLine":9,"endColumn":48},{"ruleId":"606","severity":1,"message":"623","line":9,"column":8,"nodeType":"608","messageId":"609","endLine":9,"endColumn":12},{"ruleId":"606","severity":1,"message":"650","line":10,"column":8,"nodeType":"608","messageId":"609","endLine":10,"endColumn":13},{"ruleId":"606","severity":1,"message":"651","line":14,"column":8,"nodeType":"608","messageId":"609","endLine":14,"endColumn":12},{"ruleId":"619","severity":1,"message":"668","line":464,"column":134,"nodeType":"621","messageId":"622","endLine":464,"endColumn":148},{"ruleId":"606","severity":1,"message":"669","line":17,"column":8,"nodeType":"608","messageId":"609","endLine":17,"endColumn":14},{"ruleId":"619","severity":1,"message":"620","line":44,"column":9,"nodeType":"621","messageId":"622","endLine":44,"endColumn":16},{"ruleId":"606","severity":1,"message":"670","line":2,"column":8,"nodeType":"608","messageId":"609","endLine":2,"endColumn":19},{"ruleId":"626","severity":1,"message":"627","line":65,"column":91,"nodeType":"628","endLine":65,"endColumn":151},{"ruleId":"658","severity":1,"message":"671","line":21,"column":16,"nodeType":"628","messageId":"660","endLine":21,"endColumn":161},{"ruleId":"606","severity":1,"message":"672","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":15},{"ruleId":"636","severity":1,"message":"637","line":30,"column":30,"nodeType":"638","messageId":"639","endLine":30,"endColumn":48},{"ruleId":"619","severity":1,"message":"673","line":113,"column":13,"nodeType":"621","messageId":"622","endLine":113,"endColumn":17},{"ruleId":"636","severity":1,"message":"637","line":17,"column":30,"nodeType":"638","messageId":"639","endLine":17,"endColumn":48},{"ruleId":"619","severity":1,"message":"674","line":25,"column":47,"nodeType":"621","messageId":"622","endLine":25,"endColumn":56},{"ruleId":"653","severity":1,"message":"654","line":134,"column":39,"nodeType":"655","messageId":"656","endLine":134,"endColumn":40},{"ruleId":"653","severity":1,"message":"654","line":134,"column":45,"nodeType":"655","messageId":"656","endLine":134,"endColumn":46},{"ruleId":"653","severity":1,"message":"654","line":135,"column":39,"nodeType":"655","messageId":"656","endLine":135,"endColumn":40},{"ruleId":"653","severity":1,"message":"654","line":135,"column":45,"nodeType":"655","messageId":"656","endLine":135,"endColumn":46},{"ruleId":"606","severity":1,"message":"607","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":19},{"ruleId":"675","severity":1,"message":"676","line":19,"column":5,"nodeType":"677","messageId":"678","endLine":47,"endColumn":6},{"ruleId":"675","severity":1,"message":"676","line":62,"column":9,"nodeType":"677","messageId":"678","endLine":72,"endColumn":10},{"ruleId":"675","severity":1,"message":"676","line":80,"column":9,"nodeType":"677","messageId":"678","endLine":90,"endColumn":10},{"ruleId":"636","severity":1,"message":"637","line":8,"column":30,"nodeType":"638","messageId":"639","endLine":8,"endColumn":48},{"ruleId":"606","severity":1,"message":"651","line":2,"column":8,"nodeType":"608","messageId":"609","endLine":2,"endColumn":12},{"ruleId":"636","severity":1,"message":"637","line":12,"column":30,"nodeType":"638","messageId":"639","endLine":12,"endColumn":48},{"ruleId":"636","severity":1,"message":"637","line":11,"column":30,"nodeType":"638","messageId":"639","endLine":11,"endColumn":48},"no-native-reassign",["679"],"no-negated-in-lhs",["680"],"no-unused-vars","'authService' is defined but never used.","Identifier","unusedVar",["679"],["680"],"'edit' is defined but never used.","'Amplify' is defined but never used.","'Storage' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-dupe-keys","Duplicate key 'margint'.","ObjectExpression","unexpected","'save' is defined but never used.","'AddStudent' is defined but never used.","'about' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'AuthService' is defined but never used.","'Dropdown' is defined but never used.","'Rendering' is defined but never used.","no-self-assign","'this.setWrapperRef' is assigned to itself.","MemberExpression","selfAssignment","'goal' is assigned a value but never used.","'prac' is assigned a value but never used.","'Starpointz' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'CheckButton' is defined but never used.","'GoalEdit' is defined but never used.","'Homework' is defined but never used.","'ShowHomework' is defined but never used.","'Goal' is defined but never used.","'trash' is defined but never used.","'leaf' is defined but never used.","'required' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Logo' is defined but never used.","react/jsx-pascal-case","Imported JSX component Show_goal must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'Checkboxnum' is defined but never used.","'Checkboxnum2' is defined but never used.","'button' is defined but never used.","Duplicate key 'tooSmall'.","'Checkboxnum3' is defined but never used.","'bullet' is defined but never used.","Duplicate key 'placeholder'.","Duplicate key 'justifyContent'.","'legato' is defined but never used.","'Studentinfo' is defined but never used.","Imported JSX component Progress_circle must be in PascalCase or SCREAMING_SNAKE_CASE","'Student' is defined but never used.","Duplicate key 'time'.","Duplicate key 'firstName'.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]